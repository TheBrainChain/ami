{"version":3,"sources":["webpack://AMI/webpack/universalModuleDefinition","webpack://AMI/./src/cameras/cameras.orthographic.js","webpack://AMI/./src/controls/controls.trackball.js","webpack://AMI/./src/controls/controls.trackballortho.js","webpack://AMI/./src/controls/controls.orbit.js","webpack://AMI/./src/core/core.intersections.js","webpack://AMI/./node_modules/three/src/math/Box3.js","webpack://AMI/./node_modules/three/src/math/Ray.js","webpack://AMI/./node_modules/three/src/core/Layers.js","webpack://AMI/./node_modules/three/src/core/Raycaster.js","webpack://AMI/./node_modules/three/src/math/Matrix3.js","webpack://AMI/./node_modules/three/src/math/Plane.js","webpack://AMI/./node_modules/three/src/math/Triangle.js","webpack://AMI/./src/core/core.utils.js","webpack://AMI/./src/core/core.validators.js","webpack://AMI/./src/geometries/geometries.voxel.js","webpack://AMI/./src/geometries/geometries.slice.js","webpack://AMI/./src/helpers/helpers.border.js","webpack://AMI/./src/helpers/helpers.boundingbox.js","webpack://AMI/./src/helpers/helpers.contour.js","webpack://AMI/./src/helpers/helpers.localizer.js","webpack://AMI/./src/helpers/helpers.lut.js","webpack://AMI/./src/helpers/helpers.segmentationlut.js","webpack://AMI/./src/helpers/helpers.progressbar.eventbased.js","webpack://AMI/./src/helpers/helpers.material.mixin.js","webpack://AMI/./src/helpers/helpers.slice.js","webpack://AMI/./src/helpers/helpers.stack.js","webpack://AMI/./src/helpers/helpers.volumerendering.js","webpack://AMI/./src/helpers/helpers.progressbar.js","webpack://AMI/./src/loaders/loaders.base.js","webpack://AMI/./src/loaders/loaders.volume.js","webpack://AMI/./src/models/models.base.js","webpack://AMI/./src/models/models.frame.js","webpack://AMI/./src/models/models.voxel.js","webpack://AMI/./src/models/models.series.js","webpack://AMI/./node_modules/three/src/constants.js","webpack://AMI/./src/models/models.stack.js","webpack://AMI/./src/parsers/parsers.volume.js","webpack://AMI/./src/parsers/parsers.nifti.js","webpack://AMI/./src/presets/presets.segmentation.freesurfer.js","webpack://AMI/./src/presets/presets.segmentation.js","webpack://AMI/./src/shaders/helpers/shaders.helpers.unpack.js","webpack://AMI/./src/shaders/helpers/shaders.helpers.texture3d.js","webpack://AMI/./src/shaders/interpolation/shaders.interpolation.identity.js","webpack://AMI/./src/shaders/interpolation/shaders.interpolation.trilinear.js","webpack://AMI/./src/shaders/interpolation/shaders.interpolation.js","webpack://AMI/./src/shaders/shaders.base.js","webpack://AMI/./src/shaders/shaders.contour.fragment.js","webpack://AMI/./src/shaders/shaders.contour.uniform.js","webpack://AMI/./src/shaders/shaders.contour.vertex.js","webpack://AMI/./src/shaders/shaders.data.fragment.js","webpack://AMI/./src/shaders/shaders.data.uniform.js","webpack://AMI/./src/shaders/shaders.data.vertex.js","webpack://AMI/./node_modules/three/src/math/Vector2.js","webpack://AMI/./src/shaders/shaders.layer.uniform.js","webpack://AMI/./src/shaders/shaders.layer.fragment.js","webpack://AMI/./src/shaders/shaders.layer.vertex.js","webpack://AMI/./src/shaders/shaders.localizer.fragment.js","webpack://AMI/./src/shaders/shaders.localizer.uniform.js","webpack://AMI/./src/shaders/shaders.localizer.vertex.js","webpack://AMI/./src/shaders/helpers/shaders.helpers.intersectBox.js","webpack://AMI/./src/shaders/shaders.vr.fragment.js","webpack://AMI/./src/shaders/shaders.vr.uniform.js","webpack://AMI/./src/shaders/shaders.vr.vertex.js","webpack://AMI/./node_modules/const-ninf-float32/lib/index.js","webpack://AMI/./node_modules/const-pinf-float32/lib/index.js","webpack://AMI/./node_modules/events/events.js","webpack://AMI/./node_modules/math-abs/lib/index.js","webpack://AMI/./node_modules/math-ceil/lib/index.js","webpack://AMI/./node_modules/math-float32-to-binary-string/lib/div2.js","webpack://AMI/./node_modules/math-float32-to-binary-string/lib/index.js","webpack://AMI/./node_modules/math-float32-to-binary-string/lib/mult2.js","webpack://AMI/./node_modules/math-floor/lib/index.js","webpack://AMI/./node_modules/nifti-reader-js/src/nifti.js","webpack://AMI/./node_modules/nifti-reader-js/src/nifti1.js","webpack://AMI/./node_modules/nifti-reader-js/src/nifti2.js","webpack://AMI/./node_modules/nifti-reader-js/src/utilities.js","webpack://AMI/./node_modules/pako/dist/pako.esm.mjs","webpack://AMI/./node_modules/three/build/three.module.js","webpack://AMI/./node_modules/three/src/math/Matrix4.js","webpack://AMI/./node_modules/three/src/math/MathUtils.js","webpack://AMI/./node_modules/three/src/math/Quaternion.js","webpack://AMI/./node_modules/three/src/math/Vector3.js","webpack://AMI/./src/ami.ts","webpack://AMI/./src/core/core.colors.ts","webpack://AMI/./node_modules/utils-left-pad-string/lib/index.js","webpack://AMI/./node_modules/utils-repeat-string/lib/index.js","webpack://AMI/./node_modules/utils-right-pad-string/lib/index.js","webpack://AMI/./node_modules/validate.io-integer/lib/index.js","webpack://AMI/./node_modules/validate.io-nonnegative-integer/lib/index.js","webpack://AMI/./node_modules/validate.io-number/lib/index.js","webpack://AMI/./node_modules/validate.io-string-primitive/lib/index.js","webpack://AMI/webpack/bootstrap","webpack://AMI/webpack/runtime/compat get default export","webpack://AMI/webpack/runtime/define property getters","webpack://AMI/webpack/runtime/hasOwnProperty shorthand","webpack://AMI/webpack/runtime/make namespace object","webpack://AMI/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","camerasOrthographic","left","right","top","bottom","near","far","_front","_back","_directions","Vector3","_directionsLabel","_orientation","_convention","_stackOrientation","_right","_up","_direction","_controls","_box","_canvas","width","height","_fromFront","_angle","xCosine","yCosine","zCosine","controls","box","canvas","window","console","warn","Validators","log","this","_adjustTopDirection","crossVectors","ray","position","center","direction","intersections","_orderIntersections","Intersections","up","set","x","y","z","_updateCanvas","_updatePositionAndTarget","_updateMatrices","_updateDirections","_getMaxIndex","leftIndex","leftDirection","posteriorIndex","posteriorDirection","superiorIndex","superiorDirection","negate","_findMaxIndex","multiplyScalar","invertColumns","oppositePosition","_oppositePosition","clone","angle","rotationToApply","rotation","Matrix4","makeRotationAxis","Math","PI","applyMatrix4","factor","zoom","_computeZoom","min","horizontalDirection","verticalDirection","vMaxIndex","getComponent","vector","maxValue","abs","index","directions","target","maxIndices","_getMaxIndices","i","length","indices","push","dot","handleResize","sub","add","dimension","distanceTo","lookAt","update","updateProjectionMatrix","updateMatrixWorld","_vector2Label","scaledDirection","divideScalar","delta","label","pWorld","matrixWorld","normalize","_updateLabels","rotate","convention","orientation","directionsLabel","maxIndex","stackOrientation","OrthographicCamera","trackball","object","domElement","_this","STATE","undefined","document","enabled","screen","rotateSpeed","zoomSpeed","panSpeed","noRotate","noZoom","noPan","noCustom","forceState","staticMoving","dynamicDampingFactor","minDistance","maxDistance","Infinity","keys","lastPosition","_state","_prevState","_eye","_movePrev","Vector2","_moveCurr","_lastAxis","_lastAngle","_zoomStart","_zoomEnd","_touchZoomDistanceStart","_touchZoomDistanceEnd","_panStart","_panEnd","_customStart","_customEnd","target0","position0","up0","changeEvent","type","startEvent","endEvent","innerWidth","innerHeight","getBoundingClientRect","d","ownerDocument","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","handleEvent","event","axis","quaternion","eyeDirection","objectUpDirection","objectSidewaysDirection","moveDirection","mouseChange","objectUp","pan","getMouseOnScreen","pageX","pageY","getMouseOnCircle","keydown","removeEventListener","keyCode","keyup","addEventListener","mousedown","preventDefault","stopPropagation","button","copy","mousemove","mouseup","dispatchEvent","mousewheel","deltaMode","deltaY","touchstart","touches","dx","dy","sqrt","touchmove","touchend","contextmenu","rotateCamera","Quaternion","setLength","setFromAxisAngle","applyQuaternion","zoomCamera","panCamera","lengthSq","cross","subVectors","checkDistances","addVectors","custom","distanceToSquared","reset","setState","targetState","customStart","customEnd","dispose","EventDispatcher","trackballOrtho","state","NONE","ROTATE","ZOOM","PAN","SCROLL","TOUCH_ROTATE","TOUCH_ZOOM_PAN","radius","EPS","_changed","left0","right0","top0","bottom0","deltaX","scale_x","scale_y","orbit","three","THREE","OrbitControls","offset","quat","quatInverse","lastQuaternion","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","enableRotate","enablePan","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","zoom0","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","setFromUnitVectors","inverse","setFromVector3","rotateLeft","sphericalDelta","max","makeSafe","scale","panOffset","setFromSpherical","zoomChanged","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","DOLLY","TOUCH_DOLLY_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","element","body","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","clientWidth","dollyIn","dollyScale","dollyOut","handleMouseDownPan","clientX","clientY","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","handleTouchStartRotate","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","prototype","Object","create","constructor","defineProperties","get","value","noKeys","aabb","plane","validateAabb","validatePlane","fromAABB","getInverse","toAABB","t1","t0","planeAABB","posdir","bbox","CoreUtils","halfDimensions","rayPlaneInBBox","ray2","ray3","ray4","ray5","map","t","intersection","rayPlane","inBBox","find","findIntersection","myintersection","array","point","epsilon","Box3","minX","minY","minZ","maxX","maxY","maxZ","l","attribute","count","getX","getY","getZ","points","makeEmpty","il","expandByPoint","size","halfSize","_vector","expandByObject","isEmpty","scalar","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","union","children","sphere","clampPoint","normal","constant","triangle","getCenter","_center","_extents","_v0","a","_v1","b","_v2","c","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clamp","error","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","v1","v2","extents","j","fromArray","r","p0","p1","p2","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","det","s0","s1","sqrDist","extDet","invDet","tca","d2","radius2","thc","denominator","distanceToPoint","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","matrix4","transformDirection","Layers","mask","channel","layers","Raycaster","camera","params","Mesh","Line","threshold","LOD","Points","Sprite","PointCloud","ascSort","intersectObject","raycaster","intersects","recursive","test","raycast","assign","setFromCamera","coords","setFromMatrixPosition","unproject","sort","intersectObjects","objects","Matrix3","elements","arguments","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","m","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","s","e","f","g","h","t11","t12","t13","detInv","tmp","setFromMatrix4","invert","transpose","tx","ty","sx","sy","cx","cy","cos","sin","isMatrix3","_vector1","_vector2","_normalMatrix","Plane","w","setFromNormalAndCoplanarPoint","inverseNormalLength","line","start","startSign","endSign","end","intersectsPlane","optionalNormalMatrix","normalMatrix","getNormalMatrix","referencePoint","coplanarPoint","applyMatrix3","isPlane","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getBarycoord","p3","uv1","uv2","uv3","addScaledVector","i0","i1","i2","getNormal","setFromCoplanarPoints","getUV","containsPoint","isFrontFacing","intersectsTriangle","p","d1","d3","d4","vc","d5","d6","vb","va","data","minMax","numPixels","spv","obj","HTMLElement","nodeType","style","str","String","url","parsedUrl","URL","filename","searchParams","extension","pathname","query","search","split","pop","splittedName","isNaN","indexOf","includes","xCos","yCos","zCos","spacing","registrationMatrix","ijk2LPS","premultiply","aabb2LPS","lps2IJK","worldCoordinates","dataCoordinate","floor","stack","coordinate","getPixelData","_frame","setPixelData","slope","intercept","centerOfMass","reference","referenceDirection","base","orderedpoints","xy","atan2","noDups","mesh","setFromObject","project","offsetWidth","offsetHeight","rayCaster","values","round","intersect","worldToData","numberOfChannels","rescaleSlopeIntercept","rescaleSlope","rescaleIntercept","avg","reduce","sum","val","prev","mean","sd","faces","area","vertices","forEach","elem","getArea","numberAsString","number","Number","dots","match","replaceBy","stringWithoutComma","replace","objectToTest","hasOwnProperty","identity","determinant","vector3","geometriesVoxel","BoxGeometry","Constructor","dataPosition","_location","applyMatrix","makeTranslation","verticesNeedUpdate","location","geometriesSlice","coreIntersections","err","Error","coreUtils","shape","Shape","moveTo","positions","Float32Array","toArray","lineTo","setAttribute","Float32BufferAttribute","ShapeBufferGeometry","helpersBorder","helpersSlice","_helpersSlice","_visible","_color","_material","_geometry","_mesh","_create","_update","visible","color","LineBasicMaterial","linewidth","BufferGeometry","nbOfVertices","attributes","aabbSpace","remove","material","Object3D","helpersBoundingBox","_stack","_meshStack","dimensions","dimensionsIJK","halfDimensionsIJK","MeshBasicMaterial","wireframe","BoxHelper","helpersContour","texture","_textureToFilter","_contourWidth","_contourOpacity","_canvasWidth","_canvasHeight","_shadersFragment","ShadersFragment","_shadersVertex","ShadersVertex","_uniforms","ShadersUniform","_prepareMaterial","_ijk2LPS","uWidth","uOpacity","uCanvasWidth","uCanvasHeight","fs","vs","ShaderMaterial","side","DoubleSide","uniforms","vertexShader","compute","fragmentShader","transparent","uTextureFilled","needsUpdate","contourOpacity","contourWidth","canvasWidth","canvasHeight","helpersLocalizer","referencePlane","_referencePlane","_plane1","_color1","_plane2","_color2","_plane3","_color3","uSlice","uPlane1","uPlaneColor1","uPlane2","uPlaneColor2","uPlane3","uPlaneColor3","plane1","color1","plane2","color2","plane3","color3","helpersLut","domTarget","lut","lutO","opacity","discrete","_dom","getElementById","_discrete","_lut","_luts","_opacity","_lutO","_lutsO","initCanvas","paintCanvas","default","spectrum","hot_and_cold","gold","red","green","blue","walking_dead","random","muscle_bone","linear","lowpass","bandpass","highpass","flat","linear_full","_canvasContainer","initCanvasContainer","_canvasBg","createCanvas","appendChild","dom","canvasContainer","border","createElement","ctx","getContext","clearRect","globalCompositeOperation","lineWidth","currentPos","nextPos","previousPos","from","to","beginPath","strokeStyle","stroke","closePath","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","mapping","UVMapping","wrapS","wrapT","ClampToEdgeWrapping","magFilter","minFilter","NearestFilter","premultiplyAlpha","targetLUT","newLuts","targetLUTO","newLutsO","available","luts","defaultSegmentation","0","1","HelpersSegmentationLut","segmentation","_segmentation","xCoord","yCoord","HelpersProgressBarEventBased","emitter","_isFunction","emit","_emitter","initContainerDom","initEventListenner","loaded","totalFile","fn","toString","call","on","totalFiles","files","_domTotalFile","innerHTML","fetchLi","fileTag","file","append","className","id","marginBottom","fetchprogress","_domProcessList","fileFetchDom","total","liParent","result","parseprogress","fileParseDom","parsed","_domCurrentFile","_domCurrentProgress","wrap","helpersMaterialMixin","extraOptions","globalOptions","options","_textures","_rawData","tex","DataTexture","rawData","textureSize","textureType","UnsignedByteType","flipY","_invert","_lutTexture","_intensityAuto","_interpolation","_index","_windowWidth","_windowCenter","_rescaleSlope","_rescaleIntercept","_spacing","_thickness","_thicknessMethod","_lowerThreshold","_upperThreshold","_borderColor","_planePosition","_planeDirection","_aaBBspace","_init","uSpacing","thickness","uThickness","thicknessMethod","uThicknessMethod","windowWidth","updateIntensitySettingsUniforms","windowCenter","upperThreshold","lowerThreshold","lutTexture","intensityAuto","updateIntensitySettings","interpolation","_updateMaterial","_halfDimensions","borderColor","uBorderColor","Color","_prepared","_packed","_toAABB","aaBBox","AABBox","centerAABBox","lps2AABB","prepared","packed","SliceGeometryContructor","uTextureSize","uDataDimensions","uWorldToData","uNumberOfChannels","uPixelType","pixelType","uBitsAllocated","bitsAllocated","uPackedPerPixel","packedPerPixel","_prepareTexture","uTextureContainer","textureUnits","_createMaterial","updateIntensitySetting","_minMax","uRescaleSlopeIntercept","uWindowCenterWidth","uLowerUpperThreshold","uInvert","uInterpolation","uLut","uTextureLUT","setting","frame","Vector4","dataToWorld","helpersStack","_bBox","_slice","_border","_dummy","_autoWindowLevel","_outOfBounds","_orientationMaxIndex","_orientationSpacing","planePosition","_prepareSlicePosition","_isIndexOutOfBounds","_computeOrientationMaxIndex","_computeOrientationSpacing","planeDirection","_prepareDirection","outOfBounds","orientationMaxIndex","orientationSpacing","_prepareStack","_prepareBBox","_prepareSlice","_prepareBorder","prepare","pack","HelpersBoundingBoxConstructor","HelpersBorderContructor","_prepareSliceIndex","SliceHelperConstructor","rPosition","helpersVolumeRendering","_algorithm","_alphaCorrection","_shading","_shininess","_steps","_offset","_prepareGeometry","uWorldBBox","worldBoundingBox","uAlphaCorrection","uShading","uShininess","uSteps","uAlgorithm","BackSide","worldBBox","centerLPS","worldCenter","steps","alphaCorrection","shading","shininess","algorithm","HelpersProgressBar","container","_container","_modes","load","name","parse","requestAnimationFrameID","_mode","_value","_total","_totalFiles","init","progressContainers","getElementsByClassName","parentNode","removeChild","cancelAnimationFrame","progressContainer","_domContainer","mode","bar","_domBar","updateUI","requestAnimationFrame","progress","progressBar","classList","backgroundColor","zIndex","LoadersBase","ProgressBar","_loaded","_totalLoaded","_parsed","_totalParsed","_data","_progressBar","free","requests","Promise","resolve","reject","request","XMLHttpRequest","open","crossOrigin","responseType","onloadstart","time","Date","onload","status","buffer","response","totalLoaded","statusText","onerror","onabort","ontimeout","onprogress","onloadend","Map","send","fetchSequence","fetch","all","then","rawdata","Array","isArray","loadSequences","loadSequenceGroup","loadSequence","EventEmitter","PAKO","require","LoadersVolumes","setTimeout","dataset","_preprocess","mhdFile","filter","_filterByExtension","bind","rawFile","mhdBuffer","rawBuffer","Parser","_parser","volumeParser","series","ModelsSeries","rawHeader","seriesInstanceUID","transferSyntaxUID","seriesDate","seriesDescription","studyDate","studyDescription","numberOfFrames","modality","segmentationType","segmentationSegments","patientID","patientName","patientAge","patientBirthdate","patientSex","ModelsStack","pixelRepresentation","spacingBetweenSlices","parseFrameClosure","dataParser","parseFrame","ModelsFrame","sopInstanceUID","frameTime","ultrasoundRegions","rows","columns","pixelPaddingValue","pixelData","extractPixelData","pixelSpacing","sliceThickness","imageOrientation","rightHanded","imagePosition","dimensionIndexValues","instanceNumber","minMaxPixelData","referencedSegmentNumber","ParsersNifti","gzcompressed","shift","decompressedData","inflate","item","toUpperCase","ModelsBase","_id","referenceArray","targetArray","_validateModelArray","targetLength","refLength","merge","model","validate","modelArray","_sopInstanceUID","_url","_stackID","_frameTime","_ultrasoundRegions","_rows","_columns","_dimensionIndexValues","_imagePosition","_imageOrientation","_rightHanded","_sliceThickness","_spacingBetweenSlices","_pixelPaddingValue","_pixelRepresentation","_pixelType","_pixelSpacing","_pixelAspectRatio","_pixelData","_instanceNumber","_bitsAllocated","_numberOfChannels","_dist","_referencedSegmentNumber","cosines","spacingXY","_compareArrays","pixelAspectRatio","column","row","context","imageData","createImageData","_frameToCanvas","putImageData","toDataURL","padding","Uint8Array","range","normalized","_pixelTo8Bit","packedValue","join","dist","ModelsVoxel","_worldCoordinates","_dataCoordinates","_screenCoordinates","dataCoordinates","screenCoordinates","_concatenationUID","_seriesInstanceUID","_transferSyntaxUID","_seriesNumber","_seriesDescription","_seriesDate","_studyDescription","_studyDate","_accessionNumber","_modality","_dimensionIndexSequence","_numberOfFrames","_rawHeader","_patientID","_patientName","_patientAge","_patientBirthdate","_patientSex","_segmentationType","_segmentationSegments","mergeSeries","computeNumberOfFrames","computeCosines","mergeModels","seriesContainer","RGBAFormat","binaryString","_uid","_textureSize","_textureUnits","POSITIVE_INFINITY","NEGATIVE_INFINITY","_regMatrix","_lps2IJK","_aabb2LPS","_lps2AABB","_dimensionsIJK","_halfDimensionsIJK","_origin","_xCosine","_yCosine","_zCosine","_packedPerPixel","_segmentationDefaultColor","_frameSegment","_segmentationLUT","_segmentationLUTO","mergedFrames","_computeDistanceArrayMap","_sortDistanceArraySort","prevIndex","k","dict","parseInt","segmentNumber","recommendedDisplayCIELab","CoreColors","rgb","prepareSegmentation","orderFrames","computeSpacing","_arrayToVector3","computeIJK2LPS","computeLPS2AABB","middleFrameIndex","middleFrame","computeMinMaxIntensities","packedEcho","_orderFrameOnDimensionIndicesArraySort","_sortInstanceNumberArraySort","_sortSopInstanceUIDArraySort","xySpacing","zSpacing","stackID","nbVoxels","textureDimension","requiredTextures","ceil","voxelIndexStart","voxelIndexStop","ii","_packTo8Bits","_textureType","channels","startVoxel","stopVoxel","packIndex","frameIndex","inFrameIndex","frameDimension","channelOffset","raw","bitStringArray","dims","world","world0","world7","centerBBox","regMatrix","segmentationLUT","segmentationLUTO","ParsersVolume","_arrayBuffer","_dataSet","_niftiHeader","_niftiImage","_ordered","_orderedData","_qfac","NiftiReader","datatypeCode","numBitsPerVoxel","pixDims","qform_code","quatern_b","quatern_c","quatern_d","sform_code","rowX","affine","rowY","qoffset_x","qoffset_y","qoffset_z","scl_slope","scl_inter","_decompressUncompressed","frameOffset","_reorderData","slice","Int8Array","Uint16Array","Int16Array","Int32Array","totalNumPixels","numPixels2","rgbaIndex","rIndex","gIndex","bIndex","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","77","78","79","80","81","82","83","84","85","192","86","87","88","96","97","98","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","176","170","171","172","173","174","175","177","178","179","180","181","182","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","498","499","500","501","502","503","504","505","506","507","508","550","551","552","553","554","555","556","557","558","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","690","691","701","702","703","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","3000","3001","3002","3003","3004","3005","3006","3007","3008","3009","3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020","3021","3022","3023","3024","3025","3026","3027","3028","3029","3030","3031","3032","3033","3034","3035","4000","4001","4002","4003","4004","4005","4006","4007","4008","4009","4010","4011","4012","4013","4014","4015","4016","4017","4018","4019","4020","4021","4022","4023","4024","4025","4026","4027","4028","4029","4030","4031","4032","4033","4034","4035","3201","3203","3204","3205","3206","3207","4201","4203","4204","4205","4206","4207","1100","1101","1102","1103","1104","1200","1201","1202","1205","1206","1207","1210","1211","1212","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151","2152","2153","2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179","2180","2181","2200","2201","2202","2205","2206","2207","2210","2211","2212","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","4100","4101","4102","4103","4104","4105","4106","4107","4108","4109","4110","4111","4112","4113","4114","4115","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126","4127","4128","4129","4130","4131","4132","4133","4134","4135","4136","4137","4138","4139","4140","4141","4142","4143","4144","4145","4146","4147","4148","4149","4150","4151","4152","4153","4154","4155","4156","4157","4158","4159","4160","4161","4162","4163","4164","4165","4166","4167","4168","4169","4170","4171","4172","4173","4174","4175","4176","4177","4178","4179","4180","4181","5001","5002","5100","5101","5102","5103","5104","5105","5106","5107","5108","5109","5110","5111","5112","5113","5114","5115","5116","5117","5200","5201","5202","5203","5204","5205","5206","5207","5208","5209","5210","5211","5212","5213","5214","5215","5216","5217","6000","6001","6002","6003","6010","6020","6030","6040","6050","6060","6070","6080","7001","7002","7003","7004","7005","7006","7007","7008","7009","7010","7011","7012","7013","7014","7015","7016","7017","7018","7019","7020","7100","7101","8001","8002","8003","8004","8005","8006","8007","8008","8009","8010","8011","8012","8013","8014","9000","9001","9002","9003","9004","9005","9006","9500","9501","9502","9503","9504","9505","9506","11100","11101","11102","11103","11104","11105","11106","11107","11108","11109","11110","11111","11112","11113","11114","11115","11116","11117","11118","11119","11120","11121","11122","11123","11124","11125","11126","11127","11128","11129","11130","11131","11132","11133","11134","11135","11136","11137","11138","11139","11140","11141","11142","11143","11144","11145","11146","11147","11148","11149","11150","11151","11152","11153","11154","11155","11156","11157","11158","11159","11160","11161","11162","11163","11164","11165","11166","11167","11168","11169","11170","11171","11172","11173","11174","11175","12100","12101","12102","12103","12104","12105","12106","12107","12108","12109","12110","12111","12112","12113","12114","12115","12116","12117","12118","12119","12120","12121","12122","12123","12124","12125","12126","12127","12128","12129","12130","12131","12132","12133","12134","12135","12136","12137","12138","12139","12140","12141","12142","12143","12144","12145","12146","12147","12148","12149","12150","12151","12152","12153","12154","12155","12156","12157","12158","12159","12160","12161","12162","12163","12164","12165","12166","12167","12168","12169","12170","12171","12172","12173","12174","12175","13100","13101","13102","13103","13104","13105","13106","13107","13108","13109","13110","13111","13112","13113","13114","13115","13116","13117","13118","13119","13120","13121","13122","13123","13124","13125","13126","13127","13128","13129","13130","13131","13132","13133","13134","13135","13136","13137","13138","13139","13140","13141","13142","13143","13144","13145","13146","13147","13148","13149","13150","13151","13152","13153","13154","13155","13156","13157","13158","13159","13160","13161","13162","13163","13164","13165","13166","13167","13168","13169","13170","13171","13172","13173","13174","13175","14100","14101","14102","14103","14104","14105","14106","14107","14108","14109","14110","14111","14112","14113","14114","14115","14116","14117","14118","14119","14120","14121","14122","14123","14124","14125","14126","14127","14128","14129","14130","14131","14132","14133","14134","14135","14136","14137","14138","14139","14140","14141","14142","14143","14144","14145","14146","14147","14148","14149","14150","14151","14152","14153","14154","14155","14156","14157","14158","14159","14160","14161","14162","14163","14164","14165","14166","14167","14168","14169","14170","14171","14172","14173","14174","14175","PresetsSegmentation","presetID","_presetID","_presets","presetSegs","fetchPreset","targetPreset","presetObj","presets","Freesurfer","freesurferSegmentation","_packedData","_unpackedData","_base","baseFragment","packedData","unpackedData","computeDefinition","_functions","_name","_definition","content","upack8","upack16","upack32","upackIdentity","uInt8","uInt16","uInt32","uFloat32","ShadersBase","_dataValue","dataValue","_currentVoxel","currentVoxel","Texture3d","Unpack","_gradient","gradient","InterpolationIdentity","InterpolationTrilinear","_main","main","property","uniform","typeGLSL","functions","shadersInterpolation","uLutSegmentation","uTextureLUTSegmentation","uBorderWidth","uBorderMargin","uBorderDashLength","minVal","maxVal","alpha","isVector2","uTextureBackTest0","uTextureBackTest1","uOpacity0","uOpacity1","uType0","uType1","uTrackMouse","uMouse","_rayOrigin","_rayDirection","_aabbMin","_aabbMax","_tNear","_tFar","_intersect","rayOrigin","rayDirection","aabbMin","aabbMax","tNear","tFar","shadersIntersectBox","uFrequence","uAmplitude","uAmbient","uAmbientColor","uSampleColorToAmbient","uSpecular","uSpecularColor","uDiffuse","uDiffuseColor","uSampleColorToDiffuse","uLightPosition","uLightPositionInCamera","uIntensity","FLOAT32_VIEW","Uint32Array","ReflectOwnKeys","R","Reflect","ReflectApply","apply","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","once","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","unshift","warned","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","n","wrapListener","arg","defineProperty","enumerable","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","len","listeners","addListener","prependListener","prependOnceListener","list","originalListener","spliceOne","off","removeAllListeners","key","rawListeners","eventNames","pinf","ninf","rpad","lpad","repeat","div2","mult2","nbits","exp","BIAS","substring","nifti","NIFTI1","NIFTI2","Utils","pako","isNIFTI1","buf","mag1","mag2","mag3","byteLength","STANDARD_HEADER_SIZE","DataView","getUint8","MAGIC_NUMBER_LOCATION","MAGIC_NUMBER","isNIFTI2","isNIFTI","isCompressed","magicCookie1","magicCookie2","GUNZIP_MAGIC_COOKIE1","GUNZIP_MAGIC_COOKIE2","decompress","readHeader","header","hasExtension","extensionFlag","readImage","imageOffset","vox_offset","timeDim","statDim","imageSize","readExtension","loc","getExtensionLocation","extensionSize","readExtensionData","littleEndian","dim_info","intent_p1","intent_p2","intent_p3","intent_code","slice_start","slice_end","slice_code","xyzt_units","cal_max","cal_min","slice_duration","toffset","description","aux_file","intent_name","magic","isHDR","extensionCode","TYPE_NONE","TYPE_BINARY","TYPE_UINT8","TYPE_INT16","TYPE_INT32","TYPE_FLOAT32","TYPE_COMPLEX64","TYPE_FLOAT64","TYPE_RGB24","TYPE_INT8","TYPE_UINT16","TYPE_UINT32","TYPE_INT64","TYPE_UINT64","TYPE_FLOAT128","TYPE_COMPLEX128","TYPE_COMPLEX256","XFORM_UNKNOWN","XFORM_SCANNER_ANAT","XFORM_ALIGNED_ANAT","XFORM_TALAIRACH","XFORM_MNI_152","SPATIAL_UNITS_MASK","TEMPORAL_UNITS_MASK","UNITS_UNKNOWN","UNITS_METER","UNITS_MM","UNITS_MICRON","UNITS_SEC","UNITS_MSEC","UNITS_USEC","UNITS_HZ","UNITS_PPM","UNITS_RADS","MAGIC_COOKIE","MAGIC_NUMBER2","EXTENSION_HEADER_SIZE","ctr","ctrOut","ctrIn","magicCookieVal","getIntAt","getByteAt","getShortAt","getFloatAt","getStringAt","getExtensionSize","getExtensionCode","toFormattedString","fmt","formatNumber","string","getDatatypeCodeString","getUnitsCodeString","getTransformCodeString","code","getQformMat","convertNiftiQFormToNiftiSForm","qb","qc","qd","qx","qy","qz","dz","qfac","xd","yd","zd","convertNiftiSFormToNEMA","xi","xj","xk","yi","yj","yk","zi","zj","zk","detQ","q","ibest","jbest","kbest","pbest","qbest","rbest","M","vbest","Q","P","iChar","jChar","kChar","iSense","jSense","kSense","nifti_mat33_determ","nifti_mat33_mul","A","B","C","r11","r12","r13","r21","r22","r23","r31","r32","r33","getLongAt","getDoubleAt","crcTable","ch","fromCharCode","getInt8","getInt16","getInt32","getFloat32","getFloat64","toArrayBuffer","ab","view","ArrayBuffer","isString","num","shortFormat","toPrecision","parseFloat","makeCRCTable","crc32","dataView","crc","zero","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES","_dist_code","_length_code","MAX_MATCH","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","res","gen_codes","bl_count","next_code","MAX_BITS","bits","init_block","LITERALS","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","last_lit","matches","bi_windup","smaller","depth","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","extra","lx","d_buf","l_buf","build_tree","desc","stree","node","heap_max","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block","stored_len","last","subarray","copy_block","trees","_tr_init","LENGTH_CODES","L_CODES","tr_static_init","l_desc","d_desc","bl_desc","_tr_flush_block","opt_lenb","static_lenb","max_blindex","level","strm","data_type","black_mask","detect_data_type","BL_CODES","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank","send_all_trees","_tr_tally","lit_bufsize","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","pos","s2","table","makeTable","crc32_1","messages","constants","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","_tr_init$1","_tr_stored_block$1","_tr_flush_block$1","_tr_tally$1","_tr_align$1","Z_FIXED$1","Z_UNKNOWN$1","MAX_MATCH$1","MIN_LOOKAHEAD","HCRC_STATE","BUSY_STATE","FINISH_STATE","errorCode","msg","zero$1","HASH","hash_shift","hash_mask","flush_pending","avail_out","output","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","input","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","hash_size","head","insert","ins_h","deflate_fast","flush","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH$1","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","max_block_size","pending_buf_size","max_start","DeflateState","gzhead","gzindex","method","last_flush","w_bits","hash_bits","HEAP_SIZE$1","MAX_BITS$1","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1","beg","old_flush","text","hcrc","comment","os","level_flags","charCodeAt","bstate","deflate_huff","deflate_rle","dictionary","dictLength","tmpDict","avail","next","_has","common","sources","source","chunks","chunk","STR_APPLY_UIA_OK","__","_utf8len","strings","c2","m_pos","str_len","buf_len","out","utf16buf","c_len","buf2binstring","zstream","Z_NO_FLUSH$1","Z_FULL_FLUSH$1","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$1","Deflate","chunkSize","opt","gzip","ended","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","deflate","deflateRaw","inffast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane","lbase","lext","dbase","dext","inftrees","lens","lens_index","codes","table_index","work","opts","incr","fill","low","sym","curr","drop","used","huff","base_index","MAXBITS","offs","here_bits","here_op","here_val","extra_index","Z_FINISH$2","Z_BLOCK$1","Z_OK$2","Z_STREAM_END$2","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_BUF_ERROR$1","Z_DEFLATED$2","TYPE$1","BAD$1","zswap32","InflateState","havedict","check","wbits","ncode","nlen","ndist","have","lendyn","distdyn","back","was","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","src","inflate_1","put","last_bits","last_op","last_val","hbuf","order","inf_leave","done","xflags","extra_len","dictid","gzheader","toString$1","Z_NO_FLUSH$2","Z_FINISH$3","Z_OK$3","Z_STREAM_END$3","Z_NEED_DICT$1","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_MEM_ERROR$1","Inflate","inflate$1","inflator","last_avail_out","next_out_utf8","tail","utf8str","inflate_1$1","inflateRaw","ungzip","Deflate$1","deflate$2","deflateRaw$1","gzip$1","Inflate$1","inflate$2","inflateRaw$1","ungzip$1","Deflate_1$1","deflate_1$2","deflateRaw_1$1","gzip_1$1","Inflate_1$1","inflate_1$2","inflateRaw_1$1","ungzip_1","constants_1","AddEquation","RepeatWrapping","MirroredRepeatWrapping","LinearFilter","LinearMipmapLinearFilter","UnsignedShortType","UnsignedIntType","FloatType","HalfFloatType","UnsignedInt248Type","RGBFormat","DepthFormat","DepthStencilFormat","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","LinearEncoding","KeepStencilOp","StaticDrawUsage","DynamicDrawUsage","GLSL3","hasEventListener","listenerArray","splice","_seed","MathUtils","DEG2RAD","RAD2DEG","generateUUID","d0","euclideanModulo","mapLinear","a1","a2","b2","lerp","damp","lambda","dt","pingpong","smoothstep","smootherstep","randInt","high","randFloat","randFloatSpread","seededRandom","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","c13","s13","c1_3","s1_3","c3_1","s3_1","ImageUtils","getDataURL","image","HTMLCanvasElement","createElementNS","ImageData","drawImage","textureId","DEFAULT_IMAGE","DEFAULT_MAPPING","format","anisotropy","encoding","super","uuid","mipmaps","internalFormat","matrixAutoUpdate","generateMipmaps","unpackAlignment","version","onUpdate","setUvTransform","meta","isRootObject","textures","metadata","generator","images","isDataTexture","serializeImage","uv","HTMLImageElement","ImageBitmap","isTexture","acos","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xz","yz","getW","isVector4","WebGLRenderTarget","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","samples","isWebGLMultisampleRenderTarget","_x","_y","_z","_w","qa","qm","slerp","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","EPSILON","tDir","_onChangeCallback","euler","isEuler","_order","c1","c3","s3","halfAngle","trace","vFrom","vTo","step","angleTo","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","isQuaternion","multiplyVectors","_quaternion","setFromEuler","qw","ix","iy","iz","iw","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","ax","ay","az","bx","by","bz","planeNormal","projectOnVector","setFromSphericalCoords","sinPhiRadius","setFromCylindricalCoords","sz","isVector3","_vector$1","_box$1","Sphere","optionalCenter","maxRadiusSq","radiusSum","intersectsSphere","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","_vector$2","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$1","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","x2","y2","z2","wx","wy","wz","_m1","invSX","invSY","invSZ","setFromRotationMatrix","isMatrix4","_matrix","_quaternion$1","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","_object3DId","_v1$2","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","parent","DefaultUp","_onChange","configurable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","isObject3D","onBeforeRender","onAfterRender","updateMatrix","decompose","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","multiply","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","extractRotation","clear","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","traverse","traverseVisible","traverseAncestors","force","updateParents","updateChildren","toJSON","geometries","materials","shapes","skeletons","serialize","library","JSON","stringify","isInstancedMesh","instanceMatrix","isMesh","isLine","isPoints","parameters","isSkinnedMesh","bindMode","bindMatrix","skeleton","uuids","animation","extractFromCache","cache","child","_v0$1","_v1$3","_v2$1","materialId","Material","fog","blending","vertexColors","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","isMaterial","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","isColor","isRoot","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","reflectivity","refractionRatio","combine","envMapIntensity","gradientMap","sizeAttenuation","dashSize","gapSize","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","skinning","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","setRGB","setHex","setStyle","hex","handleAlpha","exec","components","setHSL","charAt","setColorName","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","getHSL","NAMES","isMeshBasicMaterial","_vector$3","_vector2$1","BufferAttribute","itemSize","usage","updateRange","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","Float64BufferAttribute","Float64Array","arrayMax","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","setX","setY","setZ","setW","setXYZW","onUpload","isFloat16BufferAttribute","_m1$2","_obj","_box$2","_boxMorphTargets","_vector$4","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","isBufferGeometry","getIndex","setIndex","getAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","translate","makeScale","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","jl","computeFaceNormals","computeTangents","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","normalizeNormals","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","attributeData","hasMorphAttributes","attributeArray","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","updateMorphTargets","checkBufferGeometryIntersection","morphPosition","morphInfluences","morphTargetInfluences","influence","boneTransform","intersectTriangle","checkIntersection","face","morphTargetDictionary","ml","intersectsBox","groupMaterial","faceIndex","isGeometry","widthSegments","heightSegments","depthSegments","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","mergeUniforms","merged","UniformsUtils","defines","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","Camera","PerspectiveCamera","aspect","focus","filmGauge","filmOffset","isShaderMaterial","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","makePerspective","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","shader","tEquirect","currentMinFilter","stencil","_sphere$1","_vector$5","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","isInterleavedBufferAttribute","deleteBuffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","BYTES_PER_ELEMENT","bufferSubData","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","copyPosition","toneMapping","WebGLBindingStates","maxVertexAttributes","getParameter","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","instanceColor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","has","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","cubemap","fromEquirectangularTexture","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","MAX_SAFE_INTEGER","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","physical","transmission","transmissionMap","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","getShaderParameter","getShaderInfoLog","trim","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","generateExtensions","customDefines","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","intersectsObject","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","enable","disable","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","activeTexture","webglSlot","useProgram","setMaterial","frontFaceCW","setLineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","filterToGL","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","isCube","isRenderTarget3D","createFramebuffer","createRenderbuffer","glTextureType","webglDepthTexture","setupDepthTexture","setupDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","WebXRController","_targetRay","_grip","_hand","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","onSessionEnd","disconnect","setFramebuffer","isPresenting","onInputSourcesChange","inputSources","removed","added","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","async","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","getCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","transform","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","display","createCanvasElement","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","sortObjects","toneMappingExposure","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","initGLContext","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","compiled","material2","initMaterial","projectObject","isGroup","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","camera2","renderObjectImmediate","lightsStateVersion","programCacheKey","programChange","needsLights","materialNeedsLights","progUniforms","uniformsList","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","boneMatrices","boneTextureSize","setFromProjectionMatrix","opaqueObjects","transparentObjects","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","joints","inputState","pinching","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","handedness","getPose","targetRaySpace","gripSpace","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","transformVertex","vertexPosition","mvPosition","setFromMatrixScale","_v1$4","_v2$2","_basePosition","_skinIndex","_skinWeight","_vector$7","_matrix$1","SkinnedMesh","bindMatrixInverse","Bone","calculateInverses","normalizeSkinWeights","skinWeight","manhattanLength","skinIndex","weight","boneIndex","boneInverses","isBone","_offsetMatrix","_identityMatrix","Skeleton","bone","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","InstancedMesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distanceSqToSegment","_start$1","_end$1","LineSegments","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","video","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","CompressedTexture","isCanvasTexture","linkedList","dim","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","earcutLinked","ear","invSize","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","compareX","eliminateHole","hole","outerNode","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","getLeftmost","leftmost","px","py","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","Node","an","bp","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","holeIndices","removeDupEndPts","addContour","holeIndex","hasHoles","outerLen","queue","eliminateHoles","Earcut","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","hl","ahole","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","ParametricGeometry","slices","stacks","pu","pv","sliceCount","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","vertex","toJSON$1","ior","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","isView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","KeyframeTrack","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","NormalAnimationBlendMode","jsonTracks","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","o","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","optimize","typeName","toLowerCase","getTrackTypeForValueTypeName","Cache","DefaultLoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","Loader","manager","withCredentials","resourcePath","requestHeader","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","CompressedTextureLoader","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","Blob","parser","DOMParser","parseFromString","callbacks","overrideMimeType","setResponseType","setMimeType","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","DataTextureLoader","TextureLoader","Curve","arcLengthDivisions","texData","isJPEG","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","segments","closed","mat","MAX_VALUE","tz","fromJSON","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","isArcCurve","pz","CatmullRomCurve3","curveType","intPoint","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","isCatmullRomCurve3","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","LineCurve3","isLineCurve3","CurvePath","curves","autoClose","curve","startPoint","endPoint","curveLengths","getCurveLengths","diff","segmentLength","cacheLengths","sums","Path","currentPoint","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","absarc","absellipse","firstPoint","lastPoint","holesPts","getPointsHoles","Light","_lightPositionWorld","_lookTarget","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","power","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","PointLightShadow","_cubeDirections","_cubeUps","scaleW","scaleH","makeOrthographic","DirectionalLightShadow","isDirectionalLightShadow","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","InstancedBufferGeometry","InstancedBufferAttribute","ImageBitmapLoader","createImageBitmap","isImageBitmapLoader","setOptions","fetchOptions","credentials","headers","blob","colorSpaceConversion","imageBitmap","catch","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","createPath","char","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","paths","chars","line_height","yMax","yMin","underlineThickness","createPaths","toShapes","isFont","AudioLoader","bufferCopy","AudioContext","webkitAudioContext","decodeAudioData","audioBuffer","sky","ground","isHemisphereLightProbe","isAmbientLightProbe","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","results","objectName","objectIndex","propertyIndex","lastDot","lastIndexOf","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","atStart","atEnd","weightNow","weightThen","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","setBuffer","setType","setItemSize","setCount","_vector$8","Box2","isBox2","_startP","_startEnd","ImmediateRenderObject","_vector$a","_boneMatrix","_matrixWorldInv","getBoneList","boneList","_box$3","_floatView","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","backgroundMaterial","_lodPlanes","_sizeLods","_sigmas","_createPlanes","lod","sizeLod","sigma","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","construct","fromPoints","setColors","isSkeletonHelper","extractUrlBase","LoaderUtils","Handlers","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","clampToLine","startEnd2","closestPointToPointParameter","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setDrawMode","drawMode","_currentLevel","levels","addLevel","getObjectForDistance","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","drawcalls","offsets","maxInstancedCount","linePrecision","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","transparency","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","gain","createGain","connect","getInput","autoplay","detune","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","currentTime","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","setTargetAtTime","getFilters","setFilters","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","revision","__THREE__","COLORS","cielab2XYZ","xyz2RGB","cielab2RGB","isNonNegativeInteger","pad","rpt","cnt","isNumber","valueOf","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","definition","prop","Symbol","toStringTag"],"mappings":"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AAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,mBAC5C,CAAC,kBAAoB,EAAG,iBAAmB,oBAC3C,CAAC,kBAAoB,EAAG,iBAAmB,oBAC3C,CAAC,kBAAoB,EAAG,GAAK,oBAC7B,CAAC,kBAAoB,EAAG,iBAAmB,oBAC3C,CAAC,kBAAoB,EAAG,iBAAmB,oBAC3C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,mBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,mBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,mBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,mBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,CAAC,kBAAoB,EAAG,kBAAoB,oBAC5C,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AAC,oBAAsB,qBACvB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,GAAK,IACN,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,iBAAmB,kBACpB,CAAC,GAAK,IACN,CAAC,iBAAmB,kBACpB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,mBAAqB,oBACtB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,GAAK,IACN,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,kBAAoB,mBACrB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,GAAK,IACN,CAAC,iB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","file":"ami.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AMI\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AMI\"] = factory();\n\telse\n\t\troot[\"AMI\"] = factory();\n})(self, function() {\nreturn ","import Intersections from '../core/core.intersections';\nimport Validators from '../core/core.validators';\n\n/**\n * Orthographic camera from THREE.JS with some extra convenience\n * functionalities.\n *\n * @example\n * //\n * //\n *\n * @module cameras/orthographic\n */\n\n import {OrthographicCamera, Vector3, Matrix4} from 'three'\n\nconst camerasOrthographic = () => {\n\n  const Constructor = OrthographicCamera;\n  return class extends Constructor {\n    constructor(left, right, top, bottom, near, far) {\n      super(left, right, top, bottom, near, far);\n\n      this._front = null;\n      this._back = null;\n\n      this._directions = [\n        new Vector3(1, 0, 0),\n        new Vector3(0, 1, 0),\n        new Vector3(0, 0, 1),\n      ];\n\n      this._directionsLabel = [\n        'A',\n        'P', // TOP/BOTTOM\n        'L',\n        'R', // LEFT/RIGHT\n        'I',\n        'S', // FROM/TO\n      ];\n\n      this._orientation = 'default';\n      this._convention = 'radio';\n      this._stackOrientation = 0;\n\n      this._right = null;\n      this._up = null;\n      this._direction = null;\n\n      this._controls = null;\n      this._box = null;\n      this._canvas = {\n        width: null,\n        height: null,\n      };\n\n      this._fromFront = true;\n      this._angle = 0;\n    }\n\n    /**\n     * Initialize orthographic camera variables\n     */\n    init(xCosine, yCosine, zCosine, controls, box, canvas) {\n      // DEPRECATION NOTICE\n      window.console.warn(\n        `cameras.orthographic.init(...) is deprecated.\n        Use .cosines, .controls, .box and .canvas instead.`\n      );\n\n      //\n      if (\n        !(\n          Validators.vector3(xCosine) &&\n          Validators.vector3(yCosine) &&\n          Validators.vector3(zCosine) &&\n          Validators.box(box) &&\n          controls\n        )\n      ) {\n        window.console.log('Invalid input provided.');\n\n        return false;\n      }\n\n      this._right = xCosine;\n      this._up = this._adjustTopDirection(xCosine, yCosine);\n      this._direction = new Vector3().crossVectors(this._right, this._up);\n      this._controls = controls;\n      this._box = box;\n      this._canvas = canvas;\n\n      let ray = {\n        position: this._box.center,\n        direction: this._direction,\n      };\n\n      let intersections = this._orderIntersections(\n        Intersections.rayBox(ray, this._box),\n        this._direction\n      );\n      this._front = intersections[0];\n      this._back = intersections[1];\n\n      // set default values\n      this.up.set(this._up.x, this._up.y, this._up.z);\n      this._updateCanvas();\n      this._updatePositionAndTarget(this._front, this._back);\n      this._updateMatrices();\n      this._updateDirections();\n    }\n\n    update() {\n      // http://www.grahamwideman.com/gw/brain/orientation/orientterms.htm\n      // do magics depending on orientation and convention\n      // also needs a default mode\n\n      if (this._orientation === 'default') {\n        switch (this._getMaxIndex(this._directions[2])) {\n          case 0:\n            this._orientation = 'sagittal';\n            break;\n\n          case 1:\n            this._orientation = 'coronal';\n            break;\n\n          case 2:\n            this._orientation = 'axial';\n            break;\n\n          default:\n            this._orientation = 'free';\n            break;\n        }\n      }\n\n      if (this._orientation === 'free') {\n        this._right = this._directions[0];\n        this._up = this._directions[1];\n        this._direction = this._directions[2];\n      } else {\n        let leftIndex = this.leftDirection();\n        let leftDirection = this._directions[leftIndex];\n        let posteriorIndex = this.posteriorDirection();\n        let posteriorDirection = this._directions[posteriorIndex];\n        let superiorIndex = this.superiorDirection();\n        let superiorDirection = this._directions[superiorIndex];\n\n        if (this._convention === 'radio') {\n          switch (this._orientation) {\n            case 'axial':\n              // up vector is 'anterior'\n              if (posteriorDirection.y > 0) {\n                posteriorDirection.negate();\n              }\n\n              // looking towards superior\n              if (superiorDirection.z < 0) {\n                superiorDirection.negate();\n              }\n\n              //\n              this._right = leftDirection; // does not matter right/left\n              this._up = posteriorDirection;\n              this._direction = superiorDirection;\n              break;\n\n            case 'coronal':\n              // up vector is 'superior'\n              if (superiorDirection.z < 0) {\n                superiorDirection.negate();\n              }\n\n              // looking towards posterior\n              if (posteriorDirection.y < 0) {\n                posteriorDirection.negate();\n              }\n\n              //\n              this._right = leftDirection; // does not matter right/left\n              this._up = superiorDirection;\n              this._direction = posteriorDirection;\n              break;\n\n            case 'sagittal':\n              // up vector is 'superior'\n              if (superiorDirection.z < 0) {\n                superiorDirection.negate();\n              }\n\n              // looking towards right\n              if (leftDirection.x > 0) {\n                leftDirection.negate();\n              }\n\n              //\n              this._right = posteriorDirection; // does not matter right/left\n              this._up = superiorDirection;\n              this._direction = leftDirection;\n\n              break;\n\n            default:\n              window.console.warn(\n                `\"${this._orientation}\" orientation is not valid.\n                  (choices: axial, coronal, sagittal)`\n              );\n              break;\n          }\n        } else if (this._convention === 'neuro') {\n          switch (this._orientation) {\n            case 'axial':\n              // up vector is 'anterior'\n              if (posteriorDirection.y > 0) {\n                posteriorDirection.negate();\n              }\n\n              // looking towards inferior\n              if (superiorDirection.z > 0) {\n                superiorDirection.negate();\n              }\n\n              //\n              this._right = leftDirection; // does not matter right/left\n              this._up = posteriorDirection;\n              this._direction = superiorDirection;\n              break;\n\n            case 'coronal':\n              // up vector is 'superior'\n              if (superiorDirection.z < 0) {\n                superiorDirection.negate();\n              }\n\n              // looking towards anterior\n              if (posteriorDirection.y > 0) {\n                posteriorDirection.negate();\n              }\n\n              //\n              this._right = leftDirection; // does not matter right/left\n              this._up = superiorDirection;\n              this._direction = posteriorDirection;\n              break;\n\n            case 'sagittal':\n              // up vector is 'superior'\n              if (superiorDirection.z < 0) {\n                superiorDirection.negate();\n              }\n\n              // looking towards right\n              if (leftDirection.x > 0) {\n                leftDirection.negate();\n              }\n\n              //\n              this._right = posteriorDirection; // does not matter right/left\n              this._up = superiorDirection;\n              this._direction = leftDirection;\n\n              break;\n\n            default:\n              window.console.warn(\n                `\"${this._orientation}\" orientation is not valid.\n                  (choices: axial, coronal, sagittal)`\n              );\n              break;\n          }\n        } else {\n          window.console.warn(`${this._convention} is not valid (choices: radio, neuro)`);\n        }\n      }\n\n      // that is what determines left/right\n      let ray = {\n        position: this._box.center,\n        direction: this._direction,\n      };\n\n      let intersections = this._orderIntersections(\n        Intersections.rayBox(ray, this._box),\n        this._direction\n      );\n      this._front = intersections[0];\n      this._back = intersections[1];\n\n      // set default values\n      this.up.set(this._up.x, this._up.y, this._up.z);\n      this._updateCanvas();\n      this._updatePositionAndTarget(this._front, this._back);\n      this._updateMatrices();\n      this._updateDirections();\n    }\n\n    leftDirection() {\n      return this._findMaxIndex(this._directions, 0);\n    }\n\n    posteriorDirection() {\n      return this._findMaxIndex(this._directions, 1);\n    }\n\n    superiorDirection() {\n      return this._findMaxIndex(this._directions, 2);\n    }\n\n    /**\n     * Invert rows in the current slice.\n     * Inverting rows in 2 steps:\n     *   * Flip the \"up\" vector\n     *   * Look at the slice from the other side\n     */\n    invertRows() {\n      // flip \"up\" vector\n      // we flip up first because invertColumns update projectio matrices\n      this.up.multiplyScalar(-1);\n      this.invertColumns();\n\n      this._updateDirections();\n    }\n\n    /**\n     * Invert rows in the current slice.\n     * Inverting rows in 1 step:\n     *   * Look at the slice from the other side\n     */\n    invertColumns() {\n      this.center();\n      // rotate 180 degrees around the up vector...\n      let oppositePosition = this._oppositePosition(this.position);\n\n      // update posistion and target\n      // clone is needed because this.position is overwritten in method\n      this._updatePositionAndTarget(oppositePosition, this.position.clone());\n      this._updateMatrices();\n      this._fromFront = !this._fromFront;\n\n      this._angle %= 360;\n      this._angle = 360 - this._angle;\n\n      this._updateDirections();\n    }\n\n    /**\n     * Center slice in the camera FOV.\n     * It also updates the controllers properly.\n     * We can center a camera from the front or from the back.\n     */\n    center() {\n      if (this._fromFront) {\n        this._updatePositionAndTarget(this._front, this._back);\n      } else {\n        this._updatePositionAndTarget(this._back, this._front);\n      }\n\n      this._updateMatrices();\n      this._updateDirections();\n    }\n\n    /**\n     * Pi/2 rotation around the zCosine axis.\n     * Clock-wise rotation from the user point of view.\n     */\n    rotate(angle = null) {\n      this.center();\n\n      let rotationToApply = 90;\n      if (angle === null) {\n        rotationToApply *= -1;\n        this._angle += 90;\n      } else {\n        rotationToApply = 360 -  (angle - this._angle);\n        this._angle = angle;\n      }\n\n      this._angle %= 360;\n\n      // Rotate the up vector around the \"zCosine\"\n      let rotation = new Matrix4().makeRotationAxis(\n        this._direction,\n        (rotationToApply * Math.PI) / 180\n      );\n      this.up.applyMatrix4(rotation);\n\n      this._updateMatrices();\n      this._updateDirections();\n    }\n\n    // dimensions[0] // width\n    // dimensions[1] // height\n    // direction= 0 width, 1 height, 2 best\n    // factor\n    fitBox(direction = 0, factor = 1.5) {\n      //\n      // if (!(dimensions && dimensions.length >= 2)) {\n      //   window.console.log('Invalid dimensions container.');\n      //   window.console.log(dimensions);\n\n      //   return false;\n      // }\n\n      //\n      let zoom = 1;\n\n      // update zoom\n      switch (direction) {\n        case 0:\n          zoom = factor * this._computeZoom(this._canvas.width, this._right);\n          break;\n        case 1:\n          zoom = factor * this._computeZoom(this._canvas.height, this._up);\n          break;\n        case 2:\n          zoom =\n            factor *\n            Math.min(\n              this._computeZoom(this._canvas.width, this._right),\n              this._computeZoom(this._canvas.height, this._up)\n            );\n          break;\n        default:\n          break;\n      }\n\n      if (!zoom) {\n        return false;\n      }\n\n      this.zoom = zoom;\n\n      this.center();\n    }\n\n    _adjustTopDirection(horizontalDirection, verticalDirection) {\n      const vMaxIndex = this._getMaxIndex(verticalDirection);\n\n      // should handle vMax index === 0\n      if (\n        (vMaxIndex === 2 && verticalDirection.getComponent(vMaxIndex) < 0) ||\n        (vMaxIndex === 1 && verticalDirection.getComponent(vMaxIndex) > 0) ||\n        (vMaxIndex === 0 && verticalDirection.getComponent(vMaxIndex) > 0)\n      ) {\n        verticalDirection.negate();\n      }\n\n      return verticalDirection;\n    }\n\n    _getMaxIndex(vector) {\n      // init with X value\n      let maxValue = Math.abs(vector.x);\n      let index = 0;\n\n      if (Math.abs(vector.y) > maxValue) {\n        maxValue = Math.abs(vector.y);\n        index = 1;\n      }\n\n      if (Math.abs(vector.z) > maxValue) {\n        index = 2;\n      }\n\n      return index;\n    }\n\n    _findMaxIndex(directions, target) {\n      // get index of the most superior direction\n      let maxIndices = this._getMaxIndices(directions);\n\n      for (let i = 0; i < maxIndices.length; i++) {\n        if (maxIndices[i] === target) {\n          return i;\n        }\n      }\n    }\n\n    _getMaxIndices(directions) {\n      let indices = [];\n      indices.push(this._getMaxIndex(directions[0]));\n      indices.push(this._getMaxIndex(directions[1]));\n      indices.push(this._getMaxIndex(directions[2]));\n\n      return indices;\n    }\n\n    _orderIntersections(intersections, direction) {\n      const ordered = intersections[0].dot(direction) < intersections[1].dot(direction);\n\n      if (!ordered) {\n        return [intersections[1], intersections[0]];\n      }\n\n      return intersections;\n    }\n\n    _updateCanvas() {\n      let camFactor = 2;\n      this.left = -this._canvas.width / camFactor;\n      this.right = this._canvas.width / camFactor;\n      this.top = this._canvas.height / camFactor;\n      this.bottom = -this._canvas.height / camFactor;\n\n      this._updateMatrices();\n      this.controls.handleResize();\n    }\n\n    _oppositePosition(position) {\n      let oppositePosition = position.clone();\n      // center world postion around box center\n      oppositePosition.sub(this._box.center);\n      // rotate\n      let rotation = new Matrix4().makeRotationAxis(this.up, Math.PI);\n\n      oppositePosition.applyMatrix4(rotation);\n      // translate back to world position\n      oppositePosition.add(this._box.center);\n      return oppositePosition;\n    }\n\n    _computeZoom(dimension, direction) {\n      if (!(dimension && dimension > 0)) {\n        window.console.log('Invalid dimension provided.');\n        window.console.log(dimension);\n        return false;\n      }\n\n      // ray\n      let ray = {\n        position: this._box.center.clone(),\n        direction: direction,\n      };\n\n      let intersections = Intersections.rayBox(ray, this._box);\n      if (intersections.length < 2) {\n        window.console.log('Can not adjust the camera ( < 2 intersections).');\n        window.console.log(ray);\n        window.console.log(this._box);\n        return false;\n      }\n\n      return dimension / intersections[0].distanceTo(intersections[1]);\n    }\n\n    _updatePositionAndTarget(position, target) {\n      // position\n      this.position.set(position.x, position.y, position.z);\n\n      // targets\n      this.lookAt(target.x, target.y, target.z);\n      this._controls.target.set(target.x, target.y, target.z);\n    }\n\n    _updateMatrices() {\n      this._controls.update();\n      // THEN camera\n      this.updateProjectionMatrix();\n      this.updateMatrixWorld();\n    }\n\n    _updateLabels() {\n      this._directionsLabel = [\n        this._vector2Label(this._up),\n        this._vector2Label(this._up.clone().negate()),\n        this._vector2Label(this._right),\n        this._vector2Label(this._right.clone().negate()),\n        this._vector2Label(this._direction),\n        this._vector2Label(this._direction.clone().negate()),\n      ];\n    }\n\n    _vector2Label(direction) {\n      const index = this._getMaxIndex(direction);\n      // set vector max value to 1\n      const scaledDirection = direction\n        .clone()\n        .divideScalar(Math.abs(direction.getComponent(index)));\n      const delta = 0.2;\n      let label = '';\n\n      // loop through components of the vector\n      for (let i = 0; i < 3; i++) {\n        if (i === 0) {\n          if (scaledDirection.getComponent(i) + delta >= 1) {\n            label += 'L';\n          } else if (scaledDirection.getComponent(i) - delta <= -1) {\n            label += 'R';\n          }\n        }\n\n        if (i === 1) {\n          if (scaledDirection.getComponent(i) + delta >= 1) {\n            label += 'P';\n          } else if (scaledDirection.getComponent(i) - delta <= -1) {\n            label += 'A';\n          }\n        }\n\n        if (i === 2) {\n          if (scaledDirection.getComponent(i) + delta >= 1) {\n            label += 'S';\n          } else if (scaledDirection.getComponent(i) - delta <= -1) {\n            label += 'I';\n          }\n        }\n      }\n\n      return label;\n    }\n\n    _updateDirections() {\n      // up is correct\n      this._up = this.up.clone();\n\n      // direction\n      let pLocal = new Vector3(0, 0, -1);\n      let pWorld = pLocal.applyMatrix4(this.matrixWorld);\n      this._direction = pWorld.sub(this.position).normalize();\n\n      // right\n      this._right = new Vector3().crossVectors(this._direction, this.up);\n\n      // update labels accordingly\n      this._updateLabels();\n    }\n\n    set controls(controls) {\n      this._controls = controls;\n    }\n\n    get controls() {\n      return this._controls;\n    }\n\n    set box(box) {\n      this._box = box;\n    }\n\n    get box() {\n      return this._box;\n    }\n\n    set canvas(canvas) {\n      this._canvas = canvas;\n      this._updateCanvas();\n    }\n\n    get canvas() {\n      return this._canvas;\n    }\n\n    set angle(angle) {\n      this.rotate(angle);\n    }\n\n    get angle() {\n      return this._angle;\n    }\n\n    set directions(directions) {\n      this._directions = directions;\n    }\n\n    get directions() {\n      return this._directions;\n    }\n\n    set convention(convention) {\n      this._convention = convention;\n    }\n\n    get convention() {\n      return this._convention;\n    }\n\n    set orientation(orientation) {\n      this._orientation = orientation;\n    }\n\n    get orientation() {\n      return this._orientation;\n    }\n\n    set directionsLabel(directionsLabel) {\n      this._directionsLabel = directionsLabel;\n    }\n\n    get directionsLabel() {\n      return this._directionsLabel;\n    }\n\n    set stackOrientation(stackOrientation) {\n      this._stackOrientation = stackOrientation;\n\n      if (this._stackOrientation === 0) {\n        this._orientation = 'default';\n      } else {\n        const maxIndex = this._getMaxIndex(this._directions[(this._stackOrientation + 2) % 3]);\n\n        if (maxIndex === 0) {\n          this._orientation = 'sagittal';\n        } else if (maxIndex === 1) {\n          this._orientation = 'coronal';\n        } else if (maxIndex === 2) {\n          this._orientation = 'axial';\n        }\n      }\n    }\n\n    get stackOrientation() {\n      //\n      if (this._orientation === 'default') {\n        this._stackOrientation = 0;\n      } else {\n        let maxIndex = this._getMaxIndex(this._direction);\n\n        if (maxIndex === this._getMaxIndex(this._directions[2])) {\n          this._stackOrientation = 0;\n        } else if (maxIndex === this._getMaxIndex(this._directions[0])) {\n          this._stackOrientation = 1;\n        } else if (maxIndex === this._getMaxIndex(this._directions[1])) {\n          this._stackOrientation = 2;\n        }\n      }\n\n      return this._stackOrientation;\n    }\n  };\n};\n\n// export factory\nexport { camerasOrthographic };\n// default export to\nexport default camerasOrthographic();\n","/**\n * Original authors from THREEJS repo\n * @author Eberhard Graether / http://egraether.com/\n * @author Mark Lundin  / http://mark-lundin.com\n * @author Simone Manini / http://daron1337.github.io\n * @author Luca Antiga  / http://lantiga.github.io\n */\n\n import {EventDispatcher, Vector2, Vector3, Quaternion} from 'three'\nconst trackball = () => {\n\n  const Constructor = EventDispatcher;\n  return class extends Constructor {\n    constructor(object, domElement) {\n      super();\n\n      let _this = this;\n      let STATE = {\n        NONE: -1,\n        ROTATE: 0,\n        ZOOM: 1,\n        PAN: 2,\n        TOUCH_ROTATE: 3,\n        TOUCH_ZOOM: 4,\n        TOUCH_PAN: 5,\n        CUSTOM: 99,\n      };\n\n      this.object = object;\n      this.domElement = domElement !== undefined ? domElement : document;\n\n      // API\n\n      this.enabled = true;\n\n      this.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n      this.rotateSpeed = 1.0;\n      this.zoomSpeed = 1.2;\n      this.panSpeed = 0.3;\n\n      this.noRotate = false;\n      this.noZoom = false;\n      this.noPan = false;\n      this.noCustom = false;\n\n      this.forceState = -1;\n\n      this.staticMoving = false;\n      this.dynamicDampingFactor = 0.2;\n\n      this.minDistance = 0;\n      this.maxDistance = Infinity;\n\n      this.keys = [65 /* A*/, 83 /* S*/, 68];\n\n      // internals\n\n      this.target = new Vector3();\n\n      let EPS = 0.000001;\n\n      let lastPosition = new Vector3();\n\n      let _state = STATE.NONE,\n        _prevState = STATE.NONE,\n        _eye = new Vector3(),\n        _movePrev = new Vector2(),\n        _moveCurr = new Vector2(),\n        _lastAxis = new Vector3(),\n        _lastAngle = 0,\n        _zoomStart = new Vector2(),\n        _zoomEnd = new Vector2(),\n        _touchZoomDistanceStart = 0,\n        _touchZoomDistanceEnd = 0,\n        _panStart = new Vector2(),\n        _panEnd = new Vector2(),\n        _customStart = new Vector2(),\n        _customEnd = new Vector2();\n\n      // for reset\n\n      this.target0 = this.target.clone();\n      this.position0 = this.object.position.clone();\n      this.up0 = this.object.up.clone();\n\n      // events\n\n      let changeEvent = { type: 'change' };\n      let startEvent = { type: 'start' };\n      let endEvent = { type: 'end' };\n\n      // methods\n\n      this.handleResize = function() {\n        if (this.domElement === document) {\n          this.screen.left = 0;\n          this.screen.top = 0;\n          this.screen.width = window.innerWidth;\n          this.screen.height = window.innerHeight;\n        } else {\n          let box = this.domElement.getBoundingClientRect();\n          // adjustments come from similar code in the jquery offset() function\n          let d = this.domElement.ownerDocument.documentElement;\n          this.screen.left = box.left + window.pageXOffset - d.clientLeft;\n          this.screen.top = box.top + window.pageYOffset - d.clientTop;\n          this.screen.width = box.width;\n          this.screen.height = box.height;\n        }\n      };\n\n      this.handleEvent = function(event) {\n        if (typeof this[event.type] == 'function') {\n          this[event.type](event);\n        }\n      };\n\n      let getMouseOnScreen = (function() {\n        let vector = new Vector2();\n\n        return function(pageX, pageY) {\n          vector.set(\n            (pageX - _this.screen.left) / _this.screen.width,\n            (pageY - _this.screen.top) / _this.screen.height\n          );\n\n          return vector;\n        };\n      })();\n\n      let getMouseOnCircle = (function() {\n        let vector = new Vector2();\n\n        return function(pageX, pageY) {\n          vector.set(\n            (pageX - _this.screen.width * 0.5 - _this.screen.left) / (_this.screen.width * 0.5),\n            (_this.screen.height + 2 * (_this.screen.top - pageY)) / _this.screen.width // screen.width intentional\n          );\n\n          return vector;\n        };\n      })();\n\n      this.rotateCamera = (function() {\n        let axis = new Vector3(),\n          quaternion = new Quaternion(),\n          eyeDirection = new Vector3(),\n          objectUpDirection = new Vector3(),\n          objectSidewaysDirection = new Vector3(),\n          moveDirection = new Vector3(),\n          angle;\n\n        return function() {\n          moveDirection.set(_moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0);\n          angle = moveDirection.length();\n\n          if (angle) {\n            _eye.copy(_this.object.position).sub(_this.target);\n\n            eyeDirection.copy(_eye).normalize();\n            objectUpDirection.copy(_this.object.up).normalize();\n            objectSidewaysDirection.crossVectors(objectUpDirection, eyeDirection).normalize();\n\n            objectUpDirection.setLength(_moveCurr.y - _movePrev.y);\n            objectSidewaysDirection.setLength(_moveCurr.x - _movePrev.x);\n\n            moveDirection.copy(objectUpDirection.add(objectSidewaysDirection));\n\n            axis.crossVectors(moveDirection, _eye).normalize();\n\n            angle *= _this.rotateSpeed;\n            quaternion.setFromAxisAngle(axis, angle);\n\n            _eye.applyQuaternion(quaternion);\n            _this.object.up.applyQuaternion(quaternion);\n\n            _lastAxis.copy(axis);\n            _lastAngle = angle;\n          } else if (!_this.staticMoving && _lastAngle) {\n            _lastAngle *= Math.sqrt(1.0 - _this.dynamicDampingFactor);\n            _eye.copy(_this.object.position).sub(_this.target);\n            quaternion.setFromAxisAngle(_lastAxis, _lastAngle);\n            _eye.applyQuaternion(quaternion);\n            _this.object.up.applyQuaternion(quaternion);\n          }\n\n          _movePrev.copy(_moveCurr);\n        };\n      })();\n\n      this.zoomCamera = function() {\n        let factor;\n\n        if (_state === STATE.TOUCH_ZOOM) {\n          factor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n          _touchZoomDistanceStart = _touchZoomDistanceEnd;\n          _eye.multiplyScalar(factor);\n        } else {\n          factor = 1.0 + (_zoomEnd.y - _zoomStart.y) * _this.zoomSpeed;\n\n          if (factor !== 1.0 && factor > 0.0) {\n            _eye.multiplyScalar(factor);\n\n            if (_this.staticMoving) {\n              _zoomStart.copy(_zoomEnd);\n            } else {\n              _zoomStart.y += (_zoomEnd.y - _zoomStart.y) * this.dynamicDampingFactor;\n            }\n          }\n        }\n      };\n\n      this.panCamera = (function() {\n        let mouseChange = new Vector2(),\n          objectUp = new Vector3(),\n          pan = new Vector3();\n\n        return function() {\n          mouseChange.copy(_panEnd).sub(_panStart);\n\n          if (mouseChange.lengthSq()) {\n            mouseChange.multiplyScalar(_eye.length() * _this.panSpeed);\n\n            pan\n              .copy(_eye)\n              .cross(_this.object.up)\n              .setLength(mouseChange.x);\n            pan.add(objectUp.copy(_this.object.up).setLength(mouseChange.y));\n\n            _this.object.position.add(pan);\n            _this.target.add(pan);\n\n            if (_this.staticMoving) {\n              _panStart.copy(_panEnd);\n            } else {\n              _panStart.add(\n                mouseChange\n                  .subVectors(_panEnd, _panStart)\n                  .multiplyScalar(_this.dynamicDampingFactor)\n              );\n            }\n          }\n        };\n      })();\n\n      this.checkDistances = function() {\n        if (!_this.noZoom || !_this.noPan) {\n          if (_eye.lengthSq() > _this.maxDistance * _this.maxDistance) {\n            _this.object.position.addVectors(_this.target, _eye.setLength(_this.maxDistance));\n          }\n\n          if (_eye.lengthSq() < _this.minDistance * _this.minDistance) {\n            _this.object.position.addVectors(_this.target, _eye.setLength(_this.minDistance));\n          }\n        }\n      };\n\n      this.update = function() {\n        _eye.subVectors(_this.object.position, _this.target);\n\n        if (!_this.noRotate) {\n          _this.rotateCamera();\n        }\n\n        if (!_this.noZoom) {\n          _this.zoomCamera();\n        }\n\n        if (!_this.noPan) {\n          _this.panCamera();\n        }\n\n        if (!_this.noCustom) {\n          _this.custom(_customStart, _customEnd);\n        }\n\n        _this.object.position.addVectors(_this.target, _eye);\n\n        _this.checkDistances();\n\n        _this.object.lookAt(_this.target);\n\n        if (lastPosition.distanceToSquared(_this.object.position) > EPS) {\n          _this.dispatchEvent(changeEvent);\n\n          lastPosition.copy(_this.object.position);\n        }\n      };\n\n      this.reset = function() {\n        _state = STATE.NONE;\n        _prevState = STATE.NONE;\n\n        _this.target.copy(_this.target0);\n        _this.object.position.copy(_this.position0);\n        _this.object.up.copy(_this.up0);\n\n        _eye.subVectors(_this.object.position, _this.target);\n\n        _this.object.lookAt(_this.target);\n\n        _this.dispatchEvent(changeEvent);\n\n        lastPosition.copy(_this.object.position);\n      };\n\n      this.setState = function(targetState) {\n        _this.forceState = targetState;\n        _prevState = targetState;\n        _state = targetState;\n      };\n\n      this.custom = function(customStart, customEnd) {};\n\n      // listeners\n\n      function keydown(event) {\n        if (_this.enabled === false) return;\n\n        window.removeEventListener('keydown', keydown);\n\n        _prevState = _state;\n\n        if (_state !== STATE.NONE) {\n          return;\n        } else if (event.keyCode === _this.keys[STATE.ROTATE] && !_this.noRotate) {\n          _state = STATE.ROTATE;\n        } else if (event.keyCode === _this.keys[STATE.ZOOM] && !_this.noZoom) {\n          _state = STATE.ZOOM;\n        } else if (event.keyCode === _this.keys[STATE.PAN] && !_this.noPan) {\n          _state = STATE.PAN;\n        }\n      }\n\n      function keyup(event) {\n        if (_this.enabled === false) return;\n\n        _state = _prevState;\n\n        window.addEventListener('keydown', keydown, false);\n      }\n\n      function mousedown(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (_state === STATE.NONE) {\n          _state = event.button;\n        }\n\n        if (_state === STATE.ROTATE && !_this.noRotate) {\n          _moveCurr.copy(getMouseOnCircle(event.pageX, event.pageY));\n          _movePrev.copy(_moveCurr);\n        } else if (_state === STATE.ZOOM && !_this.noZoom) {\n          _zoomStart.copy(getMouseOnScreen(event.pageX, event.pageY));\n          _zoomEnd.copy(_zoomStart);\n        } else if (_state === STATE.PAN && !_this.noPan) {\n          _panStart.copy(getMouseOnScreen(event.pageX, event.pageY));\n          _panEnd.copy(_panStart);\n        } else if (_state === STATE.CUSTOM && !_this.noCustom) {\n          _customStart.copy(getMouseOnScreen(event.pageX, event.pageY));\n          _customEnd.copy(_panStart);\n        }\n\n        document.addEventListener('mousemove', mousemove, false);\n        document.addEventListener('mouseup', mouseup, false);\n\n        _this.dispatchEvent(startEvent);\n      }\n\n      function mousemove(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (_state === STATE.ROTATE && !_this.noRotate) {\n          _movePrev.copy(_moveCurr);\n          _moveCurr.copy(getMouseOnCircle(event.pageX, event.pageY));\n        } else if (_state === STATE.ZOOM && !_this.noZoom) {\n          _zoomEnd.copy(getMouseOnScreen(event.pageX, event.pageY));\n        } else if (_state === STATE.PAN && !_this.noPan) {\n          _panEnd.copy(getMouseOnScreen(event.pageX, event.pageY));\n        } else if (_state === STATE.CUSTOM && !_this.noCustom) {\n          _customEnd.copy(getMouseOnScreen(event.pageX, event.pageY));\n        }\n      }\n\n      function mouseup(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (_this.forceState === -1) {\n          _state = STATE.NONE;\n        }\n\n        document.removeEventListener('mousemove', mousemove);\n        document.removeEventListener('mouseup', mouseup);\n        _this.dispatchEvent(endEvent);\n      }\n\n      function mousewheel(event) {\n        if (_this.enabled === false) return;\n\n        if (_this.noZoom === true) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch (event.deltaMode) {\n          case 2:\n            // Zoom in pages\n            _zoomStart.y -= event.deltaY * 0.025;\n            break;\n\n          case 1:\n            // Zoom in lines\n            _zoomStart.y -= event.deltaY * 0.01;\n            break;\n\n          default:\n            // undefined, 0, assume pixels\n            _zoomStart.y -= event.deltaY * 0.00025;\n            break;\n        }\n\n        // _zoomStart.y += delta * 0.01;\n        _this.dispatchEvent(startEvent);\n        _this.dispatchEvent(endEvent);\n      }\n\n      function touchstart(event) {\n        if (_this.enabled === false) return;\n\n        if (_this.forceState === -1) {\n          switch (event.touches.length) {\n            case 1:\n              _state = STATE.TOUCH_ROTATE;\n              _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n              _movePrev.copy(_moveCurr);\n              break;\n\n            case 2:\n              _state = STATE.TOUCH_ZOOM;\n              var dx = event.touches[0].pageX - event.touches[1].pageX;\n              var dy = event.touches[0].pageY - event.touches[1].pageY;\n              _touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy);\n\n              var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n              var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n              _panStart.copy(getMouseOnScreen(x, y));\n              _panEnd.copy(_panStart);\n              break;\n\n            default:\n              _state = STATE.NONE;\n          }\n        } else {\n          // { NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4, CUSTOM: 99 };\n          switch (_state) {\n            case 0:\n              // 1 or 2 fingers, smae behavior\n              _state = STATE.TOUCH_ROTATE;\n              _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n              _movePrev.copy(_moveCurr);\n              break;\n\n            case 1:\n            case 4:\n              if (event.touches.length >= 2) {\n                _state = STATE.TOUCH_ZOOM;\n                var dx = event.touches[0].pageX - event.touches[1].pageX;\n                var dy = event.touches[0].pageY - event.touches[1].pageY;\n                _touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy);\n              } else {\n                _state = STATE.ZOOM;\n                _zoomStart.copy(getMouseOnScreen(event.touches[0].pageX, event.touches[0].pageY));\n                _zoomEnd.copy(_zoomStart);\n              }\n              break;\n\n            case 2:\n            case 5:\n              if (event.touches.length >= 2) {\n                _state = STATE.TOUCH_PAN;\n                var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n                var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n                _panStart.copy(getMouseOnScreen(x, y));\n                _panEnd.copy(_panStart);\n              } else {\n                _state = STATE.PAN;\n                _panStart.copy(getMouseOnScreen(event.touches[0].pageX, event.touches[0].pageY));\n                _panEnd.copy(_panStart);\n              }\n              break;\n\n            case 99:\n              _state = STATE.CUSTOM;\n              var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n              var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n              _customStart.copy(getMouseOnScreen(x, y));\n              _customEnd.copy(_customStart);\n              break;\n\n            default:\n              _state = STATE.NONE;\n          }\n        }\n\n        _this.dispatchEvent(startEvent);\n      }\n\n      function touchmove(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (_this.forceState === -1) {\n          switch (event.touches.length) {\n            case 1:\n              _movePrev.copy(_moveCurr);\n              _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n              break;\n\n            case 2:\n              var dx = event.touches[0].pageX - event.touches[1].pageX;\n              var dy = event.touches[0].pageY - event.touches[1].pageY;\n              _touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy);\n\n              var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n              var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n              _panEnd.copy(getMouseOnScreen(x, y));\n              break;\n\n            default:\n              _state = STATE.NONE;\n          }\n        } else {\n          // { NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4, CUSTOM: 99 };\n          switch (_state) {\n            case 0:\n              _movePrev.copy(_moveCurr);\n              _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n              break;\n\n            case 1:\n              _zoomEnd.copy(getMouseOnScreen(event.touches[0].pageX, event.touches[0].pageY));\n              break;\n\n            case 2:\n              _panEnd.copy(getMouseOnScreen(event.touches[0].pageX, event.touches[0].pageY));\n              break;\n\n            case 4:\n              // 2 fingers!\n              // TOUCH ZOOM\n              var dx = event.touches[0].pageX - event.touches[1].pageX;\n              var dy = event.touches[0].pageY - event.touches[1].pageY;\n              _touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy);\n              break;\n\n            case 5:\n              // 2 fingers\n              // TOUCH_PAN\n              var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n              var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n              _panEnd.copy(getMouseOnScreen(x, y));\n              break;\n\n            case 99:\n              var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n              var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n              _customEnd.copy(getMouseOnScreen(x, y));\n              break;\n\n            default:\n              _state = STATE.NONE;\n          }\n        }\n      }\n\n      function touchend(event) {\n        if (_this.enabled === false) return;\n\n        if (_this.forceState === -1) {\n          switch (event.touches.length) {\n            case 1:\n              _movePrev.copy(_moveCurr);\n              _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n              break;\n\n            case 2:\n              _touchZoomDistanceStart = _touchZoomDistanceEnd = 0;\n\n              var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n              var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n              _panEnd.copy(getMouseOnScreen(x, y));\n              _panStart.copy(_panEnd);\n              break;\n          }\n\n          _state = STATE.NONE;\n        } else {\n          switch (_state) {\n            case 0:\n              _movePrev.copy(_moveCurr);\n              _moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n              break;\n\n            case 1:\n            case 2:\n              break;\n\n            case 4:\n              // TOUCH ZOOM\n              _touchZoomDistanceStart = _touchZoomDistanceEnd = 0;\n              _state = STATE.ZOOM;\n              break;\n\n            case 5:\n              // TOUCH ZOOM\n              if (event.touches.length >= 2) {\n                var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n                var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n                _panEnd.copy(getMouseOnScreen(x, y));\n                _panStart.copy(_panEnd);\n              }\n              _state = STATE.PAN;\n              break;\n\n            case 99:\n              var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n              var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n              _customEnd.copy(getMouseOnScreen(x, y));\n              _customStart.copy(_customEnd);\n              break;\n\n            default:\n              _state = STATE.NONE;\n          }\n        }\n\n        _this.dispatchEvent(endEvent);\n      }\n\n      function contextmenu(event) {\n        event.preventDefault();\n      }\n\n      this.dispose = function() {\n        this.domElement.removeEventListener('contextmenu', contextmenu, false);\n        this.domElement.removeEventListener('mousedown', mousedown, false);\n        this.domElement.removeEventListener('wheel', mousewheel, false);\n\n        this.domElement.removeEventListener('touchstart', touchstart, false);\n        this.domElement.removeEventListener('touchend', touchend, false);\n        this.domElement.removeEventListener('touchmove', touchmove, false);\n\n        window.removeEventListener('keydown', keydown, false);\n        window.removeEventListener('keyup', keyup, false);\n      };\n\n      this.domElement.addEventListener('contextmenu', contextmenu, false);\n      this.domElement.addEventListener('mousedown', mousedown, false);\n      this.domElement.addEventListener('wheel', mousewheel, false);\n\n      this.domElement.addEventListener('touchstart', touchstart, false);\n      this.domElement.addEventListener('touchend', touchend, false);\n      this.domElement.addEventListener('touchmove', touchmove, false);\n\n      window.addEventListener('keydown', keydown, false);\n      window.addEventListener('keyup', keyup, false);\n\n      this.handleResize();\n\n      // force an update at start\n      this.update();\n    }\n  };\n};\n\n// export factory\nexport { trackball };\n// default export to\nexport default trackball();\n","/**\n * @author Eberhard Graether / http://egraether.com/\n * @author Mark Lundin  / http://mark-lundin.com\n * @author Patrick Fuller / http://patrick-fuller.com\n * @author Max Smolens / https://github.com/msmolens\n */\nimport {EventDispatcher, Vector2, Vector3} from 'three'\nconst trackballOrtho = () => {\n\n  const Constructor = EventDispatcher;\n  return class extends Constructor {\n    constructor(\n      object,\n      domElement,\n      state = {\n        NONE: -1,\n        ROTATE: 1,\n        ZOOM: 2,\n        PAN: 0,\n        SCROLL: 4,\n        TOUCH_ROTATE: 4,\n        TOUCH_ZOOM_PAN: 5,\n      }\n    ) {\n      super();\n\n      let _this = this;\n      let STATE = state;\n\n      this.object = object;\n      this.domElement = domElement !== undefined ? domElement : document;\n\n      // API\n\n      this.enabled = true;\n\n      this.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n      this.radius = 0;\n\n      this.zoomSpeed = 1.2;\n\n      this.noZoom = false;\n      this.noPan = false;\n\n      this.staticMoving = false;\n      this.dynamicDampingFactor = 0.2;\n\n      this.keys = [65 /* A*/, 83 /* S*/, 68];\n\n      // internals\n\n      this.target = new Vector3();\n\n      let EPS = 0.000001;\n\n      let _changed = true;\n\n      let _state = STATE.NONE,\n        _prevState = STATE.NONE,\n        _eye = new Vector3(),\n        _zoomStart = new Vector2(),\n        _zoomEnd = new Vector2(),\n        _touchZoomDistanceStart = 0,\n        _touchZoomDistanceEnd = 0,\n        _panStart = new Vector2(),\n        _panEnd = new Vector2();\n\n      // window level fire after...\n\n      // for reset\n\n      this.target0 = this.target.clone();\n      this.position0 = this.object.position.clone();\n      this.up0 = this.object.up.clone();\n\n      this.left0 = this.object.left;\n      this.right0 = this.object.right;\n      this.top0 = this.object.top;\n      this.bottom0 = this.object.bottom;\n\n      // events\n\n      let changeEvent = { type: 'change' };\n      let startEvent = { type: 'start' };\n      let endEvent = { type: 'end' };\n\n      // methods\n\n      this.handleResize = function() {\n        if (this.domElement === document) {\n          this.screen.left = 0;\n          this.screen.top = 0;\n          this.screen.width = window.innerWidth;\n          this.screen.height = window.innerHeight;\n        } else {\n          let box = this.domElement.getBoundingClientRect();\n          // adjustments come from similar code in the jquery offset() function\n          let d = this.domElement.ownerDocument.documentElement;\n          this.screen.left = box.left + window.pageXOffset - d.clientLeft;\n          this.screen.top = box.top + window.pageYOffset - d.clientTop;\n          this.screen.width = box.width;\n          this.screen.height = box.height;\n        }\n\n        this.radius = 0.5 * Math.min(this.screen.width, this.screen.height);\n\n        this.left0 = this.object.left;\n        this.right0 = this.object.right;\n        this.top0 = this.object.top;\n        this.bottom0 = this.object.bottom;\n      };\n\n      this.handleEvent = function(event) {\n        if (typeof this[event.type] == 'function') {\n          this[event.type](event);\n        }\n      };\n\n      let getMouseOnScreen = (function() {\n        let vector = new Vector2();\n\n        return function getMouseOnScreen(pageX, pageY) {\n          vector.set(\n            (pageX - _this.screen.left) / _this.screen.width,\n            (pageY - _this.screen.top) / _this.screen.height\n          );\n\n          return vector;\n        };\n      })();\n\n      this.zoomCamera = function() {\n        if (_state === STATE.TOUCH_ZOOM_PAN) {\n          var factor = _touchZoomDistanceEnd / _touchZoomDistanceStart;\n          _touchZoomDistanceStart = _touchZoomDistanceEnd;\n\n          _this.object.zoom *= factor;\n\n          _changed = true;\n        } else {\n          var factor = 1.0 + (_zoomEnd.y - _zoomStart.y) * _this.zoomSpeed;\n\n          if (Math.abs(factor - 1.0) > EPS && factor > 0.0) {\n            _this.object.zoom /= factor;\n\n            if (_this.staticMoving) {\n              _zoomStart.copy(_zoomEnd);\n            } else {\n              _zoomStart.y += (_zoomEnd.y - _zoomStart.y) * this.dynamicDampingFactor;\n            }\n\n            _changed = true;\n          }\n        }\n      };\n\n      this.panCamera = (function() {\n        let mouseChange = new Vector2(),\n          objectUp = new Vector3(),\n          pan = new Vector3();\n\n        return function panCamera() {\n          mouseChange.copy(_panEnd).sub(_panStart);\n\n          if (mouseChange.lengthSq()) {\n            // Scale movement to keep clicked/dragged position under cursor\n            let scale_x = (_this.object.right - _this.object.left) / _this.object.zoom;\n            let scale_y = (_this.object.top - _this.object.bottom) / _this.object.zoom;\n            mouseChange.x *= scale_x;\n            mouseChange.y *= scale_y;\n\n            pan\n              .copy(_eye)\n              .cross(_this.object.up)\n              .setLength(mouseChange.x);\n            pan.add(objectUp.copy(_this.object.up).setLength(mouseChange.y));\n\n            _this.object.position.add(pan);\n            _this.target.add(pan);\n\n            if (_this.staticMoving) {\n              _panStart.copy(_panEnd);\n            } else {\n              _panStart.add(\n                mouseChange\n                  .subVectors(_panEnd, _panStart)\n                  .multiplyScalar(_this.dynamicDampingFactor)\n              );\n            }\n\n            _changed = true;\n          }\n        };\n      })();\n\n      this.update = function() {\n        _eye.subVectors(_this.object.position, _this.target);\n\n        if (!_this.noZoom) {\n          _this.zoomCamera();\n\n          if (_changed) {\n            _this.object.updateProjectionMatrix();\n          }\n        }\n\n        if (!_this.noPan) {\n          _this.panCamera();\n        }\n\n        _this.object.position.addVectors(_this.target, _eye);\n\n        _this.object.lookAt(_this.target);\n\n        if (_changed) {\n          _this.dispatchEvent(changeEvent);\n\n          _changed = false;\n        }\n      };\n\n      this.reset = function() {\n        _state = STATE.NONE;\n        _prevState = STATE.NONE;\n\n        _this.target.copy(_this.target0);\n        _this.object.position.copy(_this.position0);\n        _this.object.up.copy(_this.up0);\n\n        _eye.subVectors(_this.object.position, _this.target);\n\n        _this.object.left = _this.left0;\n        _this.object.right = _this.right0;\n        _this.object.top = _this.top0;\n        _this.object.bottom = _this.bottom0;\n\n        _this.object.lookAt(_this.target);\n\n        _this.dispatchEvent(changeEvent);\n\n        _changed = false;\n      };\n\n      // listeners\n\n      function keydown(event) {\n        if (_this.enabled === false) return;\n\n        window.removeEventListener('keydown', keydown);\n\n        _prevState = _state;\n\n        if (_state !== STATE.NONE) {\n          return;\n        } else if (event.keyCode === _this.keys[STATE.ROTATE] && !_this.noRotate) {\n          _state = STATE.ROTATE;\n        } else if (event.keyCode === _this.keys[STATE.ZOOM] && !_this.noZoom) {\n          _state = STATE.ZOOM;\n        } else if (event.keyCode === _this.keys[STATE.PAN] && !_this.noPan) {\n          _state = STATE.PAN;\n        }\n      }\n\n      function keyup(event) {\n        if (_this.enabled === false) return;\n\n        _state = _prevState;\n\n        window.addEventListener('keydown', keydown, false);\n      }\n\n      function mousedown(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (_state === STATE.NONE) {\n          _state = event.button;\n        }\n\n        if (_state === STATE.ROTATE && !_this.noRotate) {\n        } else if (_state === STATE.ZOOM && !_this.noZoom) {\n          _zoomStart.copy(getMouseOnScreen(event.pageX, event.pageY));\n          _zoomEnd.copy(_zoomStart);\n        } else if (_state === STATE.PAN && !_this.noPan) {\n          _panStart.copy(getMouseOnScreen(event.pageX, event.pageY));\n          _panEnd.copy(_panStart);\n        }\n\n        document.addEventListener('mousemove', mousemove, false);\n        document.addEventListener('mouseup', mouseup, false);\n\n        _this.dispatchEvent(startEvent);\n      }\n\n      function mousemove(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (_state === STATE.ROTATE && !_this.noRotate) {\n        } else if (_state === STATE.ZOOM && !_this.noZoom) {\n          _zoomEnd.copy(getMouseOnScreen(event.pageX, event.pageY));\n        } else if (_state === STATE.PAN && !_this.noPan) {\n          _panEnd.copy(getMouseOnScreen(event.pageX, event.pageY));\n        }\n      }\n\n      function mouseup(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        _state = STATE.NONE;\n\n        document.removeEventListener('mousemove', mousemove);\n        document.removeEventListener('mouseup', mouseup);\n        _this.dispatchEvent(endEvent);\n      }\n\n      function mousewheel(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        //_zoomStart.y += event.deltaY * 0.01;\n        /**\n         * Watch deltaX and deltaY because in some cases, (i.e. Shift or Alt key pressed)\n         * deltaX and deltaY are inverted.\n         *\n         * It is known behaviors/shortcuts to scroll through a page horizontally.\n         */\n        _this.dispatchEvent({\n          type: 'OnScroll',\n          delta: event.deltaX * 0.01 + event.deltaY * 0.01,\n        });\n\n        _this.dispatchEvent(startEvent);\n        _this.dispatchEvent(endEvent);\n      }\n\n      function touchstart(event) {\n        if (_this.enabled === false) return;\n\n        switch (event.touches.length) {\n          case 1:\n            _state = STATE.TOUCH_ROTATE;\n\n            break;\n\n          case 2:\n            _state = STATE.TOUCH_ZOOM_PAN;\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n            _touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy);\n\n            var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n            var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n            _panStart.copy(getMouseOnScreen(x, y));\n            _panEnd.copy(_panStart);\n            break;\n\n          default:\n            _state = STATE.NONE;\n        }\n        _this.dispatchEvent(startEvent);\n      }\n\n      function touchmove(event) {\n        if (_this.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch (event.touches.length) {\n          case 1:\n            break;\n\n          case 2:\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n            _touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy);\n\n            var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n            var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n            _panEnd.copy(getMouseOnScreen(x, y));\n            break;\n\n          default:\n            _state = STATE.NONE;\n        }\n      }\n\n      function touchend(event) {\n        if (_this.enabled === false) return;\n\n        switch (event.touches.length) {\n          case 1:\n            break;\n\n          case 2:\n            _touchZoomDistanceStart = _touchZoomDistanceEnd = 0;\n\n            var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n            var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n            _panEnd.copy(getMouseOnScreen(x, y));\n            _panStart.copy(_panEnd);\n            break;\n        }\n\n        _state = STATE.NONE;\n        _this.dispatchEvent(endEvent);\n      }\n\n      function contextmenu(event) {\n        event.preventDefault();\n      }\n\n      this.dispose = function() {\n        this.domElement.removeEventListener('contextmenu', contextmenu, false);\n        this.domElement.removeEventListener('mousedown', mousedown, false);\n        this.domElement.removeEventListener('wheel', mousewheel, false);\n\n        this.domElement.removeEventListener('touchstart', touchstart, false);\n        this.domElement.removeEventListener('touchend', touchend, false);\n        this.domElement.removeEventListener('touchmove', touchmove, false);\n\n        window.removeEventListener('keydown', keydown, false);\n        window.removeEventListener('keyup', keyup, false);\n      };\n\n      this.domElement.addEventListener('contextmenu', contextmenu, false);\n      this.domElement.addEventListener('mousedown', mousedown, false);\n      this.domElement.addEventListener('wheel', mousewheel, false);\n\n      this.domElement.addEventListener('touchstart', touchstart, false);\n      this.domElement.addEventListener('touchend', touchend, false);\n      this.domElement.addEventListener('touchmove', touchmove, false);\n\n      window.addEventListener('keydown', keydown, false);\n      window.addEventListener('keyup', keyup, false);\n\n      this.handleResize();\n\n      // force an update at start\n      this.update();\n    }\n  };\n};\n\n// export factory\nexport { trackballOrtho };\n// default export to\nexport default trackballOrtho();\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\n// adapted from https://github.com/mrdoob/three.js/blob/dev/examples/jsm/controls/OrbitControls.js\n\nconst orbit = (three = window.THREE) => {\n    if (three === undefined || three.EventDispatcher === undefined) {\n      return null;\n    }\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// Set to prevent default event\n\tthis.preventDefault = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new three.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: three.MOUSE.LEFT, MIDDLE: three.MOUSE.MIDDLE, RIGHT: three.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n    };\n    \n    // this method is there to match the Trackball API\n    this.handleResize = function () {\n\n    }\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new three.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new three.Quaternion().setFromUnitVectors( object.up, new three.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new three.Vector3();\n\t\tvar lastQuaternion = new three.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new three.Spherical();\n\tvar sphericalDelta = new three.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new three.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new three.Vector2();\n\tvar rotateEnd = new three.Vector2();\n\tvar rotateDelta = new three.Vector2();\n\n\tvar panStart = new three.Vector2();\n\tvar panEnd = new three.Vector2();\n\tvar panDelta = new three.Vector2();\n\n\tvar dollyStart = new three.Vector2();\n\tvar dollyEnd = new three.Vector2();\n\tvar dollyDelta = new three.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new three.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new three.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new three.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tif ( scope.preventDefault === true ) event.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tif ( scope.preventDefault === true ) event.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tif ( scope.preventDefault === true ) {\n\t\t  event.preventDefault();\n\t\t  event.stopPropagation();\n\t\t}\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tif ( scope.preventDefault === true ) event.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tif ( scope.preventDefault === true ) {\n\t\t  event.preventDefault();\n\t\t  event.stopPropagation();\n\t\t}\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tif ( scope.preventDefault === true ) event.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( three.EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\nObject.defineProperties( OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\nreturn OrbitControls;\n}\n\nexport { orbit };\nexport default orbit();\n","import CoreUtils from './core.utils';\nimport Validators from './core.validators';\n\nimport { Matrix4 } from 'three/src/math/Matrix4';\nimport { Vector3 } from 'three/src/math/Vector3';\n\n/**\n * Compute/test intersection between different objects.\n *\n * @module core/intersections\n */\n\nexport default class Intersections {\n  /**\n   * Compute intersection between oriented bounding box and a plane.\n   *\n   * Returns intersection in plane's space.\n   *\n   * Should return at least 3 intersections. If not, the plane and the box do not\n   * intersect.\n   *\n   * @param {Object} aabb - Axe Aligned Bounding Box representation.\n   * @param {Vector3} aabb.halfDimensions - Half dimensions of the box.\n   * @param {Vector3} aabb.center - Center of the box.\n   * @param {Matrix4} aabb.toAABB - Transform to go from plane space to box space.\n   * @param {Object} plane - Plane representation\n   * @param {Vector3} plane.position - position of normal which describes the plane.\n   * @param {Vector3} plane.direction - Direction of normal which describes the plane.\n   *\n   * @returns {Array<Vector3>} List of all intersections in plane's space.\n   * @returns {boolean} false is invalid input provided.\n   *\n   * @example\n   * //Returns array with intersection N intersections\n   * let aabb = {\n   *   center: new Vector3(150, 150, 150),\n   *   halfDimensions: new Vector3(50, 60, 70),\n   *   toAABB: new Matrix4()\n   * }\n   * let plane = {\n   *   position: new Vector3(110, 120, 130),\n   *   direction: new Vector3(1, 0, 0)\n   * }\n   *\n   * let intersections = CoreIntersections.aabbPlane(aabb, plane);\n   * // intersections ==\n   * //[ { x : 110, y : 90,  z : 80 },\n   * //  { x : 110, y : 210, z : 220 },\n   * //  { x : 110, y : 210, z : 80 },\n   * //  { x : 110, y : 90,  z : 220 } ]\n   *\n   * //Returns empty array with 0 intersections\n   * let aabb = {\n   *\n   * }\n   * let plane = {\n   *\n   * }\n   *\n   * let intersections = VJS.Core.Validators.matrix4(new Vector3());\n   *\n   * //Returns false if invalid input?\n   *\n   */\n  static aabbPlane(aabb, plane) {\n    //\n    // obb = { halfDimensions, orientation, center, toAABB }\n    // plane = { position, direction }\n    //\n    //\n    // LOGIC:\n    //\n    // Test intersection of each edge of the Oriented Bounding Box with the Plane\n    //\n    // ALL EDGES\n    //\n    //      .+-------+\n    //    .' |     .'|\n    //   +---+---+'  |\n    //   |   |   |   |\n    //   |  ,+---+---+\n    //   |.'     | .'\n    //   +-------+'\n    //\n    // SPACE ORIENTATION\n    //\n    //       +\n    //     j |\n    //       |\n    //       |   i\n    //   k  ,+-------+\n    //    .'\n    //   +\n    //\n    //\n    // 1- Move Plane position and orientation in IJK space\n    // 2- Test Edges/ IJK Plane intersections\n    // 3- Return intersection Edge/ IJK Plane if it touches the Oriented BBox\n\n    let intersections = [];\n\n    if (!(this.validateAabb(aabb) && this.validatePlane(plane))) {\n      window.console.log('Invalid aabb or plane provided.');\n      return false;\n    }\n\n    // invert space matrix\n    let fromAABB = new Matrix4();\n    fromAABB.getInverse(aabb.toAABB);\n\n    let t1 = plane.direction.clone().applyMatrix4(aabb.toAABB);\n    let t0 = new Vector3(0, 0, 0).applyMatrix4(aabb.toAABB);\n\n    let planeAABB = this.posdir(\n      plane.position.clone().applyMatrix4(aabb.toAABB),\n      new Vector3(t1.x - t0.x, t1.y - t0.y, t1.z - t0.z).normalize()\n    );\n\n    let bbox = CoreUtils.bbox(aabb.center, aabb.halfDimensions);\n\n    let orientation = new Vector3(new Vector3(1, 0, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1));\n\n    // 12 edges (i.e. ray)/plane intersection tests\n    // RAYS STARTING FROM THE FIRST CORNER (0, 0, 0)\n    //\n    //       +\n    //       |\n    //       |\n    //       |\n    //      ,+---+---+\n    //    .'\n    //   +\n\n    let ray = this.posdir(\n      new Vector3(\n        aabb.center.x - aabb.halfDimensions.x,\n        aabb.center.y - aabb.halfDimensions.y,\n        aabb.center.z - aabb.halfDimensions.z\n      ),\n      orientation.x\n    );\n    this.rayPlaneInBBox(ray, planeAABB, bbox, intersections);\n\n    ray.direction = orientation.y;\n    this.rayPlaneInBBox(ray, planeAABB, bbox, intersections);\n\n    ray.direction = orientation.z;\n    this.rayPlaneInBBox(ray, planeAABB, bbox, intersections);\n\n    // RAYS STARTING FROM THE LAST CORNER\n    //\n    //               +\n    //             .'\n    //   +-------+'\n    //           |\n    //           |\n    //           |\n    //           +\n    //\n\n    let ray2 = this.posdir(\n      new Vector3(\n        aabb.center.x + aabb.halfDimensions.x,\n        aabb.center.y + aabb.halfDimensions.y,\n        aabb.center.z + aabb.halfDimensions.z\n      ),\n      orientation.x\n    );\n    this.rayPlaneInBBox(ray2, planeAABB, bbox, intersections);\n\n    ray2.direction = orientation.y;\n    this.rayPlaneInBBox(ray2, planeAABB, bbox, intersections);\n\n    ray2.direction = orientation.z;\n    this.rayPlaneInBBox(ray2, planeAABB, bbox, intersections);\n\n    // RAYS STARTING FROM THE SECOND CORNER\n    //\n    //               +\n    //               |\n    //               |\n    //               |\n    //               +\n    //             .'\n    //           +'\n\n    let ray3 = this.posdir(\n      new Vector3(\n        aabb.center.x + aabb.halfDimensions.x,\n        aabb.center.y - aabb.halfDimensions.y,\n        aabb.center.z - aabb.halfDimensions.z\n      ),\n      orientation.y\n    );\n    this.rayPlaneInBBox(ray3, planeAABB, bbox, intersections);\n\n    ray3.direction = orientation.z;\n    this.rayPlaneInBBox(ray3, planeAABB, bbox, intersections);\n\n    // RAYS STARTING FROM THE THIRD CORNER\n    //\n    //      .+-------+\n    //    .'\n    //   +\n    //\n    //\n    //\n    //\n\n    let ray4 = this.posdir(\n      new Vector3(\n        aabb.center.x - aabb.halfDimensions.x,\n        aabb.center.y + aabb.halfDimensions.y,\n        aabb.center.z - aabb.halfDimensions.z\n      ),\n      orientation.x\n    );\n    this.rayPlaneInBBox(ray4, planeAABB, bbox, intersections);\n\n    ray4.direction = orientation.z;\n    this.rayPlaneInBBox(ray4, planeAABB, bbox, intersections);\n\n    // RAYS STARTING FROM THE FOURTH CORNER\n    //\n    //\n    //\n    //   +\n    //   |\n    //   |\n    //   |\n    //   +-------+\n\n    let ray5 = this.posdir(\n      new Vector3(\n        aabb.center.x - aabb.halfDimensions.x,\n        aabb.center.y - aabb.halfDimensions.y,\n        aabb.center.z + aabb.halfDimensions.z\n      ),\n      orientation.x\n    );\n    this.rayPlaneInBBox(ray5, planeAABB, bbox, intersections);\n\n    ray5.direction = orientation.y;\n    this.rayPlaneInBBox(ray5, planeAABB, bbox, intersections);\n\n    // @todo make sure objects are unique...\n\n    // back to original space\n    intersections.map(function(element) {\n      return element.applyMatrix4(fromAABB);\n    });\n\n    return intersections;\n  }\n\n  /**\n   * Compute intersection between a ray and a plane.\n   *\n   * @memberOf this\n   * @public\n   *\n   * @param {Object} ray - Ray representation.\n   * @param {Vector3} ray.position - position of normal which describes the ray.\n   * @param {Vector3} ray.direction - Direction of normal which describes the ray.\n   * @param {Object} plane - Plane representation\n   * @param {Vector3} plane.position - position of normal which describes the plane.\n   * @param {Vector3} plane.direction - Direction of normal which describes the plane.\n   *\n   * @returns {Vector3|null} Intersection between ray and plane or null.\n   */\n  static rayPlane(ray, plane) {\n    // ray: {position, direction}\n    // plane: {position, direction}\n\n    if (ray.direction.dot(plane.direction) !== 0) {\n      //\n      // not parallel, move forward\n      //\n      // LOGIC:\n      //\n      // Ray equation: P = P0 + tV\n      // P = <Px, Py, Pz>\n      // P0 = <ray.position.x, ray.position.y, ray.position.z>\n      // V = <ray.direction.x, ray.direction.y, ray.direction.z>\n      //\n      // Therefore:\n      // Px = ray.position.x + t*ray.direction.x\n      // Py = ray.position.y + t*ray.direction.y\n      // Pz = ray.position.z + t*ray.direction.z\n      //\n      //\n      //\n      // Plane equation: ax + by + cz + d = 0\n      // a = plane.direction.x\n      // b = plane.direction.y\n      // c = plane.direction.z\n      // d = -( plane.direction.x*plane.position.x +\n      //        plane.direction.y*plane.position.y +\n      //        plane.direction.z*plane.position.z )\n      //\n      //\n      // 1- in the plane equation, we replace x, y and z by Px, Py and Pz\n      // 2- find t\n      // 3- replace t in Px, Py and Pz to get the coordinate of the intersection\n      //\n      let t =\n        (plane.direction.x * (plane.position.x - ray.position.x) +\n          plane.direction.y * (plane.position.y - ray.position.y) +\n          plane.direction.z * (plane.position.z - ray.position.z)) /\n        (plane.direction.x * ray.direction.x +\n          plane.direction.y * ray.direction.y +\n          plane.direction.z * ray.direction.z);\n\n      let intersection = new Vector3(\n        ray.position.x + t * ray.direction.x,\n        ray.position.y + t * ray.direction.y,\n        ray.position.z + t * ray.direction.z\n      );\n\n      return intersection;\n    }\n\n    return null;\n  }\n\n  /**\n   * Compute intersection between a ray and a box\n   * @param {Object} ray\n   * @param {Object} box\n   * @return {Array}\n   */\n  static rayBox(ray, box) {\n    // should also do the space transforms here\n    // ray: {position, direction}\n    // box: {halfDimensions, center}\n\n    let intersections = [];\n\n    let bbox = CoreUtils.bbox(box.center, box.halfDimensions);\n\n    // window.console.log(bbox);\n\n    // X min\n    let plane = this.posdir(\n      new Vector3(bbox.min.x, box.center.y, box.center.z),\n      new Vector3(-1, 0, 0)\n    );\n    this.rayPlaneInBBox(ray, plane, bbox, intersections);\n\n    // X max\n    plane = this.posdir(new Vector3(bbox.max.x, box.center.y, box.center.z), new Vector3(1, 0, 0));\n    this.rayPlaneInBBox(ray, plane, bbox, intersections);\n\n    // Y min\n    plane = this.posdir(new Vector3(box.center.x, bbox.min.y, box.center.z), new Vector3(0, -1, 0));\n    this.rayPlaneInBBox(ray, plane, bbox, intersections);\n\n    // Y max\n    plane = this.posdir(new Vector3(box.center.x, bbox.max.y, box.center.z), new Vector3(0, 1, 0));\n    this.rayPlaneInBBox(ray, plane, bbox, intersections);\n\n    // Z min\n    plane = this.posdir(new Vector3(box.center.x, box.center.y, bbox.min.z), new Vector3(0, 0, -1));\n    this.rayPlaneInBBox(ray, plane, bbox, intersections);\n\n    // Z max\n    plane = this.posdir(new Vector3(box.center.x, box.center.y, bbox.max.z), new Vector3(0, 0, 1));\n    this.rayPlaneInBBox(ray, plane, bbox, intersections);\n\n    return intersections;\n  }\n\n  /**\n   * Intersection between ray and a plane that are in a box.\n   * @param {*} ray\n   * @param {*} planeAABB\n   * @param {*} bbox\n   * @param {*} intersections\n   */\n  static rayPlaneInBBox(ray, planeAABB, bbox, intersections) {\n    let intersection = this.rayPlane(ray, planeAABB);\n    // window.console.log(intersection);\n    if (intersection && this.inBBox(intersection, bbox)) {\n      if (!intersections.find(this.findIntersection(intersection))) {\n        intersections.push(intersection);\n      }\n    }\n  }\n\n  /**\n   * Find intersection in array\n   * @param {*} myintersection\n   */\n  static findIntersection(myintersection) {\n    return function found(element, index, array) {\n      if (\n        myintersection.x === element.x &&\n        myintersection.y === element.y &&\n        myintersection.z === element.z\n      ) {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  /**\n   * Is point in box.\n   * @param {Object} point\n   * @param {Object} bbox\n   * @return {Boolean}\n   */\n  static inBBox(point, bbox) {\n    //\n    let epsilon = 0.0001;\n    if (\n      point &&\n      point.x >= bbox.min.x - epsilon &&\n      point.y >= bbox.min.y - epsilon &&\n      point.z >= bbox.min.z - epsilon &&\n      point.x <= bbox.max.x + epsilon &&\n      point.y <= bbox.max.y + epsilon &&\n      point.z <= bbox.max.z + epsilon\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static posdir(position, direction) {\n    return { position, direction };\n  }\n\n  static validatePlane(plane) {\n    //\n    if (plane === null) {\n      window.console.log('Invalid plane.');\n      window.console.log(plane);\n\n      return false;\n    }\n\n    if (!Validators.vector3(plane.position)) {\n      window.console.log('Invalid plane.position.');\n      window.console.log(plane.position);\n\n      return false;\n    }\n\n    if (!Validators.vector3(plane.direction)) {\n      window.console.log('Invalid plane.direction.');\n      window.console.log(plane.direction);\n\n      return false;\n    }\n\n    return true;\n  }\n\n  static validateAabb(aabb) {\n    //\n    if (aabb === null) {\n      window.console.log('Invalid aabb.');\n      window.console.log(aabb);\n      return false;\n    }\n\n    if (!Validators.matrix4(aabb.toAABB)) {\n      window.console.log('Invalid aabb.toAABB: ');\n      window.console.log(aabb.toAABB);\n\n      return false;\n    }\n\n    if (!Validators.vector3(aabb.center)) {\n      window.console.log('Invalid aabb.center.');\n      window.console.log(aabb.center);\n\n      return false;\n    }\n\n    if (\n      !(\n        Validators.vector3(aabb.halfDimensions) &&\n        aabb.halfDimensions.x >= 0 &&\n        aabb.halfDimensions.y >= 0 &&\n        aabb.halfDimensions.z >= 0\n      )\n    ) {\n      window.console.log('Invalid aabb.halfDimensions.');\n      window.console.log(aabb.halfDimensions);\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Vector3 } from './Vector3.js';\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\nconst _box = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nexport { Box3 };\n","import { Vector3 } from './Vector3.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector.dot( this.direction );\n\t\tconst d2 = _vector.dot( _vector ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Ray };\n","class Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n}\n\n\nexport { Layers };\n","import { Ray } from '../math/Ray.js';\nimport { Layers } from './Layers.js';\n\nfunction Raycaster( origin, direction, near = 0, far = Infinity ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near;\n\tthis.far = far;\n\tthis.camera = null;\n\tthis.layers = new Layers();\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: { threshold: 1 },\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( camera && camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera && camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive = false, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive = false, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n\nexport { Raycaster };\n","class Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nexport { Matrix3 };\n","import { Matrix3 } from './Matrix3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nexport { Plane };\n","import { Vector3 } from './Vector3.js';\nimport { Plane } from './Plane.js';\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0.subVectors( a, b );\n\t\ttarget.cross( _v0 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0.subVectors( c, a );\n\t\t_v1.subVectors( b, a );\n\t\t_v2.subVectors( point, a );\n\n\t\tconst dot00 = _v0.dot( _v0 );\n\t\tconst dot01 = _v0.dot( _v1 );\n\t\tconst dot02 = _v0.dot( _v2 );\n\t\tconst dot11 = _v1.dot( _v1 );\n\t\tconst dot12 = _v1.dot( _v2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0.subVectors( c, b );\n\t\t_v1.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0.cross( _v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0.subVectors( this.c, this.b );\n\t\t_v1.subVectors( this.a, this.b );\n\n\t\treturn _v0.cross( _v1 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nexport { Triangle };\n","import Validators from './core.validators';\n\nimport { Box3 } from 'three/src/math/Box3';\nimport { Raycaster } from 'three/src/core/Raycaster';\nimport { Triangle } from 'three/src/math/Triangle';\nimport { Matrix4 } from 'three/src/math/Matrix4';\nimport { Vector3 } from 'three/src/math/Vector3';\n\n/**\n * General purpose functions.\n *\n * @module core/utils\n */\nexport default class CoreUtils {\n  /**\n   * Generate a bouding box object.\n   * @param {Vector3} center - Center of the box.\n   * @param {Vector3} halfDimensions - Half Dimensions of the box.\n   * @return {Object} The bounding box object. {Object.min} is a {Vector3}\n   * containing the min bounds. {Object.max} is a {Vector3} containing the\n   * max bounds.\n   * @return {boolean} False input NOT valid.\n   * @example\n   * // Returns\n   * //{ min: { x : 0, y : 0,  z : 0 },\n   * //  max: { x : 2, y : 4,  z : 6 }\n   * //}\n   * VJS.Core.Utils.bbox(\n   *   new Vector3(1, 2, 3), new Vector3(1, 2, 3));\n   *\n   * //Returns false\n   * VJS.Core.Utils.bbox(new Vector3(), new Matrix4());\n   *\n   */\n  static bbox(center, halfDimensions) {\n    // make sure we have valid inputs\n    if (!(Validators.vector3(center) && Validators.vector3(halfDimensions))) {\n      console.log('Invalid center or plane halfDimensions.');\n      return false;\n    }\n\n    // make sure half dimensions are >= 0\n    if (!(halfDimensions.x >= 0 && halfDimensions.y >= 0 && halfDimensions.z >= 0)) {\n      window.console.log('halfDimensions must be >= 0.');\n      window.console.log(halfDimensions);\n      return false;\n    }\n\n    // min/max bound\n    let min = center.clone().sub(halfDimensions);\n    let max = center.clone().add(halfDimensions);\n\n    return {\n      min,\n      max,\n    };\n  }\n\n  /**\n   * Find min/max values in an array\n   * @param {Array} data\n   * @return {Array}\n   */\n  static minMax(data = []) {\n    let minMax = [65535, -32768];\n    let numPixels = data.length;\n\n    for (let index = 0; index < numPixels; index++) {\n      let spv = data[index];\n      minMax[0] = Math.min(minMax[0], spv);\n      minMax[1] = Math.max(minMax[1], spv);\n    }\n\n    return minMax;\n  }\n\n  /**\n   * Check HTMLElement\n   * @param {HTMLElement} obj\n   * @return {boolean}\n   */\n  static isElement(obj) {\n    try {\n      // Using W3 DOM2 (works for FF, Opera and Chrom)\n      return obj instanceof HTMLElement;\n    } catch (e) {\n      // Browsers not supporting W3 DOM2 don't have HTMLElement and\n      // an exception is thrown and we end up here. Testing some\n      // properties that all elements have. (works on IE7)\n      return (\n        typeof obj === 'object' &&\n        obj.nodeType === 1 &&\n        typeof obj.style === 'object' &&\n        typeof obj.ownerDocument === 'object'\n      );\n    }\n  }\n\n  /**\n   * Check string\n   * @param {String} str\n   * @return {Boolean}\n   */\n  static isString(str) {\n    return typeof str === 'string' || str instanceof String;\n  }\n\n  /**\n   * Parse url and find out the extension of the exam file.\n   *\n   * @param {*} url - The url to be parsed.\n   * The query string can contain some \"special\" parameters that can be used to ease the parsing process\n   * when the url doesn't match the exam file name on the filesystem:\n   * - filename: the name of the exam file\n   * - contentType: the mime type of the exam file. Currently only \"application/dicom\" is recognized, nifti files don't have a standard mime type.\n   * For  example:\n   * http://<hostname>/getExam?id=100&filename=myexam%2Enii%2Egz\n   * http://<hostname>/getExam?id=100&contentType=application%2Fdicom\n   *\n   * @return {Object}\n   */\n  static parseUrl(url) {\n    const parsedUrl = new URL(url, 'http://fix.me');\n    const data = {\n      filename: parsedUrl.searchParams.get('filename'),\n      extension: '',\n      pathname: parsedUrl.pathname,\n      query: parsedUrl.search,\n    };\n\n    // get file name\n    if (!data.filename) {\n      data.filename = data.pathname.split('/').pop();\n    }\n\n    // find extension\n    const splittedName = data.filename.split('.');\n\n    data.extension = splittedName.length > 1 ? splittedName.pop() : 'dicom';\n\n    const skipExt = [\n      'asp',\n      'aspx',\n      'go',\n      'gs',\n      'hs',\n      'jsp',\n      'js',\n      'php',\n      'pl',\n      'py',\n      'rb',\n      'htm',\n      'html',\n    ];\n\n    if (\n      !isNaN(data.extension) ||\n      skipExt.indexOf(data.extension) !== -1 ||\n      (data.query && data.query.includes('contentType=application%2Fdicom'))\n    ) {\n      data.extension = 'dicom';\n    }\n\n    return data;\n  }\n\n  /**\n   * Compute IJK to LPS tranform.\n   *  http://nipy.org/nibabel/dicom/dicom_orientation.html\n   *\n   * @param {*} xCos\n   * @param {*} yCos\n   * @param {*} zCos\n   * @param {*} spacing\n   * @param {*} origin\n   * @param {*} registrationMatrix\n   *\n   * @return {*}\n   */\n  static ijk2LPS(xCos, yCos, zCos, spacing, origin, registrationMatrix = new Matrix4()) {\n    const ijk2LPS = new Matrix4();\n    ijk2LPS.set(\n      xCos.x * spacing.y,\n      yCos.x * spacing.x,\n      zCos.x * spacing.z,\n      origin.x,\n      xCos.y * spacing.y,\n      yCos.y * spacing.x,\n      zCos.y * spacing.z,\n      origin.y,\n      xCos.z * spacing.y,\n      yCos.z * spacing.x,\n      zCos.z * spacing.z,\n      origin.z,\n      0,\n      0,\n      0,\n      1\n    );\n    ijk2LPS.premultiply(registrationMatrix);\n\n    return ijk2LPS;\n  }\n\n  /**\n   * Compute AABB to LPS transform.\n   * AABB: Axe Aligned Bounding Box.\n   *\n   * @param {*} xCos\n   * @param {*} yCos\n   * @param {*} zCos\n   * @param {*} origin\n   *\n   * @return {*}\n   */\n  static aabb2LPS(xCos, yCos, zCos, origin) {\n    const aabb2LPS = new Matrix4();\n    aabb2LPS.set(\n      xCos.x,\n      yCos.x,\n      zCos.x,\n      origin.x,\n      xCos.y,\n      yCos.y,\n      zCos.y,\n      origin.y,\n      xCos.z,\n      yCos.z,\n      zCos.z,\n      origin.z,\n      0,\n      0,\n      0,\n      1\n    );\n\n    return aabb2LPS;\n  }\n\n  /**\n   * Transform coordinates from world coordinate to data\n   *\n   * @param {*} lps2IJK\n   * @param {*} worldCoordinates\n   *\n   * @return {*}\n   */\n  static worldToData(lps2IJK, worldCoordinates) {\n    let dataCoordinate = new Vector3().copy(worldCoordinates).applyMatrix4(lps2IJK);\n\n    // same rounding in the shaders\n    dataCoordinate.addScalar(0.5).floor();\n\n    return dataCoordinate;\n  }\n\n  static value(stack, coordinate) {\n    window.console.warn('value is deprecated, please use getPixelData instead');\n    this.getPixelData(stack, coordinate);\n  }\n\n  /**\n   * Get voxel value\n   *\n   * @param {ModelsStack} stack\n   * @param {Vector3} coordinate\n   * @return {*}\n   */\n  static getPixelData(stack, coordinate) {\n    if (coordinate.z >= 0 && coordinate.z < stack._frame.length) {\n      return stack._frame[coordinate.z].getPixelData(coordinate.x, coordinate.y);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Set voxel value\n   *\n   * @param {ModelsStack} stack\n   * @param {Vector3} coordinate\n   * @param {Number} value\n   * @return {*}\n   */\n  static setPixelData(stack, coordinate, value) {\n    if (coordinate.z >= 0 && coordinate.z < stack._frame.length) {\n      stack._frame[coordinate.z].setPixelData(coordinate.x, coordinate.y, value);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Apply slope/intercept to a value\n   *\n   * @param {*} value\n   * @param {*} slope\n   * @param {*} intercept\n   *\n   * @return {*}\n   */\n  static rescaleSlopeIntercept(value, slope, intercept) {\n    return value * slope + intercept;\n  }\n\n  /**\n   *\n   * Convenience function to extract center of mass from list of points.\n   *\n   * @param {Array<Vector3>} points - Set of points from which we want to extract the center of mass.\n   *\n   * @returns {Vector3} Center of mass from given points.\n   */\n  static centerOfMass(points) {\n    let centerOfMass = new Vector3(0, 0, 0);\n    for (let i = 0; i < points.length; i++) {\n      centerOfMass.x += points[i].x;\n      centerOfMass.y += points[i].y;\n      centerOfMass.z += points[i].z;\n    }\n    centerOfMass.divideScalar(points.length);\n\n    return centerOfMass;\n  }\n\n  /**\n   *\n   * Order 3D planar points around a refence point.\n   *\n   * @private\n   *\n   * @param {Array<Vector3>} points - Set of planar 3D points to be ordered.\n   * @param {Vector3} direction - Direction of the plane in which points and reference are sitting.\n   *\n   * @returns {Array<Object>} Set of object representing the ordered points.\n   */\n  static orderIntersections(points, direction) {\n    let reference = this.centerOfMass(points);\n    // direction from first point to reference\n    let referenceDirection = new Vector3(\n      points[0].x - reference.x,\n      points[0].y - reference.y,\n      points[0].z - reference.z\n    ).normalize();\n\n    let base = new Vector3(0, 0, 0).crossVectors(referenceDirection, direction).normalize();\n\n    let orderedpoints = [];\n\n    // other lines // if inter, return location + angle\n    for (let j = 0; j < points.length; j++) {\n      let point = new Vector3(points[j].x, points[j].y, points[j].z);\n      point.direction = new Vector3(\n        points[j].x - reference.x,\n        points[j].y - reference.y,\n        points[j].z - reference.z\n      ).normalize();\n\n      let x = referenceDirection.dot(point.direction);\n      let y = base.dot(point.direction);\n      point.xy = { x, y };\n\n      let theta = Math.atan2(y, x) * (180 / Math.PI);\n      point.angle = theta;\n\n      orderedpoints.push(point);\n    }\n\n    orderedpoints.sort(function(a, b) {\n      return a.angle - b.angle;\n    });\n\n    let noDups = [orderedpoints[0]];\n    let epsilon = 0.0001;\n    for (let i = 1; i < orderedpoints.length; i++) {\n      if (Math.abs(orderedpoints[i - 1].angle - orderedpoints[i].angle) > epsilon) {\n        noDups.push(orderedpoints[i]);\n      }\n    }\n\n    return noDups;\n  }\n\n  /**\n   * Get min, max, mean and sd of voxel values behind the mesh\n   *\n   * @param {THREE.Mesh}  mesh    Region of Interest\n   * @param {*}           camera  Tested on CamerasOrthographic\n   * @param {ModelsStack} stack\n   *\n   * @return {Object|null}\n   */\n  static getRoI(mesh, camera, stack) {\n    mesh.geometry.computeBoundingBox();\n\n    const bbox = new Box3().setFromObject(mesh);\n    const min = bbox.min.clone().project(camera);\n    const max = bbox.max.clone().project(camera);\n    const offsetWidth = camera.controls.domElement.offsetWidth;\n    const offsetHeight = camera.controls.domElement.offsetHeight;\n    const rayCaster = new Raycaster();\n    const values = [];\n\n    min.x = Math.round(((min.x + 1) * offsetWidth) / 2);\n    min.y = Math.round(((-min.y + 1) * offsetHeight) / 2);\n    max.x = Math.round(((max.x + 1) * offsetWidth) / 2);\n    max.y = Math.round(((-max.y + 1) * offsetHeight) / 2);\n    [min.x, max.x] = [Math.min(min.x, max.x), Math.max(min.x, max.x)];\n    [min.y, max.y] = [Math.min(min.y, max.y), Math.max(min.y, max.y)];\n\n    let intersect = [];\n    let value = null;\n\n    for (let x = min.x; x <= max.x; x++) {\n      for (let y = min.y; y <= max.y; y++) {\n        rayCaster.setFromCamera(\n          {\n            x: (x / offsetWidth) * 2 - 1,\n            y: -(y / offsetHeight) * 2 + 1,\n          },\n          camera\n        );\n        intersect = rayCaster.intersectObject(mesh);\n\n        if (intersect.length === 0) {\n          continue;\n        }\n\n        value = CoreUtils.getPixelData(\n          stack,\n          CoreUtils.worldToData(stack.lps2IJK, intersect[0].point)\n        );\n\n        // the image isn't RGB and coordinates are inside it\n        if (value !== null && stack.numberOfChannels === 1) {\n          values.push(\n            CoreUtils.rescaleSlopeIntercept(value, stack.rescaleSlope, stack.rescaleIntercept)\n          );\n        }\n      }\n    }\n\n    if (values.length === 0) {\n      return null;\n    }\n\n    const avg = values.reduce((sum, val) => sum + val) / values.length;\n\n    return {\n      min: values.reduce((prev, val) => (prev < val ? prev : val)),\n      max: values.reduce((prev, val) => (prev > val ? prev : val)),\n      mean: avg,\n      sd: Math.sqrt(values.reduce((sum, val) => sum + Math.pow(val - avg, 2), 0) / values.length),\n    };\n  }\n\n  /**\n   * Calculate shape area (sum of triangle polygons area).\n   * May be inaccurate or completely wrong for some shapes.\n   *\n   * @param {THREE.Geometry} geometry\n   *\n   * @returns {Number}\n   */\n  static getGeometryArea(geometry) {\n    if (geometry.faces.length < 1) {\n      return 0.0;\n    }\n\n    let area = 0.0;\n    let vertices = geometry.vertices;\n\n    geometry.faces.forEach(function(elem) {\n      area += new Triangle(vertices[elem.a], vertices[elem.b], vertices[elem.c]).getArea();\n    });\n\n    return area;\n  }\n\n  static stringToNumber(numberAsString) {\n    let number = Number(numberAsString);\n\n    // returns true is number is NaN\n    if (number !== number) {\n      const dots = (numberAsString.match(/\\./g)||[]).length;\n      const commas = (numberAsString.match(/\\,/g)||[]).length;\n\n      if (commas === 1 && dots < 2) {\n        // convert 1,45 to 1.45\n        // convert 1,456.78 to 1456.78\n        const replaceBy = dots === 0 ? '.' : '';\n        const stringWithoutComma = numberAsString.replace(/,/g, replaceBy);\n        number = Number(stringWithoutComma);\n      }\n\n      // if that didn't help\n      // weird stuff happenning\n      // should throw an error instead of setting value to 1.0\n      if (number !== number) {\n        console.error(`String could not be converted to number (${numberAsString}). Setting value to \"1.0\".`);\n        number = 1.0;\n      }\n    }\n\n    return number;\n  }\n}\n","/**\n * Validate basic structures.\n *\n * @example\n * //Returns true\n * VJS.Core.Validators.matrix4(new THREE.Matrix4());\n *\n * //Returns false\n * VJS.Core.Validators.matrix4(new THREE.Vector3());\n *\n * @module core/validators\n */\n\nexport default class Validators {\n  /**\n   * Validates a matrix as a THREEJS.Matrix4\n   * link\n   * @param {Object} objectToTest - The object to be tested.\n   * @return {boolean} True if valid Matrix4, false if NOT.\n   */\n  static matrix4(objectToTest) {\n    if (\n      !(\n        objectToTest !== null &&\n        typeof objectToTest !== 'undefined' &&\n        objectToTest.hasOwnProperty('elements') &&\n        objectToTest.elements.length === 16 &&\n        typeof objectToTest.identity === 'function' &&\n        typeof objectToTest.copy === 'function' &&\n        typeof objectToTest.determinant === 'function'\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Validates a vector as a THREEJS.Vector3\n   * @param {Object} objectToTest - The object to be tested.\n   * @return {boolean} True if valid Vector3, false if NOT.\n   */\n  static vector3(objectToTest) {\n    if (\n      !(\n        objectToTest !== null &&\n        typeof objectToTest !== 'undefined' &&\n        objectToTest.hasOwnProperty('x') &&\n        objectToTest.hasOwnProperty('y') &&\n        objectToTest.hasOwnProperty('z') &&\n        !objectToTest.hasOwnProperty('w')\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Validates a box.\n   *\n   * @example\n   * // a box is defined as\n   * let box = {\n   *   center: THREE.Vector3,\n   *   halfDimensions: THREE.Vector3\n   * }\n   *\n   * @param {Object} objectToTest - The object to be tested.\n   * @return {boolean} True if valid box, false if NOT.\n   */\n  static box(objectToTest) {\n    if (\n      !(\n        objectToTest !== null &&\n        typeof objectToTest !== 'undefined' &&\n        objectToTest.hasOwnProperty('center') &&\n        this.vector3(objectToTest.center) &&\n        objectToTest.hasOwnProperty('halfDimensions') &&\n        this.vector3(objectToTest.halfDimensions) &&\n        objectToTest.halfDimensions.x >= 0 &&\n        objectToTest.halfDimensions.y >= 0 &&\n        objectToTest.halfDimensions.z >= 0\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Validates a ray.\n   *\n   * @example\n   * // a ray is defined as\n   * let ray = {\n   *   postion: THREE.Vector3,\n   *   direction: THREE.Vector3\n   * }\n   *\n   * @param {Object} objectToTest - The object to be tested.\n   * @return {boolean} True if valid ray, false if NOT.\n   */\n  static ray(objectToTest) {\n    if (\n      !(\n        objectToTest !== null &&\n        typeof objectToTest !== 'undefined' &&\n        objectToTest.hasOwnProperty('position') &&\n        this.vector3(objectToTest.position) &&\n        objectToTest.hasOwnProperty('direction') &&\n        this.vector3(objectToTest.direction)\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","/**\n *\n * @module geometries/voxel\n */\n\nconst geometriesVoxel = (three = window.THREE) => {\n  if (three === undefined || three.BoxGeometry === undefined) {\n    return null;\n  }\n\n  const Constructor = three.BoxGeometry;\n  return class extends Constructor {\n    constructor(dataPosition) {\n      super(1, 1, 1);\n\n      this._location = dataPosition;\n\n      this.applyMatrix(\n        new three.Matrix4().makeTranslation(this._location.x, this._location.y, this._location.z)\n      );\n\n      this.verticesNeedUpdate = true;\n    }\n\n    resetVertices() {\n      this.vertices[0].set(0.5, 0.5, 0.5);\n      this.vertices[1].set(0.5, 0.5, -0.5);\n      this.vertices[2].set(0.5, -0.5, 0.5);\n      this.vertices[3].set(0.5, -0.5, -0.5);\n      this.vertices[4].set(-0.5, 0.5, -0.5);\n      this.vertices[5].set(-0.5, 0.5, 0.5);\n      this.vertices[6].set(-0.5, -0.5, -0.5);\n      this.vertices[7].set(-0.5, -0.5, 0.5);\n    }\n\n    set location(location) {\n      this._location = location;\n\n      // update vertices from location\n      this.vertices[0].set(+0.5, +0.5, +0.5);\n      this.vertices[1].set(+0.5, +0.5, -0.5);\n      this.vertices[2].set(+0.5, -0.5, +0.5);\n      this.vertices[3].set(+0.5, -0.5, -0.5);\n      this.vertices[4].set(-0.5, +0.5, -0.5);\n      this.vertices[5].set(-0.5, +0.5, +0.5);\n      this.vertices[6].set(-0.5, -0.5, -0.5);\n      this.vertices[7].set(-0.5, -0.5, +0.5);\n\n      this.applyMatrix(\n        new three.Matrix4().makeTranslation(this._location.x, this._location.y, this._location.z)\n      );\n\n      this.verticesNeedUpdate = true;\n    }\n\n    get location() {\n      return this._location;\n    }\n  };\n};\n\n// export factory\nexport { geometriesVoxel };\n// default export to\nexport default geometriesVoxel();\n","/** * Imports ***/\nimport coreIntersections from '../core/core.intersections';\nimport coreUtils from '../core/core.utils';\n\n/**\n *\n * It is typically used for creating an irregular 3D planar shape given a box and the cut-plane.\n *\n * Demo: {@link https://fnndsc.github.io/vjs#geometry_slice}\n *\n * @module geometries/slice\n *\n * @param {Vector3} halfDimensions - Half-dimensions of the box to be sliced.\n * @param {Vector3} center - Center of the box to be sliced.\n * @param {Vector3<Vector3>} orientation - Orientation of the box to be sliced. (might not be necessary..?)\n * @param {Vector3} position - Position of the cutting plane.\n * @param {Vector3} direction - Cross direction of the cutting plane.\n *\n * @example\n * // Define box to be sliced\n * let halfDimensions = new THREE.Vector(123, 45, 67);\n * let center = new Vector3(0, 0, 0);\n * let orientation = new Vector3(\n *   new Vector3(1, 0, 0),\n *   new Vector3(0, 1, 0),\n *   new Vector3(0, 0, 1)\n * );\n *\n * // Define slice plane\n * let position = center.clone();\n * let direction = new Vector3(-0.2, 0.5, 0.3);\n *\n * // Create the slice geometry & materials\n * let sliceGeometry = new VJS.geometries.slice(halfDimensions, center, orientation, position, direction);\n * let sliceMaterial = new THREE.MeshBasicMaterial({\n *   'side': THREE.DoubleSide,\n *   'color': 0xFF5722\n * });\n *\n *  // Create mesh and add it to the scene\n *  let slice = new THREE.Mesh(sliceGeometry, sliceMaterial);\n *  scene.add(slice);\n */\nimport {ShapeBufferGeometry, Matrix4, Shape, Float32BufferAttribute} from 'three'\nconst geometriesSlice = () => {\n\n  const Constructor = ShapeBufferGeometry;\n  return class extends Constructor {\n    constructor(halfDimensions, center, position, direction, toAABB = new Matrix4()) {\n      //\n      // prepare data for the shape!\n      //\n      let aabb = {\n        halfDimensions,\n        center,\n        toAABB,\n      };\n\n      let plane = {\n        position,\n        direction,\n      };\n\n      // BOOM!\n      let intersections = coreIntersections.aabbPlane(aabb, plane);\n\n      // can not exist before calling the constructor\n      if (intersections.length < 3) {\n        window.console.log('WARNING: Less than 3 intersections between AABB and Plane.');\n        window.console.log('AABB');\n        window.console.log(aabb);\n        window.console.log('Plane');\n        window.console.log(plane);\n        window.console.log('exiting...');\n        const err = new Error(\n          'geometries.slice has less than 3 intersections, can not create a valid geometry.'\n        );\n        throw err;\n      }\n\n      let points = coreUtils.orderIntersections(intersections, direction);\n\n      // create the shape\n      let shape = new Shape();\n      // move to first point!\n      shape.moveTo(points[0].xy.x, points[0].xy.y);\n\n      // loop through all points!\n      const positions = new Float32Array(points.length * 3);\n      positions.set(points[0].toArray(), 0);\n\n      for (let i = 1; i < points.length; i++) {\n        // project each on plane!\n        positions.set(points[i].toArray(), i * 3);\n\n        shape.lineTo(points[i].xy.x, points[i].xy.y);\n      }\n\n      // close the shape!\n      shape.lineTo(points[0].xy.x, points[0].xy.y);\n\n      //\n      // Generate Slice Buffer Geometry from Shape Buffer Geomtry\n      // bewcause it does triangulation for us!\n      super(shape);\n      this.type = 'SliceBufferGeometry';\n\n      // update real position of each vertex! (not in 2d)\n      this.setAttribute( 'position', new three.Float32BufferAttribute( positions, 3 ) );\n      this.vertices = points; // legacy code to compute normals int he SliceHelper\n    }\n  };\n};\n\n// export factory\nexport { geometriesSlice };\n// default export to\nexport default geometriesSlice();\n","/**\n * @module helpers/border\n */\n\n import {Object3D, BufferGeometry, LineBasicMaterial, Line, Float32BufferAttribute} from 'three'\nconst helpersBorder = () => {\n\n  const Constructor = Object3D;\n  return class extends Constructor {\n    constructor(helpersSlice) {\n      //\n      super();\n\n      this._helpersSlice = helpersSlice;\n\n      this._visible = true;\n      this._color = 0xff0000;\n      this._material = null;\n      this._geometry = null;\n      this._mesh = null;\n\n      this._create();\n    }\n\n    set helpersSlice(helpersSlice) {\n      this._helpersSlice = helpersSlice;\n      this._update();\n    }\n\n    get helpersSlice() {\n      return this._helpersSlice;\n    }\n\n    set visible(visible) {\n      this._visible = visible;\n      if (this._mesh) {\n        this._mesh.visible = this._visible;\n      }\n    }\n\n    get visible() {\n      return this._visible;\n    }\n\n    set color(color) {\n      this._color = color;\n      if (this._material) {\n        this._material.color.set(this._color);\n      }\n    }\n\n    get color() {\n      return this._color;\n    }\n\n    _create() {\n      if (!this._material) {\n        this._material = new LineBasicMaterial({\n          color: this._color,\n          linewidth: 1,\n        });\n      }\n\n      if (!this._helpersSlice.geometry.vertices) {\n        return;\n      }\n\n      this._geometry = new BufferGeometry();\n  \n      // set vertices positions\n      const nbOfVertices = this._helpersSlice.geometry.vertices.length;\n      const positions = new Float32Array((nbOfVertices + 1) * 3);\n      positions.set(this._helpersSlice.geometry.attributes.position.array, 0);\n      positions.set(this._helpersSlice.geometry.vertices[0].toArray(), nbOfVertices * 3);\n      this._geometry.setAttribute( 'position', new three.Float32BufferAttribute( positions, 3 ) );\n\n      this._mesh = new Line(this._geometry, this._material);\n      if (this._helpersSlice.aabbSpace === 'IJK') {\n        this._mesh.applyMatrix4(this._helpersSlice.stack.ijk2LPS);\n      }\n      this._mesh.visible = this._visible;\n\n      // and add it!\n      this.add(this._mesh);\n    }\n\n    _update() {\n      // update slice\n      if (this._mesh) {\n        this.remove(this._mesh);\n        this._mesh.geometry.dispose();\n        this._mesh = null;\n      }\n\n      this._create();\n    }\n\n    dispose() {\n      this._mesh.material.dispose();\n      this._mesh.material = null;\n      this._geometry.dispose();\n      this._geometry = null;\n      this._material.dispose();\n      this._material = null;\n    }\n  };\n};\n\n// export factory\nexport { helpersBorder };\n// default export to\nexport default helpersBorder();\n","/**\n * @module helpers/boundingbox\n */\nimport {Object3D, Vector3, BoxGeometry, Matrix4, MeshBasicMaterial, Mesh, BoxHelper} from 'three'\nconst helpersBoundingBox = () => {\n\n  const Constructor = Object3D;\n  return class extends Constructor {\n    constructor(stack) {\n      //\n      super();\n\n      // private vars\n      this._stack = stack;\n      this._visible = true;\n      this._color = 0xffffff;\n      this._material = null;\n      this._geometry = null;\n      this._mesh = null;\n      this._meshStack = null;\n\n      // create object\n      this._create();\n    }\n\n    // getters/setters\n    set visible(visible) {\n      this._visible = visible;\n      if (this._mesh) {\n        this._mesh.visible = this._visible;\n      }\n    }\n\n    get visible() {\n      return this._visible;\n    }\n\n    set color(color) {\n      this._color = color;\n      if (this._material) {\n        this._material.color.set(this._color);\n      }\n    }\n\n    get color() {\n      return this._color;\n    }\n\n    // private methods\n    _create() {\n      // Convenience vars\n      const dimensions = this._stack.dimensionsIJK;\n      const halfDimensions = this._stack.halfDimensionsIJK;\n      const offset = new Vector3(-0.5, -0.5, -0.5);\n\n      // Geometry\n      const geometry = new three.BoxGeometry(dimensions.x, dimensions.y, dimensions.z);\n      geometry.applyMatrix4(\n        new three.Matrix4().makeTranslation(\n          halfDimensions.x + offset.x,\n          halfDimensions.y + offset.y,\n          halfDimensions.z + offset.z\n        )\n      );\n      this._geometry = geometry;\n\n      // Material\n      this._material = new MeshBasicMaterial({\n        wireframe: true,\n      });\n\n      const mesh = new three.Mesh(this._geometry, null);\n      mesh.applyMatrix4(this._stack.ijk2LPS);\n      mesh.visible = this._visible;\n      this._meshStack = mesh;\n\n      this._mesh = new BoxHelper(this._meshStack, this._color);\n      this._material = this._mesh.material;\n\n      this.add(this._mesh);\n    }\n\n    _update() {\n      if (this._mesh) {\n        this.remove(this._mesh);\n        this._mesh.geometry.dispose();\n        this._mesh.geometry = null;\n        this._mesh.material.dispose();\n        this._mesh.material = null;\n        this._mesh = null;\n      }\n\n      this._create();\n    }\n\n    dispose() {\n      this._mesh.material.dispose();\n      this._mesh.material = null;\n      this._geometry.dispose();\n      this._geometry = null;\n      this._material.dispose();\n      this._material = null;\n    }\n  };\n};\n\n// export factory\nexport { helpersBoundingBox };\n// default export too\nexport default helpersBoundingBox();\n","/** * Imports ***/\nimport ShadersUniform from '../shaders/shaders.contour.uniform';\nimport ShadersVertex from '../shaders/shaders.contour.vertex';\nimport ShadersFragment from '../shaders/shaders.contour.fragment';\n\n/**\n * @module helpers/contour\n */\nconst helpersContour = (three = window.THREE) => {\n  if (three === undefined || three.Object3D === undefined) {\n    return null;\n  }\n\n  const Constructor = three.Object3D;\n  return class extends Constructor {\n    constructor(stack, geometry, texture) {\n      //\n      super();\n\n      this._stack = stack;\n      this._textureToFilter = texture;\n      this._contourWidth = 1;\n      this._contourOpacity = 1;\n      this._canvasWidth = 0;\n      this._canvasHeight = 0;\n      this._shadersFragment = ShadersFragment;\n      this._shadersVertex = ShadersVertex;\n      this._uniforms = ShadersUniform.uniforms();\n      this._material = null;\n      this._geometry = geometry;\n\n      this._create();\n    }\n\n    _create() {\n      this._prepareMaterial();\n      this._mesh = new three.Mesh(this._geometry, this._material);\n      this._mesh.applyMatrix4(this._stack._ijk2LPS);\n      this.add(this._mesh);\n    }\n\n    _prepareMaterial() {\n      if (!this._material) {\n        // contour default width\n        this._uniforms.uWidth.value = this._contourWidth;\n        this._uniforms.uOpacity.value = this._contourOpacity;\n\n        //\n        this._uniforms.uCanvasWidth.value = this._canvasWidth;\n        this._uniforms.uCanvasHeight.value = this._canvasHeight;\n\n        // generate material\n        let fs = new ShadersFragment(this._uniforms);\n        let vs = new ShadersVertex();\n        this._material = new three.ShaderMaterial({\n          side: three.DoubleSide,\n          uniforms: this._uniforms,\n          vertexShader: vs.compute(),\n          fragmentShader: fs.compute(),\n          transparent: true,\n        });\n      }\n    }\n\n    update() {\n      if (this._mesh) {\n        this.remove(this._mesh);\n        this._mesh.geometry.dispose();\n        this._mesh.geometry = null;\n        this._mesh = null;\n      }\n\n      this._create();\n    }\n\n    dispose() {\n      //\n      if (this._textureToFilter !== null) {\n        this._textureToFilter.dispose();\n        this._textureToFilter = null;\n      }\n\n      this._shadersFragment = null;\n      this._shadersVertex = null;\n\n      this._uniforms = null;\n\n      // material, geometry and mesh\n      this.remove(this._mesh);\n      this._mesh.geometry.dispose();\n      this._mesh.geometry = null;\n      this._mesh.material.dispose();\n      this._mesh.material = null;\n      this._mesh = null;\n\n      this._geometry.dispose();\n      this._geometry = null;\n      this._material.vertexShader = null;\n      this._material.fragmentShader = null;\n      this._material.uniforms = null;\n      this._material.dispose();\n      this._material = null;\n\n      this._stack = null;\n    }\n\n    get geometry() {\n      return this._geometry;\n    }\n\n    set geometry(geometry) {\n      if (this._mesh) {\n        this.remove(this._mesh);\n        this._mesh.geometry.dispose();\n        this._mesh.geometry = null;\n        this._mesh = null;\n\n        this._geometry.dispose();\n        this._geometry = null;\n      }\n\n      this._geometry = geometry;\n\n      this._create();\n    }\n\n    get textureToFilter() {\n      return this._textureToFilter;\n    }\n\n    set textureToFilter(texture) {\n      this._textureToFilter = texture;\n      this._uniforms.uTextureFilled.value = texture;\n      this._material.needsUpdate = true;\n    }\n\n    get contourOpacity() {\n      return this._contourOpacity;\n    }\n\n    set contourOpacity(contourOpacity) {\n      this._contourOpacity = contourOpacity;\n      this._uniforms.uOpacity.value = this._contourOpacity;\n    }\n\n    get contourWidth() {\n      return this._contourWidth;\n    }\n\n    set contourWidth(contourWidth) {\n      this._contourWidth = contourWidth;\n      this._uniforms.uWidth.value = this._contourWidth;\n    }\n\n    get canvasWidth() {\n      return this._canvasWidth;\n    }\n\n    set canvasWidth(canvasWidth) {\n      this._canvasWidth = canvasWidth;\n      this._uniforms.uCanvasWidth.value = this._canvasWidth;\n    }\n\n    get canvasHeight() {\n      return this._canvasHeight;\n    }\n\n    set canvasHeight(canvasHeight) {\n      this._canvasHeight = canvasHeight;\n      this._uniforms.uCanvasHeight.value = this._canvasHeight;\n    }\n  };\n};\n\n// export factory\nexport { helpersContour };\n// default export to\nexport default helpersContour();\n","/** * Imports ***/\nimport ShadersUniform from '../shaders/shaders.localizer.uniform';\nimport ShadersVertex from '../shaders/shaders.localizer.vertex';\nimport ShadersFragment from '../shaders/shaders.localizer.fragment';\n\n/**\n * @module helpers/localizer\n */\nconst helpersLocalizer = (three = window.THREE) => {\n  if (three === undefined || three.Object3D === undefined) {\n    return null;\n  }\n\n  const Constructor = three.Object3D;\n  return class extends Constructor {\n    constructor(stack, geometry, referencePlane) {\n      //\n      super();\n\n      this._stack = stack;\n      this._referencePlane = referencePlane;\n      this._plane1 = null;\n      this._color1 = null;\n      this._plane2 = null;\n      this._color2 = null;\n      this._plane3 = null;\n      this._color3 = null;\n      this._canvasWidth = 0;\n      this._canvasHeight = 0;\n      this._shadersFragment = ShadersFragment;\n      this._shadersVertex = ShadersVertex;\n      this._uniforms = ShadersUniform.uniforms();\n      this._material = null;\n      this._geometry = geometry;\n\n      this._create();\n    }\n\n    _create() {\n      this._prepareMaterial();\n      this._mesh = new three.Mesh(this._geometry, this._material);\n      this._mesh.applyMatrix(this._stack._ijk2LPS);\n      this.add(this._mesh);\n    }\n\n    _prepareMaterial() {\n      if (!this._material) {\n        // reference plane\n        this._uniforms.uSlice.value = this._referencePlane;\n\n        // localizer planes\n        if (this._plane1) {\n          this._uniforms.uPlane1.value = this._plane1;\n          this._uniforms.uPlaneColor1.value = this._color1;\n        }\n\n        if (this._plane2) {\n          this._uniforms.uPlane2.value = this._plane2;\n          this._uniforms.uPlaneColor2.value = this._color2;\n        }\n\n        if (this._plane3) {\n          this._uniforms.uPlane3.value = this._plane3;\n          this._uniforms.uPlaneColor3.value = this._color3;\n        }\n\n        //\n        this._uniforms.uCanvasWidth.value = this._canvasWidth;\n        this._uniforms.uCanvasHeight.value = this._canvasHeight;\n\n        // generate material\n        let fs = new ShadersFragment(this._uniforms);\n        let vs = new ShadersVertex();\n        this._material = new three.ShaderMaterial({\n          side: three.DoubleSide,\n          uniforms: this._uniforms,\n          vertexShader: vs.compute(),\n          fragmentShader: fs.compute(),\n        });\n        this._material.transparent = true;\n      }\n    }\n\n    update() {\n      if (this._mesh) {\n        this.remove(this._mesh);\n        this._mesh.geometry.dispose();\n        this._mesh.geometry = null;\n        this._mesh = null;\n      }\n\n      this._create();\n    }\n\n    dispose() {\n      //\n      this._referencePlane = null;\n      this._plane1 = null;\n      this._color1 = null;\n      this._plane2 = null;\n      this._color2 = null;\n      this._plane3 = null;\n      this._color3 = null;\n\n      this._shadersFragment = null;\n      this._shadersVertex = null;\n\n      this._uniforms = null;\n\n      // material, geometry and mesh\n      this.remove(this._mesh);\n      this._mesh.geometry.dispose();\n      this._mesh.geometry = null;\n      this._mesh.material.dispose();\n      this._mesh.material = null;\n      this._mesh = null;\n\n      this._geometry.dispose();\n      this._geometry = null;\n      this._material.vertexShader = null;\n      this._material.fragmentShader = null;\n      this._material.uniforms = null;\n      this._material.dispose();\n      this._material = null;\n\n      this._stack = null;\n    }\n\n    get geometry() {\n      return this._geometry;\n    }\n\n    set geometry(geometry) {\n      if (this._mesh) {\n        this.remove(this._mesh);\n        this._mesh.geometry.dispose();\n        this._mesh.geometry = null;\n        this._mesh = null;\n\n        this._geometry.dispose();\n        this._geometry = null;\n      }\n\n      this._geometry = geometry;\n\n      this._create();\n    }\n\n    get referencePlane() {\n      return this._referencePlane;\n    }\n\n    set referencePlane(referencePlane) {\n      this._referencePlane = referencePlane;\n      this._uniforms.uSlice.value = this._referencePlane;\n    }\n\n    get plane1() {\n      return this._plane1;\n    }\n\n    set plane1(plane1) {\n      this._plane1 = plane1;\n      this._uniforms.uPlane1.value = this._plane1;\n    }\n\n    get color1() {\n      return this._color1;\n    }\n\n    set color1(color1) {\n      this._color1 = color1;\n      this._uniforms.uPlaneColor1.value = this._color1;\n    }\n\n    get plane2() {\n      return this._plane2;\n    }\n\n    set plane2(plane2) {\n      this._plane2 = plane2;\n      this._uniforms.uPlane2.value = this._plane2;\n    }\n\n    get color2() {\n      return this._color2;\n    }\n\n    set color2(color2) {\n      this._color2 = color2;\n      this._uniforms.uPlaneColor2.value = this._color2;\n    }\n\n    get plane3() {\n      return this._plane3;\n    }\n\n    set plane3(plane3) {\n      this._plane3 = plane3;\n      this._uniforms.uPlane3.value = this._plane3;\n    }\n\n    get color3() {\n      return this._color3;\n    }\n\n    set color3(color3) {\n      this._color3 = color3;\n      this._uniforms.uPlaneColor3.value = this._color3;\n    }\n\n    get canvasWidth() {\n      return this._canvasWidth;\n    }\n\n    set canvasWidth(canvasWidth) {\n      this._canvasWidth = canvasWidth;\n      this._uniforms.uCanvasWidth.value = this._canvasWidth;\n    }\n\n    get canvasHeight() {\n      return this._canvasHeight;\n    }\n\n    set canvasHeight(canvasHeight) {\n      this._canvasHeight = canvasHeight;\n      this._uniforms.uCanvasHeight.value = this._canvasHeight;\n    }\n  };\n};\n\nexport { helpersLocalizer };\nexport default helpersLocalizer();\n","import CoreUtils from '../core/core.utils';\n\n/**\n * @module helpers/lut\n */\n\n import {Object3D, Texture, ClampToEdgeWrapping, NearestFilter, UVMapping} from 'three'\n\nconst helpersLut = () => {\n\n  const Constructor = Object3D;\n  return class extends Constructor {\n    constructor(\n      domTarget,\n      lut = 'default',\n      lutO = 'linear',\n      color = [[0, 0, 0, 0], [1, 1, 1, 1]],\n      opacity = [[0, 0], [1, 1]],\n      discrete = false\n    ) {\n      // min/max (0-1 or real intensities)\n      // show/hide\n      // horizontal/vertical\n      super();\n      if (CoreUtils.isString(domTarget)) {\n        this._dom = document.getElementById(domTarget);\n      } else {\n        this._dom = domTarget;\n      }\n\n      this._discrete = discrete;\n      this._color = color;\n      this._lut = lut;\n      this._luts = { [lut]: color };\n\n      this._opacity = opacity;\n      this._lutO = lutO;\n      this._lutsO = { [lutO]: opacity };\n\n      this.initCanvas();\n      this.paintCanvas();\n    }\n\n    initCanvas() {\n      // container\n      this._canvasContainer = this.initCanvasContainer(this._dom);\n      // background\n      this._canvasBg = this.createCanvas();\n      this._canvasContainer.appendChild(this._canvasBg);\n      // foreground\n      this._canvas = this.createCanvas();\n      this._canvasContainer.appendChild(this._canvas);\n    }\n\n    initCanvasContainer(dom) {\n      let canvasContainer = dom;\n      canvasContainer.style.border = '1px solid #F9F9F9';\n      return canvasContainer;\n    }\n\n    createCanvas() {\n      let canvas = document.createElement('canvas');\n      canvas.height = 1;\n      canvas.width = 256;\n      canvas.style.width = '256px';\n      canvas.style.height = '16px';\n      return canvas;\n    }\n\n    paintCanvas() {\n      // setup context\n      let ctx = this._canvas.getContext('2d');\n      ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n      ctx.globalCompositeOperation = 'source-over';\n\n      // apply color\n      if (!this._discrete) {\n        let color = ctx.createLinearGradient(0, 0, this._canvas.width, 0);\n        for (let i = 0; i < this._color.length; i++) {\n          color.addColorStop(\n            this._color[i][0],\n            `rgba( ${Math.round(this._color[i][1] * 255)}, ${Math.round(\n              this._color[i][2] * 255\n            )}, ${Math.round(this._color[i][3] * 255)}, 1)`\n          );\n        }\n\n        ctx.fillStyle = color;\n        ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n\n        // setup context\n        ctx.globalCompositeOperation = 'destination-in';\n\n        // apply opacity\n        let opacity = ctx.createLinearGradient(0, 0, this._canvas.width, 0);\n        for (let i = 0; i < this._opacity.length; i++) {\n          opacity.addColorStop(\n            this._opacity[i][0],\n            'rgba(255, 255, 255, ' + this._opacity[i][1] + ')'\n          );\n        }\n        ctx.fillStyle = opacity;\n        ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n      } else {\n        ctx.lineWidth = 2 * this._canvas.height;\n\n        for (let i = 0; i < this._color.length; i++) {\n          let currentPos = this._color[i][0];\n          let nextPos = 1;\n          if (i < this._color.length - 1) {\n            nextPos = this._color[i + 1][0];\n          }\n          let previousPos = 0;\n          if (i > 0) {\n            previousPos = this._color[i - 1][0];\n          }\n\n          let from = previousPos + (currentPos - previousPos) / 2;\n          let to = currentPos + (nextPos - currentPos) / 2;\n          let color = this._color[i];\n          let opacity = this._opacity[i] ? this._opacity[i][1] : 1;\n\n          ctx.beginPath();\n          ctx.strokeStyle = `rgba( ${Math.round(color[1] * 255)}, ${Math.round(\n            color[2] * 255\n          )}, ${Math.round(color[3] * 255)}, ${opacity})`;\n          ctx.moveTo(from * this._canvas.width, 0);\n          ctx.lineTo(to * this._canvas.width, 0);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      }\n    }\n\n    get texture() {\n      let texture = new Texture(this._canvas);\n      texture.mapping = UVMapping;\n      texture.wrapS = texture.wrapT = ClampToEdgeWrapping;\n      texture.magFilter = texture.minFilter = NearestFilter;\n      texture.premultiplyAlpha = true;\n      texture.needsUpdate = true;\n      return texture;\n    }\n\n    set lut(targetLUT) {\n      this._color = this._luts[targetLUT];\n      this._lut = targetLUT;\n\n      this.paintCanvas();\n    }\n\n    get lut() {\n      return this._lut;\n    }\n\n    set luts(newLuts) {\n      this._luts = newLuts;\n    }\n\n    get luts() {\n      return this._luts;\n    }\n\n    set lutO(targetLUTO) {\n      this._opacity = this._lutsO[targetLUTO];\n      this._lutO = targetLUTO;\n\n      this.paintCanvas();\n    }\n\n    get lutO() {\n      return this._lutO;\n    }\n\n    set lutsO(newLutsO) {\n      this._lutsO = newLutsO;\n    }\n\n    get lutsO() {\n      return this._lutsO;\n    }\n\n    set discrete(discrete) {\n      this._discrete = discrete;\n\n      this.paintCanvas();\n    }\n\n    get discrete() {\n      return this._discrete;\n    }\n\n    lutsAvailable(type = 'color') {\n      let available = [];\n      let luts = this._luts;\n\n      if (type !== 'color') {\n        luts = this._lutsO;\n      }\n\n      for (let i in luts) {\n        available.push(i);\n      }\n\n      return available;\n    }\n\n    // add luts to class' lut (so a user can add its own as well)\n    static presetLuts() {\n      return {\n        default: [[0, 0, 0, 0], [1, 1, 1, 1]],\n        spectrum: [\n          [0, 0, 0, 0],\n          [0.1, 0, 0, 1],\n          [0.33, 0, 1, 1],\n          [0.5, 0, 1, 0],\n          [0.66, 1, 1, 0],\n          [0.9, 1, 0, 0],\n          [1, 1, 1, 1],\n        ],\n        hot_and_cold: [\n          [0, 0, 0, 1],\n          [0.15, 0, 1, 1],\n          [0.3, 0, 1, 0],\n          [0.45, 0, 0, 0],\n          [0.5, 0, 0, 0],\n          [0.55, 0, 0, 0],\n          [0.7, 1, 1, 0],\n          [0.85, 1, 0, 0],\n          [1, 1, 1, 1],\n        ],\n        gold: [\n          [0, 0, 0, 0],\n          [0.13, 0.19, 0.03, 0],\n          [0.25, 0.39, 0.12, 0],\n          [0.38, 0.59, 0.26, 0],\n          [0.5, 0.8, 0.46, 0.08],\n          [0.63, 0.99, 0.71, 0.21],\n          [0.75, 0.99, 0.88, 0.34],\n          [0.88, 0.99, 0.99, 0.48],\n          [1, 0.9, 0.95, 0.61],\n        ],\n        red: [[0, 0.75, 0, 0], [0.5, 1, 0.5, 0], [0.95, 1, 1, 0], [1, 1, 1, 1]],\n        green: [[0, 0, 0.75, 0], [0.5, 0.5, 1, 0], [0.95, 1, 1, 0], [1, 1, 1, 1]],\n        blue: [[0, 0, 0, 1], [0.5, 0, 0.5, 1], [0.95, 0, 1, 1], [1, 1, 1, 1]],\n        walking_dead: [[0, 0.1, 1, 1], [1, 1, 1, 1]],\n        random: [\n          [0, 0, 0, 0],\n          [0.27, 0.18, 0.18, 0.18],\n          [0.41, 1, 1, 1],\n          [0.7, 1, 0, 0],\n          [1, 1, 1, 1],\n        ],\n        muscle_bone: [\n          [0, 0, 0, 0],\n          [0.00392156862745098, 0.00784313725490196, 0, 0],\n          [0.00784313725490196, 0.0196078431372549, 0, 0],\n          [0.011764705882352941, 0.03137254901960784, 0, 0],\n          [0.01568627450980392, 0.0392156862745098, 0, 0.00392156862745098],\n          [0.0196078431372549, 0.050980392156862744, 0.00392156862745098, 0.00392156862745098],\n          [0.023529411764705882, 0.06274509803921569, 0.00392156862745098, 0.00392156862745098],\n          [0.027450980392156862, 0.07058823529411765, 0.00392156862745098, 0.00784313725490196],\n          [0.03137254901960784, 0.08235294117647059, 0.00392156862745098, 0.00784313725490196],\n          [0.03529411764705882, 0.09411764705882353, 0.00784313725490196, 0.00784313725490196],\n          [0.0392156862745098, 0.10196078431372549, 0.00784313725490196, 0.00784313725490196],\n          [0.043137254901960784, 0.11372549019607843, 0.00784313725490196, 0.011764705882352941],\n          [0.047058823529411764, 0.12549019607843137, 0.00784313725490196, 0.011764705882352941],\n          [0.050980392156862744, 0.13333333333333333, 0.011764705882352941, 0.011764705882352941],\n          [0.054901960784313725, 0.1450980392156863, 0.011764705882352941, 0.01568627450980392],\n          [0.058823529411764705, 0.1568627450980392, 0.011764705882352941, 0.01568627450980392],\n          [0.06274509803921569, 0.16470588235294117, 0.011764705882352941, 0.01568627450980392],\n          [0.06666666666666667, 0.17647058823529413, 0.011764705882352941, 0.0196078431372549],\n          [0.07058823529411765, 0.18823529411764706, 0.01568627450980392, 0.0196078431372549],\n          [0.07450980392156863, 0.2, 0.01568627450980392, 0.0196078431372549],\n          [0.0784313725490196, 0.20784313725490197, 0.01568627450980392, 0.0196078431372549],\n          [0.08235294117647059, 0.2196078431372549, 0.01568627450980392, 0.023529411764705882],\n          [0.08627450980392157, 0.23137254901960785, 0.0196078431372549, 0.023529411764705882],\n          [0.09019607843137255, 0.23921568627450981, 0.0196078431372549, 0.023529411764705882],\n          [0.09411764705882353, 0.25098039215686274, 0.0196078431372549, 0.027450980392156862],\n          [0.09803921568627451, 0.2627450980392157, 0.0196078431372549, 0.027450980392156862],\n          [0.10196078431372549, 0.27058823529411763, 0.023529411764705882, 0.027450980392156862],\n          [0.10588235294117647, 0.2823529411764706, 0.023529411764705882, 0.027450980392156862],\n          [0.10980392156862745, 0.29411764705882354, 0.023529411764705882, 0.03137254901960784],\n          [0.11372549019607843, 0.30196078431372547, 0.023529411764705882, 0.03137254901960784],\n          [0.11764705882352941, 0.3137254901960784, 0.023529411764705882, 0.03137254901960784],\n          [0.12156862745098039, 0.3254901960784314, 0.027450980392156862, 0.03529411764705882],\n          [0.12549019607843137, 0.3333333333333333, 0.027450980392156862, 0.03529411764705882],\n          [0.12941176470588237, 0.34509803921568627, 0.027450980392156862, 0.03529411764705882],\n          [0.13333333333333333, 0.3568627450980392, 0.027450980392156862, 0.0392156862745098],\n          [0.13725490196078433, 0.36470588235294116, 0.03137254901960784, 0.0392156862745098],\n          [0.1411764705882353, 0.3764705882352941, 0.03137254901960784, 0.0392156862745098],\n          [0.1450980392156863, 0.38823529411764707, 0.03137254901960784, 0.0392156862745098],\n          [0.14901960784313725, 0.4, 0.03137254901960784, 0.043137254901960784],\n          [0.15294117647058825, 0.40784313725490196, 0.03529411764705882, 0.043137254901960784],\n          [0.1568627450980392, 0.4196078431372549, 0.03529411764705882, 0.043137254901960784],\n          [0.1607843137254902, 0.43137254901960786, 0.03529411764705882, 0.047058823529411764],\n          [0.16470588235294117, 0.4392156862745098, 0.03529411764705882, 0.047058823529411764],\n          [0.16862745098039217, 0.45098039215686275, 0.03529411764705882, 0.047058823529411764],\n          [0.17254901960784313, 0.4627450980392157, 0.0392156862745098, 0.047058823529411764],\n          [0.17647058823529413, 0.47058823529411764, 0.0392156862745098, 0.050980392156862744],\n          [0.1803921568627451, 0.4823529411764706, 0.0392156862745098, 0.050980392156862744],\n          [0.1843137254901961, 0.49411764705882355, 0.0392156862745098, 0.050980392156862744],\n          [0.18823529411764706, 0.5019607843137255, 0.043137254901960784, 0.054901960784313725],\n          [0.19215686274509805, 0.5137254901960784, 0.043137254901960784, 0.054901960784313725],\n          [0.19607843137254902, 0.5254901960784314, 0.043137254901960784, 0.054901960784313725],\n          [0.2, 0.5333333333333333, 0.043137254901960784, 0.058823529411764705],\n          [0.20392156862745098, 0.5450980392156862, 0.047058823529411764, 0.058823529411764705],\n          [0.20784313725490197, 0.5568627450980392, 0.047058823529411764, 0.058823529411764705],\n          [0.21176470588235294, 0.5647058823529412, 0.047058823529411764, 0.058823529411764705],\n          [0.21568627450980393, 0.5764705882352941, 0.047058823529411764, 0.06274509803921569],\n          [0.2196078431372549, 0.5882352941176471, 0.047058823529411764, 0.06274509803921569],\n          [0.2235294117647059, 0.6, 0.050980392156862744, 0.06274509803921569],\n          [0.22745098039215686, 0.6078431372549019, 0.050980392156862744, 0.06666666666666667],\n          [0.23137254901960785, 0.6196078431372549, 0.050980392156862744, 0.06666666666666667],\n          [0.23529411764705882, 0.6313725490196078, 0.050980392156862744, 0.06666666666666667],\n          [0.23921568627450981, 0.6392156862745098, 0.054901960784313725, 0.06666666666666667],\n          [0.24313725490196078, 0.6509803921568628, 0.054901960784313725, 0.07058823529411765],\n          [0.24705882352941178, 0.6627450980392157, 0.054901960784313725, 0.07058823529411765],\n          [0.25098039215686274, 0.6705882352941176, 0.054901960784313725, 0.07058823529411765],\n          [0.2549019607843137, 0.6823529411764706, 0.058823529411764705, 0.07450980392156863],\n          [0.25882352941176473, 0.6941176470588235, 0.058823529411764705, 0.07450980392156863],\n          [0.2627450980392157, 0.7019607843137254, 0.058823529411764705, 0.07450980392156863],\n          [0.26666666666666666, 0.7137254901960784, 0.058823529411764705, 0.0784313725490196],\n          [0.27058823529411763, 0.7254901960784313, 0.058823529411764705, 0.0784313725490196],\n          [0.27450980392156865, 0.7333333333333333, 0.06274509803921569, 0.0784313725490196],\n          [0.2784313725490196, 0.7450980392156863, 0.06274509803921569, 0.0784313725490196],\n          [0.2823529411764706, 0.7568627450980392, 0.06274509803921569, 0.08235294117647059],\n          [0.28627450980392155, 0.7647058823529411, 0.06274509803921569, 0.08235294117647059],\n          [0.2901960784313726, 0.7764705882352941, 0.06666666666666667, 0.08235294117647059],\n          [0.29411764705882354, 0.788235294117647, 0.06666666666666667, 0.08627450980392157],\n          [0.2980392156862745, 0.8, 0.06666666666666667, 0.08627450980392157],\n          [0.30196078431372547, 0.807843137254902, 0.06666666666666667, 0.08627450980392157],\n          [0.3058823529411765, 0.8196078431372549, 0.07058823529411765, 0.08627450980392157],\n          [0.30980392156862746, 0.8313725490196079, 0.07058823529411765, 0.09019607843137255],\n          [0.3137254901960784, 0.8392156862745098, 0.07058823529411765, 0.09019607843137255],\n          [0.3176470588235294, 0.8509803921568627, 0.07058823529411765, 0.09019607843137255],\n          [0.3215686274509804, 0.8627450980392157, 0.07058823529411765, 0.09411764705882353],\n          [0.3254901960784314, 0.8705882352941177, 0.07450980392156863, 0.09411764705882353],\n          [0.32941176470588235, 0.8823529411764706, 0.07450980392156863, 0.09411764705882353],\n          [0.3333333333333333, 0.8941176470588236, 0.07450980392156863, 0.09803921568627451],\n          [0.33725490196078434, 0.9019607843137255, 0.07450980392156863, 0.09803921568627451],\n          [0.3411764705882353, 0.9137254901960784, 0.0784313725490196, 0.09803921568627451],\n          [0.34509803921568627, 0.9254901960784314, 0.0784313725490196, 0.09803921568627451],\n          [0.34901960784313724, 0.9333333333333333, 0.0784313725490196, 0.10196078431372549],\n          [0.35294117647058826, 0.9450980392156862, 0.0784313725490196, 0.10196078431372549],\n          [0.3568627450980392, 0.9568627450980393, 0.08235294117647059, 0.10196078431372549],\n          [0.3607843137254902, 0.9647058823529412, 0.08235294117647059, 0.10588235294117647],\n          [0.36470588235294116, 0.9764705882352941, 0.08235294117647059, 0.10588235294117647],\n          [0.3686274509803922, 0.9882352941176471, 0.08235294117647059, 0.10588235294117647],\n          [0.37254901960784315, 1, 0.08235294117647059, 0.10588235294117647],\n          [0.3764705882352941, 1, 0.09411764705882353, 0.10588235294117647],\n          [0.3803921568627451, 1, 0.10588235294117647, 0.10588235294117647],\n          [0.3843137254901961, 1, 0.11764705882352941, 0.10196078431372549],\n          [0.38823529411764707, 1, 0.12941176470588237, 0.10196078431372549],\n          [0.39215686274509803, 1, 0.1411764705882353, 0.10196078431372549],\n          [0.396078431372549, 1, 0.15294117647058825, 0.09803921568627451],\n          [0.4, 1, 0.16470588235294117, 0.09803921568627451],\n          [0.403921568627451, 1, 0.17647058823529413, 0.09803921568627451],\n          [0.40784313725490196, 1, 0.18823529411764706, 0.09411764705882353],\n          [0.4117647058823529, 1, 0.2, 0.09411764705882353],\n          [0.41568627450980394, 1, 0.21176470588235294, 0.09411764705882353],\n          [0.4196078431372549, 1, 0.2235294117647059, 0.09019607843137255],\n          [0.4235294117647059, 1, 0.23529411764705882, 0.09019607843137255],\n          [0.42745098039215684, 1, 0.24705882352941178, 0.08627450980392157],\n          [0.43137254901960786, 1, 0.25882352941176473, 0.08627450980392157],\n          [0.43529411764705883, 1, 0.27058823529411763, 0.08627450980392157],\n          [0.4392156862745098, 1, 0.2823529411764706, 0.08235294117647059],\n          [0.44313725490196076, 1, 0.29411764705882354, 0.08235294117647059],\n          [0.4470588235294118, 1, 0.3058823529411765, 0.08235294117647059],\n          [0.45098039215686275, 1, 0.3176470588235294, 0.0784313725490196],\n          [0.4549019607843137, 1, 0.32941176470588235, 0.0784313725490196],\n          [0.4588235294117647, 1, 0.3411764705882353, 0.0784313725490196],\n          [0.4627450980392157, 1, 0.35294117647058826, 0.07450980392156863],\n          [0.4666666666666667, 1, 0.36470588235294116, 0.07450980392156863],\n          [0.47058823529411764, 1, 0.3764705882352941, 0.07450980392156863],\n          [0.4745098039215686, 1, 0.38823529411764707, 0.07058823529411765],\n          [0.47843137254901963, 1, 0.4, 0.07058823529411765],\n          [0.4823529411764706, 1, 0.4117647058823529, 0.07058823529411765],\n          [0.48627450980392156, 1, 0.4235294117647059, 0.06666666666666667],\n          [0.49019607843137253, 1, 0.43529411764705883, 0.06666666666666667],\n          [0.49411764705882355, 1, 0.4470588235294118, 0.06274509803921569],\n          [0.4980392156862745, 1, 0.4588235294117647, 0.06274509803921569],\n          [0.5019607843137255, 1, 0.47058823529411764, 0.06274509803921569],\n          [0.5058823529411764, 1, 0.4823529411764706, 0.058823529411764705],\n          [0.5098039215686274, 1, 0.49411764705882355, 0.058823529411764705],\n          [0.5137254901960784, 1, 0.5058823529411764, 0.058823529411764705],\n          [0.5176470588235295, 1, 0.5137254901960784, 0.054901960784313725],\n          [0.5215686274509804, 1, 0.5254901960784314, 0.054901960784313725],\n          [0.5254901960784314, 1, 0.5372549019607843, 0.054901960784313725],\n          [0.5294117647058824, 1, 0.5490196078431373, 0.050980392156862744],\n          [0.5333333333333333, 1, 0.5607843137254902, 0.050980392156862744],\n          [0.5372549019607843, 1, 0.5725490196078431, 0.050980392156862744],\n          [0.5411764705882353, 1, 0.5843137254901961, 0.047058823529411764],\n          [0.5450980392156862, 1, 0.596078431372549, 0.047058823529411764],\n          [0.5490196078431373, 1, 0.6078431372549019, 0.043137254901960784],\n          [0.5529411764705883, 1, 0.6196078431372549, 0.043137254901960784],\n          [0.5568627450980392, 1, 0.6313725490196078, 0.043137254901960784],\n          [0.5607843137254902, 1, 0.6431372549019608, 0.0392156862745098],\n          [0.5647058823529412, 1, 0.6549019607843137, 0.0392156862745098],\n          [0.5686274509803921, 1, 0.6666666666666666, 0.0392156862745098],\n          [0.5725490196078431, 1, 0.6784313725490196, 0.03529411764705882],\n          [0.5764705882352941, 1, 0.6901960784313725, 0.03529411764705882],\n          [0.5803921568627451, 1, 0.6941176470588235, 0.0392156862745098],\n          [0.5843137254901961, 1, 0.7019607843137254, 0.0392156862745098],\n          [0.5882352941176471, 1, 0.7058823529411765, 0.043137254901960784],\n          [0.592156862745098, 1, 0.7098039215686275, 0.043137254901960784],\n          [0.596078431372549, 1, 0.7137254901960784, 0.047058823529411764],\n          [0.6, 1, 0.7176470588235294, 0.047058823529411764],\n          [0.6039215686274509, 1, 0.7254901960784313, 0.050980392156862744],\n          [0.6078431372549019, 1, 0.7294117647058823, 0.050980392156862744],\n          [0.611764705882353, 1, 0.7333333333333333, 0.054901960784313725],\n          [0.615686274509804, 1, 0.7372549019607844, 0.058823529411764705],\n          [0.6196078431372549, 1, 0.7411764705882353, 0.058823529411764705],\n          [0.6235294117647059, 1, 0.7490196078431373, 0.06274509803921569],\n          [0.6274509803921569, 1, 0.7529411764705882, 0.06274509803921569],\n          [0.6313725490196078, 1, 0.7568627450980392, 0.06666666666666667],\n          [0.6352941176470588, 1, 0.7607843137254902, 0.06666666666666667],\n          [0.6392156862745098, 1, 0.7647058823529411, 0.07058823529411765],\n          [0.6431372549019608, 1, 0.7725490196078432, 0.07058823529411765],\n          [0.6470588235294118, 1, 0.7764705882352941, 0.07450980392156863],\n          [0.6509803921568628, 1, 0.7803921568627451, 0.07450980392156863],\n          [0.6549019607843137, 1, 0.7843137254901961, 0.0784313725490196],\n          [0.6588235294117647, 1, 0.788235294117647, 0.08235294117647059],\n          [0.6627450980392157, 1, 0.796078431372549, 0.08235294117647059],\n          [0.6666666666666666, 1, 0.8, 0.08627450980392157],\n          [0.6705882352941176, 1, 0.803921568627451, 0.08627450980392157],\n          [0.6745098039215687, 1, 0.807843137254902, 0.09019607843137255],\n          [0.6784313725490196, 1, 0.8117647058823529, 0.09019607843137255],\n          [0.6823529411764706, 1, 0.8196078431372549, 0.09411764705882353],\n          [0.6862745098039216, 1, 0.8235294117647058, 0.09411764705882353],\n          [0.6901960784313725, 1, 0.8274509803921568, 0.09803921568627451],\n          [0.6941176470588235, 1, 0.8313725490196079, 0.10196078431372549],\n          [0.6980392156862745, 1, 0.8352941176470589, 0.10196078431372549],\n          [0.7019607843137254, 1, 0.8431372549019608, 0.10588235294117647],\n          [0.7058823529411765, 1, 0.8470588235294118, 0.10588235294117647],\n          [0.7098039215686275, 1, 0.8509803921568627, 0.10980392156862745],\n          [0.7137254901960784, 1, 0.8549019607843137, 0.10980392156862745],\n          [0.7176470588235294, 1, 0.8627450980392157, 0.11372549019607843],\n          [0.7215686274509804, 1, 0.8666666666666667, 0.11372549019607843],\n          [0.7254901960784313, 1, 0.8705882352941177, 0.11764705882352941],\n          [0.7294117647058823, 1, 0.8745098039215686, 0.12156862745098039],\n          [0.7333333333333333, 1, 0.8784313725490196, 0.12156862745098039],\n          [0.7372549019607844, 1, 0.8862745098039215, 0.12549019607843137],\n          [0.7411764705882353, 1, 0.8901960784313725, 0.12549019607843137],\n          [0.7450980392156863, 1, 0.8941176470588236, 0.12941176470588237],\n          [0.7490196078431373, 1, 0.8980392156862745, 0.12941176470588237],\n          [0.7529411764705882, 1, 0.9019607843137255, 0.13333333333333333],\n          [0.7568627450980392, 1, 0.9098039215686274, 0.13333333333333333],\n          [0.7607843137254902, 1, 0.9137254901960784, 0.13725490196078433],\n          [0.7647058823529411, 1, 0.9176470588235294, 0.1411764705882353],\n          [0.7686274509803922, 1, 0.9215686274509803, 0.1411764705882353],\n          [0.7725490196078432, 1, 0.9254901960784314, 0.1450980392156863],\n          [0.7764705882352941, 1, 0.9333333333333333, 0.1450980392156863],\n          [0.7803921568627451, 1, 0.9372549019607843, 0.14901960784313725],\n          [0.7843137254901961, 1, 0.9411764705882353, 0.14901960784313725],\n          [0.788235294117647, 1, 0.9450980392156862, 0.15294117647058825],\n          [0.792156862745098, 1, 0.9450980392156862, 0.16862745098039217],\n          [0.796078431372549, 1, 0.9490196078431372, 0.1843137254901961],\n          [0.8, 1, 0.9490196078431372, 0.2],\n          [0.803921568627451, 1, 0.9490196078431372, 0.21568627450980393],\n          [0.807843137254902, 1, 0.9490196078431372, 0.22745098039215686],\n          [0.8117647058823529, 1, 0.9529411764705882, 0.24313725490196078],\n          [0.8156862745098039, 1, 0.9529411764705882, 0.25882352941176473],\n          [0.8196078431372549, 1, 0.9529411764705882, 0.27450980392156865],\n          [0.8235294117647058, 1, 0.9529411764705882, 0.2901960784313726],\n          [0.8274509803921568, 1, 0.9568627450980393, 0.3058823529411765],\n          [0.8313725490196079, 1, 0.9568627450980393, 0.3215686274509804],\n          [0.8352941176470589, 1, 0.9568627450980393, 0.33725490196078434],\n          [0.8392156862745098, 1, 0.9568627450980393, 0.35294117647058826],\n          [0.8431372549019608, 1, 0.9607843137254902, 0.3686274509803922],\n          [0.8470588235294118, 1, 0.9607843137254902, 0.3843137254901961],\n          [0.8509803921568627, 1, 0.9607843137254902, 0.4],\n          [0.8549019607843137, 1, 0.9607843137254902, 0.4117647058823529],\n          [0.8588235294117647, 1, 0.9647058823529412, 0.42745098039215684],\n          [0.8627450980392157, 1, 0.9647058823529412, 0.44313725490196076],\n          [0.8666666666666667, 1, 0.9647058823529412, 0.4588235294117647],\n          [0.8705882352941177, 1, 0.9647058823529412, 0.4745098039215686],\n          [0.8745098039215686, 1, 0.9686274509803922, 0.49019607843137253],\n          [0.8784313725490196, 1, 0.9686274509803922, 0.5058823529411764],\n          [0.8823529411764706, 1, 0.9686274509803922, 0.5215686274509804],\n          [0.8862745098039215, 1, 0.9686274509803922, 0.5372549019607843],\n          [0.8901960784313725, 1, 0.9725490196078431, 0.5529411764705883],\n          [0.8941176470588236, 1, 0.9725490196078431, 0.5686274509803921],\n          [0.8980392156862745, 1, 0.9725490196078431, 0.5843137254901961],\n          [0.9019607843137255, 1, 0.9725490196078431, 0.6],\n          [0.9058823529411765, 1, 0.9725490196078431, 0.611764705882353],\n          [0.9098039215686274, 1, 0.9764705882352941, 0.6274509803921569],\n          [0.9137254901960784, 1, 0.9764705882352941, 0.6431372549019608],\n          [0.9176470588235294, 1, 0.9764705882352941, 0.6588235294117647],\n          [0.9215686274509803, 1, 0.9764705882352941, 0.6745098039215687],\n          [0.9254901960784314, 1, 0.9803921568627451, 0.6901960784313725],\n          [0.9294117647058824, 1, 0.9803921568627451, 0.7058823529411765],\n          [0.9333333333333333, 1, 0.9803921568627451, 0.7215686274509804],\n          [0.9372549019607843, 1, 0.9803921568627451, 0.7372549019607844],\n          [0.9411764705882353, 1, 0.984313725490196, 0.7529411764705882],\n          [0.9450980392156862, 1, 0.984313725490196, 0.7686274509803922],\n          [0.9490196078431372, 1, 0.984313725490196, 0.7843137254901961],\n          [0.9529411764705882, 1, 0.984313725490196, 0.8],\n          [0.9568627450980393, 1, 0.9882352941176471, 0.8117647058823529],\n          [0.9607843137254902, 1, 0.9882352941176471, 0.8274509803921568],\n          [0.9647058823529412, 1, 0.9882352941176471, 0.8431372549019608],\n          [0.9686274509803922, 1, 0.9882352941176471, 0.8588235294117647],\n          [0.9725490196078431, 1, 0.9921568627450981, 0.8745098039215686],\n          [0.9764705882352941, 1, 0.9921568627450981, 0.8901960784313725],\n          [0.9803921568627451, 1, 0.9921568627450981, 0.9058823529411765],\n          [0.984313725490196, 1, 0.9921568627450981, 0.9215686274509803],\n          [0.9882352941176471, 1, 0.996078431372549, 0.9372549019607843],\n          [0.9921568627450981, 1, 0.996078431372549, 0.9529411764705882],\n          [0.996078431372549, 1, 0.996078431372549, 0.9686274509803922],\n          [1, 1, 0.996078431372549, 0.984313725490196],\n        ],\n      };\n    }\n\n    static presetLutsO() {\n      return {\n        linear: [[0, 0], [1, 1]],\n        lowpass: [[0, 0.8], [0.2, 0.6], [0.3, 0.1], [1, 0]],\n        bandpass: [[0, 0], [0.4, 0.8], [0.6, 0.8], [1, 0]],\n        highpass: [[0, 0], [0.7, 0.1], [0.8, 0.6], [1, 0.8]],\n        flat: [[0, 0.7], [1, 1]],\n        random: [[0, 0], [0.38, 0], [0.55, 1], [0.72, 1], [1, 0.05]],\n        linear_full: [\n          [0, 0],\n          [0.00392156862745098, 0.00392156862745098],\n          [0.00784313725490196, 0.00784313725490196],\n          [0.011764705882352941, 0.011764705882352941],\n          [0.01568627450980392, 0.01568627450980392],\n          [0.0196078431372549, 0.0196078431372549],\n          [0.023529411764705882, 0.023529411764705882],\n          [0.027450980392156862, 0.027450980392156862],\n          [0.03137254901960784, 0.03137254901960784],\n          [0.03529411764705882, 0.03529411764705882],\n          [0.0392156862745098, 0.0392156862745098],\n          [0.043137254901960784, 0.043137254901960784],\n          [0.047058823529411764, 0.047058823529411764],\n          [0.050980392156862744, 0.050980392156862744],\n          [0.054901960784313725, 0.054901960784313725],\n          [0.058823529411764705, 0.058823529411764705],\n          [0.06274509803921569, 0.06274509803921569],\n          [0.06666666666666667, 0.06666666666666667],\n          [0.07058823529411765, 0.07058823529411765],\n          [0.07450980392156863, 0.07450980392156863],\n          [0.0784313725490196, 0.0784313725490196],\n          [0.08235294117647059, 0.08235294117647059],\n          [0.08627450980392157, 0.08627450980392157],\n          [0.09019607843137255, 0.09019607843137255],\n          [0.09411764705882353, 0.09411764705882353],\n          [0.09803921568627451, 0.09803921568627451],\n          [0.10196078431372549, 0.10196078431372549],\n          [0.10588235294117647, 0.10588235294117647],\n          [0.10980392156862745, 0.10980392156862745],\n          [0.11372549019607843, 0.11372549019607843],\n          [0.11764705882352941, 0.11764705882352941],\n          [0.12156862745098039, 0.12156862745098039],\n          [0.12549019607843137, 0.12549019607843137],\n          [0.12941176470588237, 0.12941176470588237],\n          [0.13333333333333333, 0.13333333333333333],\n          [0.13725490196078433, 0.13725490196078433],\n          [0.1411764705882353, 0.1411764705882353],\n          [0.1450980392156863, 0.1450980392156863],\n          [0.14901960784313725, 0.14901960784313725],\n          [0.15294117647058825, 0.15294117647058825],\n          [0.1568627450980392, 0.1568627450980392],\n          [0.1607843137254902, 0.1607843137254902],\n          [0.16470588235294117, 0.16470588235294117],\n          [0.16862745098039217, 0.16862745098039217],\n          [0.17254901960784313, 0.17254901960784313],\n          [0.17647058823529413, 0.17647058823529413],\n          [0.1803921568627451, 0.1803921568627451],\n          [0.1843137254901961, 0.1843137254901961],\n          [0.18823529411764706, 0.18823529411764706],\n          [0.19215686274509805, 0.19215686274509805],\n          [0.19607843137254902, 0.19607843137254902],\n          [0.2, 0.2],\n          [0.20392156862745098, 0.20392156862745098],\n          [0.20784313725490197, 0.20784313725490197],\n          [0.21176470588235294, 0.21176470588235294],\n          [0.21568627450980393, 0.21568627450980393],\n          [0.2196078431372549, 0.2196078431372549],\n          [0.2235294117647059, 0.2235294117647059],\n          [0.22745098039215686, 0.22745098039215686],\n          [0.23137254901960785, 0.23137254901960785],\n          [0.23529411764705882, 0.23529411764705882],\n          [0.23921568627450981, 0.23921568627450981],\n          [0.24313725490196078, 0.24313725490196078],\n          [0.24705882352941178, 0.24705882352941178],\n          [0.25098039215686274, 0.25098039215686274],\n          [0.2549019607843137, 0.2549019607843137],\n          [0.25882352941176473, 0.25882352941176473],\n          [0.2627450980392157, 0.2627450980392157],\n          [0.26666666666666666, 0.26666666666666666],\n          [0.27058823529411763, 0.27058823529411763],\n          [0.27450980392156865, 0.27450980392156865],\n          [0.2784313725490196, 0.2784313725490196],\n          [0.2823529411764706, 0.2823529411764706],\n          [0.28627450980392155, 0.28627450980392155],\n          [0.2901960784313726, 0.2901960784313726],\n          [0.29411764705882354, 0.29411764705882354],\n          [0.2980392156862745, 0.2980392156862745],\n          [0.30196078431372547, 0.30196078431372547],\n          [0.3058823529411765, 0.3058823529411765],\n          [0.30980392156862746, 0.30980392156862746],\n          [0.3137254901960784, 0.3137254901960784],\n          [0.3176470588235294, 0.3176470588235294],\n          [0.3215686274509804, 0.3215686274509804],\n          [0.3254901960784314, 0.3254901960784314],\n          [0.32941176470588235, 0.32941176470588235],\n          [0.3333333333333333, 0.3333333333333333],\n          [0.33725490196078434, 0.33725490196078434],\n          [0.3411764705882353, 0.3411764705882353],\n          [0.34509803921568627, 0.34509803921568627],\n          [0.34901960784313724, 0.34901960784313724],\n          [0.35294117647058826, 0.35294117647058826],\n          [0.3568627450980392, 0.3568627450980392],\n          [0.3607843137254902, 0.3607843137254902],\n          [0.36470588235294116, 0.36470588235294116],\n          [0.3686274509803922, 0.3686274509803922],\n          [0.37254901960784315, 0.37254901960784315],\n          [0.3764705882352941, 0.3764705882352941],\n          [0.3803921568627451, 0.3803921568627451],\n          [0.3843137254901961, 0.3843137254901961],\n          [0.38823529411764707, 0.38823529411764707],\n          [0.39215686274509803, 0.39215686274509803],\n          [0.396078431372549, 0.396078431372549],\n          [0.4, 0.4],\n          [0.403921568627451, 0.403921568627451],\n          [0.40784313725490196, 0.40784313725490196],\n          [0.4117647058823529, 0.4117647058823529],\n          [0.41568627450980394, 0.41568627450980394],\n          [0.4196078431372549, 0.4196078431372549],\n          [0.4235294117647059, 0.4235294117647059],\n          [0.42745098039215684, 0.42745098039215684],\n          [0.43137254901960786, 0.43137254901960786],\n          [0.43529411764705883, 0.43529411764705883],\n          [0.4392156862745098, 0.4392156862745098],\n          [0.44313725490196076, 0.44313725490196076],\n          [0.4470588235294118, 0.4470588235294118],\n          [0.45098039215686275, 0.45098039215686275],\n          [0.4549019607843137, 0.4549019607843137],\n          [0.4588235294117647, 0.4588235294117647],\n          [0.4627450980392157, 0.4627450980392157],\n          [0.4666666666666667, 0.4666666666666667],\n          [0.47058823529411764, 0.47058823529411764],\n          [0.4745098039215686, 0.4745098039215686],\n          [0.47843137254901963, 0.47843137254901963],\n          [0.4823529411764706, 0.4823529411764706],\n          [0.48627450980392156, 0.48627450980392156],\n          [0.49019607843137253, 0.49019607843137253],\n          [0.49411764705882355, 0.49411764705882355],\n          [0.4980392156862745, 0.4980392156862745],\n          [0.5019607843137255, 0.5019607843137255],\n          [0.5058823529411764, 0.5058823529411764],\n          [0.5098039215686274, 0.5098039215686274],\n          [0.5137254901960784, 0.5137254901960784],\n          [0.5176470588235295, 0.5176470588235295],\n          [0.5215686274509804, 0.5215686274509804],\n          [0.5254901960784314, 0.5254901960784314],\n          [0.5294117647058824, 0.5294117647058824],\n          [0.5333333333333333, 0.5333333333333333],\n          [0.5372549019607843, 0.5372549019607843],\n          [0.5411764705882353, 0.5411764705882353],\n          [0.5450980392156862, 0.5450980392156862],\n          [0.5490196078431373, 0.5490196078431373],\n          [0.5529411764705883, 0.5529411764705883],\n          [0.5568627450980392, 0.5568627450980392],\n          [0.5607843137254902, 0.5607843137254902],\n          [0.5647058823529412, 0.5647058823529412],\n          [0.5686274509803921, 0.5686274509803921],\n          [0.5725490196078431, 0.5725490196078431],\n          [0.5764705882352941, 0.5764705882352941],\n          [0.5803921568627451, 0.5803921568627451],\n          [0.5843137254901961, 0.5843137254901961],\n          [0.5882352941176471, 0.5882352941176471],\n          [0.592156862745098, 0.592156862745098],\n          [0.596078431372549, 0.596078431372549],\n          [0.6, 0.6],\n          [0.6039215686274509, 0.6039215686274509],\n          [0.6078431372549019, 0.6078431372549019],\n          [0.611764705882353, 0.611764705882353],\n          [0.615686274509804, 0.615686274509804],\n          [0.6196078431372549, 0.6196078431372549],\n          [0.6235294117647059, 0.6235294117647059],\n          [0.6274509803921569, 0.6274509803921569],\n          [0.6313725490196078, 0.6313725490196078],\n          [0.6352941176470588, 0.6352941176470588],\n          [0.6392156862745098, 0.6392156862745098],\n          [0.6431372549019608, 0.6431372549019608],\n          [0.6470588235294118, 0.6470588235294118],\n          [0.6509803921568628, 0.6509803921568628],\n          [0.6549019607843137, 0.6549019607843137],\n          [0.6588235294117647, 0.6588235294117647],\n          [0.6627450980392157, 0.6627450980392157],\n          [0.6666666666666666, 0.6666666666666666],\n          [0.6705882352941176, 0.6705882352941176],\n          [0.6745098039215687, 0.6745098039215687],\n          [0.6784313725490196, 0.6784313725490196],\n          [0.6823529411764706, 0.6823529411764706],\n          [0.6862745098039216, 0.6862745098039216],\n          [0.6901960784313725, 0.6901960784313725],\n          [0.6941176470588235, 0.6941176470588235],\n          [0.6980392156862745, 0.6980392156862745],\n          [0.7019607843137254, 0.7019607843137254],\n          [0.7058823529411765, 0.7058823529411765],\n          [0.7098039215686275, 0.7098039215686275],\n          [0.7137254901960784, 0.7137254901960784],\n          [0.7176470588235294, 0.7176470588235294],\n          [0.7215686274509804, 0.7215686274509804],\n          [0.7254901960784313, 0.7254901960784313],\n          [0.7294117647058823, 0.7294117647058823],\n          [0.7333333333333333, 0.7333333333333333],\n          [0.7372549019607844, 0.7372549019607844],\n          [0.7411764705882353, 0.7411764705882353],\n          [0.7450980392156863, 0.7450980392156863],\n          [0.7490196078431373, 0.7490196078431373],\n          [0.7529411764705882, 0.7529411764705882],\n          [0.7568627450980392, 0.7568627450980392],\n          [0.7607843137254902, 0.7607843137254902],\n          [0.7647058823529411, 0.7647058823529411],\n          [0.7686274509803922, 0.7686274509803922],\n          [0.7725490196078432, 0.7725490196078432],\n          [0.7764705882352941, 0.7764705882352941],\n          [0.7803921568627451, 0.7803921568627451],\n          [0.7843137254901961, 0.7843137254901961],\n          [0.788235294117647, 0.788235294117647],\n          [0.792156862745098, 0.792156862745098],\n          [0.796078431372549, 0.796078431372549],\n          [0.8, 0.8],\n          [0.803921568627451, 0.803921568627451],\n          [0.807843137254902, 0.807843137254902],\n          [0.8117647058823529, 0.8117647058823529],\n          [0.8156862745098039, 0.8156862745098039],\n          [0.8196078431372549, 0.8196078431372549],\n          [0.8235294117647058, 0.8235294117647058],\n          [0.8274509803921568, 0.8274509803921568],\n          [0.8313725490196079, 0.8313725490196079],\n          [0.8352941176470589, 0.8352941176470589],\n          [0.8392156862745098, 0.8392156862745098],\n          [0.8431372549019608, 0.8431372549019608],\n          [0.8470588235294118, 0.8470588235294118],\n          [0.8509803921568627, 0.8509803921568627],\n          [0.8549019607843137, 0.8549019607843137],\n          [0.8588235294117647, 0.8588235294117647],\n          [0.8627450980392157, 0.8627450980392157],\n          [0.8666666666666667, 0.8666666666666667],\n          [0.8705882352941177, 0.8705882352941177],\n          [0.8745098039215686, 0.8745098039215686],\n          [0.8784313725490196, 0.8784313725490196],\n          [0.8823529411764706, 0.8823529411764706],\n          [0.8862745098039215, 0.8862745098039215],\n          [0.8901960784313725, 0.8901960784313725],\n          [0.8941176470588236, 0.8941176470588236],\n          [0.8980392156862745, 0.8980392156862745],\n          [0.9019607843137255, 0.9019607843137255],\n          [0.9058823529411765, 0.9058823529411765],\n          [0.9098039215686274, 0.9098039215686274],\n          [0.9137254901960784, 0.9137254901960784],\n          [0.9176470588235294, 0.9176470588235294],\n          [0.9215686274509803, 0.9215686274509803],\n          [0.9254901960784314, 0.9254901960784314],\n          [0.9294117647058824, 0.9294117647058824],\n          [0.9333333333333333, 0.9333333333333333],\n          [0.9372549019607843, 0.9372549019607843],\n          [0.9411764705882353, 0.9411764705882353],\n          [0.9450980392156862, 0.9450980392156862],\n          [0.9490196078431372, 0.9490196078431372],\n          [0.9529411764705882, 0.9529411764705882],\n          [0.9568627450980393, 0.9568627450980393],\n          [0.9607843137254902, 0.9607843137254902],\n          [0.9647058823529412, 0.9647058823529412],\n          [0.9686274509803922, 0.9686274509803922],\n          [0.9725490196078431, 0.9725490196078431],\n          [0.9764705882352941, 0.9764705882352941],\n          [0.9803921568627451, 0.9803921568627451],\n          [0.984313725490196, 0.984313725490196],\n          [0.9882352941176471, 0.9882352941176471],\n          [0.9921568627450981, 0.9921568627450981],\n          [0.996078431372549, 0.996078431372549],\n          [1, 1],\n        ],\n      };\n    }\n  };\n};\n\nexport { helpersLut };\nexport default helpersLut();\n","import CoreUtils from '../core/core.utils';\n\nlet defaultSegmentation = {\n  0: { color: [0, 0, 0], opacity: 0, label: 'background' },\n  1: { color: [255, 0, 0], opacity: 1, label: 'white matter' },\n};\n\nexport default class HelpersSegmentationLut {\n  constructor(domTarget, segmentation = defaultSegmentation) {\n    if (CoreUtils.isString(domTarget)) {\n      this._dom = document.getElementById(domTarget);\n    } else {\n      this._dom = domTarget;\n    }\n\n    this._segmentation = segmentation;\n\n    /* The segmentation object contains the color, opacity, label and structures associated:\n      e.g\n      const freesurferSegmentation = {\n      0: {color: [0, 0, 0],opacity: 0,label: 'background'},\n      1: {color: [255, 0, 0],opacity: 1,label: 'white matter'},\n      }\n    */\n    this.initCanvas();\n    this.paintCanvas();\n  }\n\n  initCanvas() {\n    // container\n    this._canvasContainer = this.initCanvasContainer(this._dom);\n    // background\n    this._canvasBg = this.createCanvas();\n    this._canvasContainer.appendChild(this._canvasBg);\n    // foreground\n    this._canvas = this.createCanvas();\n    this._canvasContainer.appendChild(this._canvas);\n  }\n\n  initCanvasContainer(dom) {\n    let canvasContainer = dom;\n    canvasContainer.style.width = '256 px';\n    canvasContainer.style.height = '128 px';\n    canvasContainer.style.border = '1px solid #F9F9F9';\n    return canvasContainer;\n  }\n\n  createCanvas() {\n    let canvas = document.createElement('canvas');\n    canvas.height = 128;\n    canvas.width = 256;\n    return canvas;\n  }\n\n  paintCanvas() {\n    // setup context\n    let ctx = this._canvas.getContext('2d');\n    ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.lineWidth = 1;\n\n    for (let i in this._segmentation) {\n      // i is the label number and specifies the coordinates inside the canvas\n      let xCoord = i % this._canvas.width;\n      let yCoord = Math.floor(i / this._canvas.width);\n      let opacity =\n        typeof this._segmentation[i]['opacity'] != 'undefined'\n          ? this._segmentation[i]['opacity']\n          : 1;\n      let color = this._segmentation[i]['color'];\n\n      ctx.fillStyle = `rgba( ${Math.round(color[0])}, ${Math.round(color[1])}, ${Math.round(\n        color[2]\n      )}, ${opacity})`;\n      ctx.fillRect(xCoord, yCoord, 1, 1);\n    }\n  }\n\n  get texture() {\n    let texture = new THREE.Texture(this._canvas);\n    texture.mapping = THREE.UVMapping;\n    texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping;\n    texture.magFilter = texture.minFilter = THREE.NearestFilter;\n    texture.premultiplyAlpha = true;\n    texture.needsUpdate = true;\n\n    return texture;\n  }\n\n  /**\n   * Set and get the segmentation object\n   * (you can create it or get it from the presets file)\n   *\n   * @param {*} segmentation\n   */\n  set segmentation(segmentation) {\n    this._segmentation = segmentation;\n    this.paintCanvas();\n  }\n\n  get segmentation() {\n    return this._segmentation;\n  }\n}\n","import CoreUtils from '../core/core.utils';\n\n/**\n * Event Based progressbar\n * @module helpers/progressBar\n *\n * @example\n *\n * let loader = new LoadersVolume();\n * const domContainer = document.getElementById('progressbar');\n * const pb = new HelpersProgressBarEventBased(loader, domContainer);\n */\n\nexport default class HelpersProgressBarEventBased {\n  constructor(emitter, domTarget) {\n    if (!emitter || !this._isFunction(emitter.emit)) {\n      window.console.error('please give the this._emitter instance');\n      return;\n    }\n\n    if (CoreUtils.isString(domTarget)) {\n      this._dom = document.getElementById(domTarget);\n    } else {\n      this._dom = domTarget;\n    }\n\n    if (!CoreUtils.isElement(this._dom)) {\n      window.console.error('please give the id of container dom or directly a dom instance');\n      return;\n    }\n    this._emitter = emitter;\n    this.initContainerDom();\n    this.initEventListenner();\n    this.loaded = 0;\n    this.totalFile = 0;\n  }\n\n  _isFunction(fn) {\n    return Object.prototype.toString.call(fn) === '[object Function]';\n  }\n\n  initEventListenner() {\n    const self = this;\n\n    this._emitter.on('load-start', function(event) {\n      const totalFiles = event.files.length;\n      self.totalFile = totalFiles;\n      self._domTotalFile.innerHTML = totalFiles;\n    });\n\n    this._emitter.on('fetch-start', function(event) {\n      const fetchLi = document.createElement('li');\n\n      const fileTag = document.createElement('div');\n      fileTag.innerHTML = 'file: ' + event.file;\n      fileTag.style.color = '#ffffff';\n      fetchLi.append(fileTag);\n\n      fetchLi.className = 'fetch-file';\n      fetchLi.id = 'file-' + event.file;\n      fetchLi.style.marginBottom = '7px';\n      fetchLi.style.border = '1px solid #ffffff;';\n      fetchLi.style.width = '60%';\n      const fetchprogress = document.createElement('div');\n      fetchprogress.id = 'file-fetch-' + event.file;\n      fetchprogress.style.width = '0%';\n      fetchLi.append(fetchprogress);\n      self._domProcessList.append(fetchLi);\n    });\n\n    this._emitter.on('fetch-progress', function(event) {\n      const id = 'file-fetch-' + event.file;\n      const fileFetchDom = document.getElementById(id);\n      fileFetchDom.style.width = (event.loaded / event.total) * 100 + '%';\n      fileFetchDom.style.border = '1px solid red';\n    });\n\n    this._emitter.on('fetch-success', function(event) {\n      // show result\n      const liParent = document.getElementById('file-' + event.file);\n      const result = document.createElement('div');\n      result.id = 'file-result-' + event.file;\n      result.innerHTML = 'fetch-success';\n      result.style.color = '#ffffff';\n      liParent.append(result);\n    });\n\n    this._emitter.on('fetch-error', function(event) {\n      // console.log(event);\n    });\n\n    this._emitter.on('fetch-abort', function(event) {\n      // console.log(event);\n    });\n\n    this._emitter.on('fetch-end', function(event) {\n      // console.log(event);\n    });\n\n    this._emitter.on('fetch-timeout', function(event) {\n      // console.log(event);\n    });\n\n    this._emitter.on('parse-start', function(event) {\n      const liParent = document.getElementById('file-' + event.file);\n      const parseprogress = document.createElement('div');\n      parseprogress.id = 'file-parse-' + event.file;\n      parseprogress.style.width = '0%';\n      liParent.append(parseprogress);\n    });\n\n    this._emitter.on('parsing', function(event) {\n      const id = 'file-parse-' + event.file;\n      const fileParseDom = document.getElementById(id);\n      fileParseDom.style.width = (event.parsed / event.total) * 100 + '%';\n      fileParseDom.style.border = '1px solid yellow';\n    });\n\n    this._emitter.on('parse-success', function(event) {\n      self.loaded += 1;\n      self._domCurrentFile.innerHTML = self.loaded;\n      self._domCurrentProgress.style.width = (self.loaded / self.totalFile) * 100 + '%';\n      // show result\n      const liParent = document.getElementById('file-' + event.file);\n      const result = document.createElement('div');\n      result.id = 'file-result-' + event.file;\n      result.innerHTML = 'parse-success';\n      result.style.color = '#ffffff';\n      liParent.append(result);\n    });\n  }\n\n  initContainerDom() {\n    const containerDom = `\n      <div id=\"ami-progress-bar-container\" style=\"background-color: rgb(33, 33, 33); color: #ffffff;\">\n      <div>\n      <label for=\"progress-bar\" id=\"progress-label\" style=\"width: 60%; border: 1px solid #ffffff; text-align: center;\">\n      <span id=\"current-file-index\">0</span>\n      <span id=\"total-file\">0</span>\n      </label>\n      <div id=\"progress-bar\" style=\"width: 60%; border: 1px solid #ffffff; text-align: center;\">\n      <div id=\"current-progress\" style=\"border: 1px solid red; width: 0%;\"></div>\n      </div>\n      </div>\n      <ul id=\"process-list\" style=\"list-style-type: none; padding: 0; overflow-y: auto;\">\n      </ul>\n      </div>`;\n    const wrap = document.createElement('div');\n    wrap.innerHTML = containerDom;\n    this._dom.append(wrap);\n    // dom interface\n    this._domCurrentFile = document.getElementById('current-file-index');\n    this._domTotalFile = document.getElementById('total-file');\n    this._domProcessList = document.getElementById('process-list');\n    this._domCurrentProgress = document.getElementById('current-progress');\n  }\n}\n","/**\n * Helpers material mixin.\n *\n * @module helpers/material/mixin\n */\n\n import {Object3D, ShaderMaterial, DataTexture,UnsignedByteType, UVMapping, ClampToEdgeWrapping, NearestFilter} from 'three'\n\nconst helpersMaterialMixin = () => {\n\n  const Constructor = Object3D;\n  return class extends Constructor {\n    _createMaterial(extraOptions) {\n      // generate shaders on-demand!\n      let fs = new this._shadersFragment(this._uniforms);\n      let vs = new this._shadersVertex();\n\n      // material\n      let globalOptions = {\n        uniforms: this._uniforms,\n        vertexShader: vs.compute(),\n        fragmentShader: fs.compute(),\n      };\n\n      let options = Object.assign(extraOptions, globalOptions);\n      this._material = new ShaderMaterial(options);\n      this._material.needsUpdate = true;\n    }\n\n    _updateMaterial() {\n      // generate shaders on-demand!\n      let fs = new this._shadersFragment(this._uniforms);\n      let vs = new this._shadersVertex();\n\n      this._material.vertexShader = vs.compute();\n      this._material.fragmentShader = fs.compute();\n\n      this._material.needsUpdate = true;\n    }\n\n    _prepareTexture() {\n      this._textures = [];\n      for (let m = 0; m < this._stack._rawData.length; m++) {\n        let tex = new DataTexture(\n          this._stack.rawData[m],\n          this._stack.textureSize,\n          this._stack.textureSize,\n          this._stack.textureType,\n          UnsignedByteType,\n          UVMapping,\n          ClampToEdgeWrapping,\n          ClampToEdgeWrapping,\n          NearestFilter,\n          NearestFilter\n        );\n        tex.needsUpdate = true;\n        tex.flipY = true;\n        this._textures.push(tex);\n      }\n    }\n  };\n};\n\nexport { helpersMaterialMixin };\nexport default helpersMaterialMixin();\n","/** * Imports ***/\nimport { geometriesSlice } from '../geometries/geometries.slice';\nimport ShadersUniform from '../shaders/shaders.data.uniform';\nimport ShadersVertex from '../shaders/shaders.data.vertex';\nimport ShadersFragment from '../shaders/shaders.data.fragment';\n\nimport { helpersMaterialMixin } from '../helpers/helpers.material.mixin';\nimport {Object3D, Vector3, Color, Matrix4, DoubleSide, Mesh, Vector4} from 'three'\n/**\n * @module helpers/slice\n */\n\nconst helpersSlice = () => {\n\n  const Constructor = helpersMaterialMixin();\n  return class extends Constructor {\n    constructor(\n      stack,\n      index = 0,\n      position = new Vector3(0, 0, 0),\n      direction = new Vector3(0, 0, 1),\n      aabbSpace = 'IJK'\n    ) {\n      //\n      super();\n\n      // private vars\n      this._stack = stack;\n\n      // image settings\n      // index only used to grab window/level and intercept/slope\n      this._invert = this._stack.invert;\n\n      this._lut = 'none';\n      this._lutTexture = null;\n      // if auto === true, get from index\n      // else from stack which holds the default values\n      this._intensityAuto = true;\n      this._interpolation = 1; // default to trilinear interpolation\n      // starts at 0\n      this._index = index;\n      this._windowWidth = null;\n      this._windowCenter = null;\n      this._opacity = 1;\n      this._rescaleSlope = null;\n      this._rescaleIntercept = null;\n      this._spacing = 1;\n      this._thickness = 0;\n      this._thicknessMethod = 0; // default to MIP (Maximum Intensity Projection); 1 - Mean; 2 - MinIP\n\n      // threshold\n      this._lowerThreshold = null;\n      this._upperThreshold = null;\n\n      this._canvasWidth = 0;\n      this._canvasHeight = 0;\n      this._borderColor = null;\n\n      // Object3D settings\n      // shape\n      this._planePosition = position;\n      this._planeDirection = direction;\n      // change aaBBSpace changes the box dimensions\n      // also changes the transform\n      // there is also a switch to move back mesh to LPS space automatically\n      this._aaBBspace = aabbSpace; // or LPS -> different transforms, esp for the geometry/mesh\n      this._material = null;\n      this._textures = [];\n      this._shadersFragment = ShadersFragment;\n      this._shadersVertex = ShadersVertex;\n      this._uniforms = ShadersUniform.uniforms();\n      this._geometry = null;\n      this._mesh = null;\n      this._visible = true;\n\n      // update dimensions, center, etc.\n      // depending on aaBBSpace\n      this._init();\n\n      // update object\n      this._create();\n    }\n\n    // getters/setters\n\n    get stack() {\n      return this._stack;\n    }\n\n    set stack(stack) {\n      this._stack = stack;\n    }\n\n    get spacing() {\n      return this._spacing;\n    }\n\n    set spacing(spacing) {\n      this._spacing = spacing;\n      this._uniforms.uSpacing.value = this._spacing;\n    }\n\n    get thickness() {\n      return this._thickness;\n    }\n\n    set thickness(thickness) {\n      this._thickness = thickness;\n      this._uniforms.uThickness.value = this._thickness;\n    }\n\n    get thicknessMethod() {\n      return this._thicknessMethod;\n    }\n\n    set thicknessMethod(thicknessMethod) {\n      this._thicknessMethod = thicknessMethod;\n      this._uniforms.uThicknessMethod.value = this._thicknessMethod;\n    }\n    get windowWidth() {\n      return this._windowWidth;\n    }\n\n    set windowWidth(windowWidth) {\n      this._windowWidth = windowWidth;\n      this.updateIntensitySettingsUniforms();\n    }\n\n    get windowCenter() {\n      return this._windowCenter;\n    }\n\n    set windowCenter(windowCenter) {\n      this._windowCenter = windowCenter;\n      this.updateIntensitySettingsUniforms();\n    }\n\n    get opacity() {\n      return this._opacity;\n    }\n\n    set opacity(opacity) {\n      this._opacity = opacity;\n      this.updateIntensitySettingsUniforms();\n    }\n\n    // adding thresholding method\n    get upperThreshold() {\n      return this._upperThreshold;\n    }\n\n    set upperThreshold(upperThreshold) {\n      this._upperThreshold = upperThreshold;\n      this.updateIntensitySettingsUniforms();\n    }\n\n    get lowerThreshold() {\n      return this._lowerThreshold;\n    }\n\n    set lowerThreshold(lowerThreshold) {\n      this._lowerThreshold = lowerThreshold;\n      this.updateIntensitySettingsUniforms();\n    }\n    get rescaleSlope() {\n      return this._rescaleSlope;\n    }\n\n    set rescaleSlope(rescaleSlope) {\n      this._rescaleSlope = rescaleSlope;\n      this.updateIntensitySettingsUniforms();\n    }\n\n    get rescaleIntercept() {\n      return this._rescaleIntercept;\n    }\n\n    set rescaleIntercept(rescaleIntercept) {\n      this._rescaleIntercept = rescaleIntercept;\n      this.updateIntensitySettingsUniforms();\n    }\n\n    get invert() {\n      return this._invert;\n    }\n\n    set invert(invert) {\n      this._invert = invert;\n      this.updateIntensitySettingsUniforms();\n    }\n\n    get lut() {\n      return this._lut;\n    }\n\n    set lut(lut) {\n      this._lut = lut;\n    }\n\n    get lutTexture() {\n      return this._lutTexture;\n    }\n\n    set lutTexture(lutTexture) {\n      this._lutTexture = lutTexture;\n      this.updateIntensitySettingsUniforms();\n    }\n\n    get intensityAuto() {\n      return this._intensityAuto;\n    }\n\n    set intensityAuto(intensityAuto) {\n      this._intensityAuto = intensityAuto;\n      this.updateIntensitySettings();\n      this.updateIntensitySettingsUniforms();\n    }\n\n    get interpolation() {\n      return this._interpolation;\n    }\n\n    set interpolation(interpolation) {\n      this._interpolation = interpolation;\n      this.updateIntensitySettingsUniforms();\n      this._updateMaterial();\n    }\n\n    get index() {\n      return this._index;\n    }\n\n    set index(index) {\n      this._index = index;\n      this._update();\n    }\n\n    set planePosition(position) {\n      this._planePosition = position;\n      this._update();\n    }\n\n    get planePosition() {\n      return this._planePosition;\n    }\n\n    set planeDirection(direction) {\n      this._planeDirection = direction;\n      this._update();\n    }\n\n    get planeDirection() {\n      return this._planeDirection;\n    }\n\n    set halfDimensions(halfDimensions) {\n      this._halfDimensions = halfDimensions;\n    }\n\n    get halfDimensions() {\n      return this._halfDimensions;\n    }\n\n    set center(center) {\n      this._center = center;\n    }\n\n    get center() {\n      return this._center;\n    }\n\n    set aabbSpace(aabbSpace) {\n      this._aaBBspace = aabbSpace;\n      this._init();\n    }\n\n    get aabbSpace() {\n      return this._aaBBspace;\n    }\n\n    set mesh(mesh) {\n      this._mesh = mesh;\n    }\n\n    get mesh() {\n      return this._mesh;\n    }\n\n    set geometry(geometry) {\n      this._geometry = geometry;\n    }\n\n    get geometry() {\n      return this._geometry;\n    }\n\n    set canvasWidth(canvasWidth) {\n      this._canvasWidth = canvasWidth;\n      this._uniforms.uCanvasWidth.value = this._canvasWidth;\n    }\n\n    get canvasWidth() {\n      return this._canvasWidth;\n    }\n\n    set canvasHeight(canvasHeight) {\n      this._canvasHeight = canvasHeight;\n      this._uniforms.uCanvasHeight.value = this._canvasHeight;\n    }\n\n    get canvasHeight() {\n      return this._canvasHeight;\n    }\n\n    set borderColor(borderColor) {\n      this._borderColor = borderColor;\n      this._uniforms.uBorderColor.value = new Color(borderColor);\n    }\n\n    get borderColor() {\n      return this._borderColor;\n    }\n\n    _init() {\n      if (!this._stack || !this._stack._prepared || !this._stack._packed) {\n        return;\n      }\n\n      if (this._aaBBspace === 'IJK') {\n        this._halfDimensions = this._stack.halfDimensionsIJK;\n        this._center = new Vector3(\n          this._stack.halfDimensionsIJK.x - 0.5,\n          this._stack.halfDimensionsIJK.y - 0.5,\n          this._stack.halfDimensionsIJK.z - 0.5\n        );\n        this._toAABB = new Matrix4();\n      } else {\n        // LPS\n        let aaBBox = this._stack.AABBox();\n        this._halfDimensions = aaBBox.clone().multiplyScalar(0.5);\n        this._center = this._stack.centerAABBox();\n        this._toAABB = this._stack.lps2AABB;\n      }\n    }\n\n    // private methods\n    _create() {\n      if (!this._stack || !this._stack.prepared || !this._stack.packed) {\n        return;\n      }\n\n      // Convenience vars\n      try {\n        const SliceGeometryContructor = geometriesSlice();\n        this._geometry = new SliceGeometryContructor(\n          this._halfDimensions,\n          this._center,\n          this._planePosition,\n          this._planeDirection,\n          this._toAABB\n        );\n      } catch (e) {\n        window.console.log(e);\n        window.console.log('invalid slice geometry - exiting...');\n        return;\n      }\n\n      if (!this._geometry.vertices) {\n        return;\n      }\n\n      if (!this._material) {\n        //\n        this._uniforms.uTextureSize.value = this._stack.textureSize;\n        this._uniforms.uDataDimensions.value = [\n          this._stack.dimensionsIJK.x,\n          this._stack.dimensionsIJK.y,\n          this._stack.dimensionsIJK.z,\n        ];\n        this._uniforms.uWorldToData.value = this._stack.lps2IJK;\n        this._uniforms.uNumberOfChannels.value = this._stack.numberOfChannels;\n        this._uniforms.uPixelType.value = this._stack.pixelType;\n        this._uniforms.uBitsAllocated.value = this._stack.bitsAllocated;\n        this._uniforms.uPackedPerPixel.value = this._stack.packedPerPixel;\n        this._uniforms.uSpacing.value = this._spacing;\n        this._uniforms.uThickness.value = this._thickness;\n        this._uniforms.uThicknessMethod.value = this._thicknessMethod;\n        // compute texture if material exist\n        this._prepareTexture();\n        this._uniforms.uTextureContainer.value = this._textures;\n        if (this._stack.textureUnits > 8) {\n          this._uniforms.uTextureContainer.length = 14;\n        }\n\n        this._createMaterial({\n          side: DoubleSide,\n        });\n      }\n\n      // update intensity related stuff\n      this.updateIntensitySettings();\n      this.updateIntensitySettingsUniforms();\n\n      // create the mesh!\n      this._mesh = new Mesh(this._geometry, this._material);\n      if (this._aaBBspace === 'IJK') {\n        this._mesh.applyMatrix4(this._stack.ijk2LPS);\n      }\n\n      this._mesh.visible = this._visible;\n\n      // and add it!\n      this.add(this._mesh);\n    }\n\n    updateIntensitySettings() {\n      // if auto, get from frame index\n      if (this._intensityAuto) {\n        this.updateIntensitySetting('windowCenter');\n        this.updateIntensitySetting('windowWidth');\n        this.updateIntensitySetting('rescaleSlope');\n        this.updateIntensitySetting('rescaleIntercept');\n      } else {\n        if (this._windowCenter === null) {\n          this._windowCenter = this._stack.windowCenter;\n        }\n\n        if (this._windowWidth === null) {\n          this._windowWidth = this._stack.windowWidth;\n        }\n\n        if (this._rescaleSlope === null) {\n          this._rescaleSlope = this._stack.rescaleSlope;\n        }\n\n        if (this._rescaleIntercept === null) {\n          this._rescaleIntercept = this._stack.rescaleIntercept;\n        }\n      }\n\n      // adding thresholding\n      if (this._upperThreshold === null) {\n        this._upperThreshold = this._stack._minMax[1];\n      }\n\n      if (this._lowerThreshold === null) {\n        this._lowerThreshold = this._stack._minMax[0];\n      }\n    }\n\n    updateIntensitySettingsUniforms() {\n      // compensate for the offset to only pass > 0 values to shaders\n      // models > models.stack.js : _packTo8Bits\n      let offset = 0;\n      if (this._stack._minMax[0] < 0) {\n        offset -= this._stack._minMax[0];\n      }\n\n      // set slice window center and width\n      this._uniforms.uRescaleSlopeIntercept.value = [this._rescaleSlope, this._rescaleIntercept];\n      this._uniforms.uWindowCenterWidth.value = [offset + this._windowCenter, this._windowWidth];\n\n      // set slice opacity\n      this._uniforms.uOpacity.value = this._opacity;\n\n      // set slice upper/lower threshold\n      this._uniforms.uLowerUpperThreshold.value = [\n        offset + this._lowerThreshold,\n        offset + this._upperThreshold,\n      ];\n\n      // invert\n      this._uniforms.uInvert.value = this._invert === true ? 1 : 0;\n\n      // interpolation\n      this._uniforms.uInterpolation.value = this._interpolation;\n\n      // lut\n      if (this._lut === 'none') {\n        this._uniforms.uLut.value = 0;\n      } else {\n        this._uniforms.uLut.value = 1;\n        this._uniforms.uTextureLUT.value = this._lutTexture;\n      }\n    }\n\n    updateIntensitySetting(setting) {\n      if (this._stack.frame[this._index] && this._stack.frame[this._index][setting]) {\n        this['_' + setting] = this._stack.frame[this._index][setting];\n      } else {\n        this['_' + setting] = this._stack[setting];\n      }\n    }\n\n    _update() {\n      // update slice\n      if (this._mesh) {\n        this.remove(this._mesh);\n        this._mesh.geometry.dispose();\n        this._mesh.geometry = null;\n        // we do not want to dispose the texture!\n        // this._mesh.material.dispose();\n        // this._mesh.material = null;\n        this._mesh = null;\n      }\n\n      this._create();\n    }\n\n    dispose() {\n      // Release memory\n      for (let j = 0; j < this._textures.length; j++) {\n        this._textures[j].dispose();\n        this._textures[j] = null;\n      }\n      this._textures = null;\n      this._shadersFragment = null;\n      this._shadersVertex = null;\n\n      this._uniforms = null;\n\n      // material, geometry and mesh\n      this.remove(this._mesh);\n      this._mesh.geometry.dispose();\n      this._mesh.geometry = null;\n      this._mesh.material.dispose();\n      this._mesh.material = null;\n      this._mesh = null;\n\n      this._geometry.dispose();\n      this._geometry = null;\n      this._material.vertexShader = null;\n      this._material.fragmentShader = null;\n      this._material.uniforms = null;\n      this._material.dispose();\n      this._material = null;\n\n      this._stack = null;\n    }\n\n    cartesianEquation() {\n      // Make sure we have a geometry\n      if (!this._geometry || !this._geometry.vertices || this._geometry.vertices.length < 3) {\n        return new Vector4();\n      }\n\n      let vertices = this._geometry.vertices;\n      let dataToWorld = this._stack.ijk2LPS;\n      let p1 = new Vector3(vertices[0].x, vertices[0].y, vertices[0].z).applyMatrix4(\n        dataToWorld\n      );\n      let p2 = new Vector3(vertices[1].x, vertices[1].y, vertices[1].z).applyMatrix4(\n        dataToWorld\n      );\n      let p3 = new Vector3(vertices[2].x, vertices[2].y, vertices[2].z).applyMatrix4(\n        dataToWorld\n      );\n      let v1 = new Vector3();\n      let v2 = new Vector3();\n      let normal = v1\n        .subVectors(p3, p2)\n        .cross(v2.subVectors(p1, p2))\n        .normalize();\n\n      return new Vector4(normal.x, normal.y, normal.z, -normal.dot(p1));\n    }\n  };\n};\n\nexport { helpersSlice };\nexport default helpersSlice();\n","/** * Imports ***/\nimport { helpersBorder } from '../helpers/helpers.border';\nimport { helpersBoundingBox } from '../helpers/helpers.boundingbox';\nimport { helpersSlice } from '../helpers/helpers.slice';\nimport {Object3D, Vector3} from 'three'\n/**\n * Helper to easily display and interact with a stack.<br>\n *<br>\n * Defaults:<br>\n *   - orientation: 0 (acquisition direction)<br>\n *   - index: middle slice in acquisition direction<br>\n *<br>\n * Features:<br>\n *   - slice from the stack (in any direction)<br>\n *   - slice border<br>\n *   - stack bounding box<br>\n *<br>\n * Live demo at: {@link http://jsfiddle.net/gh/get/library/pure/fnndsc/ami/tree/master/lessons/01#run|Lesson 01}\n *\n * @example\n * let stack = new VJS.Models.Stack();\n * ... // prepare the stack\n *\n * let helpersStack = new VJS.Helpers.Stack(stack);\n * stackHelper.bbox.color = 0xF9F9F9;\n * stackHelper.border.color = 0xF9F9F9;\n *\n * let scene = new THREE.Scene();\n * scene.add(stackHelper);\n *\n * @see module:helpers/border\n * @see module:helpers/boundingbox\n * @see module:helpers/slice\n *\n * @module helpers/stack\n */\nconst helpersStack = () => {\n\n  const Constructor = Object3D;\n  return class extends Constructor {\n    constructor(stack) {\n      //\n      super();\n\n      this._stack = stack;\n      this._bBox = null;\n      this._slice = null;\n      this._border = null;\n      this._dummy = null;\n\n      this._orientation = 0;\n      this._index = 0;\n\n      this._uniforms = null;\n      this._autoWindowLevel = false;\n      this._outOfBounds = false;\n      this._orientationMaxIndex = 0;\n      this._orientationSpacing = 0;\n\n      this._canvasWidth = 0;\n      this._canvasHeight = 0;\n      this._borderColor = null;\n\n      this._create();\n    }\n\n    /**\n     * Get stack.\n     *\n     * @type {ModelsStack}\n     */\n    get stack() {\n      return this._stack;\n    }\n\n    /**\n     * Set stack.\n     *\n     * @type {ModelsStack}\n     */\n    set stack(stack) {\n      this._stack = stack;\n    }\n\n    /**\n     * Get bounding box helper.\n     *\n     * @type {HelpersBoundingBox}\n     */\n    get bbox() {\n      return this._bBox;\n    }\n\n    /**\n     * Get slice helper.\n     *\n     * @type {HelpersSlice}\n     */\n    get slice() {\n      return this._slice;\n    }\n\n    /**\n     * Get border helper.\n     *\n     * @type {HelpersSlice}\n     */\n    get border() {\n      return this._border;\n    }\n\n    /**\n     * Set/get current slice index.<br>\n     * Sets outOfBounds flag to know if target index is in/out stack bounding box.<br>\n     * <br>\n     * Internally updates the sliceHelper index and position. Also updates the\n     * borderHelper with the updated sliceHelper.\n     *\n     * @type {number}\n     */\n    get index() {\n      return this._index;\n    }\n\n    set index(index) {\n      this._index = index;\n\n      // update the slice\n      this._slice.index = index;\n      let halfDimensions = this._stack.halfDimensionsIJK;\n      this._slice.planePosition = this._prepareSlicePosition(halfDimensions, this._index);\n\n      // also update the border\n      this._border.helpersSlice = this._slice;\n\n      // update ourOfBounds flag\n      this._isIndexOutOfBounds();\n    }\n\n    /**\n     * Set/get current slice orientation.<br>\n     * Values: <br>\n     *   - 0: acquisition direction (slice normal is z_cosine)<br>\n     *   - 1: next direction (slice normal is x_cosine)<br>\n     *   - 2: next direction (slice normal is y_cosine)<br>\n     *   - n: set orientation to 0<br>\n     * <br>\n     * Internally updates the sliceHelper direction. Also updates the\n     * borderHelper with the updated sliceHelper.\n     *\n     * @type {number}\n     */\n    set orientation(orientation) {\n      this._orientation = orientation;\n      this._computeOrientationMaxIndex();\n\n      this._computeOrientationSpacing();\n      this._slice.spacing = Math.abs(this._orientationSpacing);\n      this._slice.thickness = this._slice.spacing;\n\n      this._slice.planeDirection = this._prepareDirection(this._orientation);\n\n      // also update the border\n      this._border.helpersSlice = this._slice;\n    }\n\n    get orientation() {\n      return this._orientation;\n    }\n\n    /**\n     * Set/get the outOfBound flag.\n     *\n     * @type {boolean}\n     */\n    set outOfBounds(outOfBounds) {\n      this._outOfBounds = outOfBounds;\n    }\n\n    get outOfBounds() {\n      return this._outOfBounds;\n    }\n\n    /**\n     * Set/get the orientationMaxIndex.\n     *\n     * @type {number}\n     */\n    set orientationMaxIndex(orientationMaxIndex) {\n      this._orientationMaxIndex = orientationMaxIndex;\n    }\n\n    get orientationMaxIndex() {\n      return this._orientationMaxIndex;\n    }\n\n    /**\n     * Set/get the orientationSpacing.\n     *\n     * @type {number}\n     */\n    set orientationSpacing(orientationSpacing) {\n      this._orientationSpacing = orientationSpacing;\n    }\n\n    get orientationSpacing() {\n      return this._orientationSpacing;\n    }\n\n    set canvasWidth(canvasWidth) {\n      this._canvasWidth = canvasWidth;\n      this._slice.canvasWidth = this._canvasWidth;\n    }\n\n    get canvasWidth() {\n      return this._canvasWidth;\n    }\n\n    set canvasHeight(canvasHeight) {\n      this._canvasHeight = canvasHeight;\n      this._slice.canvasHeight = this._canvasHeight;\n    }\n\n    get canvasHeight() {\n      return this._canvasHeight;\n    }\n\n    set borderColor(borderColor) {\n      this._borderColor = borderColor;\n      this._border.color = borderColor;\n      this._slice.borderColor = this._borderColor;\n    }\n\n    get borderColor() {\n      return this._borderColor;\n    }\n\n    //\n    // PRIVATE METHODS\n    //\n\n    /**\n     * Initial setup, including stack prepare, bbox prepare, slice prepare and\n     * border prepare.\n     *\n     * @private\n     */\n    _create() {\n      if (this._stack) {\n        // prepare sthe stack internals\n        this._prepareStack();\n\n        // prepare visual objects\n        this._prepareBBox();\n        this._prepareSlice();\n        this._prepareBorder();\n        // todo: Arrow\n      } else {\n        window.console.log('no stack to be prepared...');\n      }\n    }\n\n    _computeOrientationSpacing() {\n      let spacing = this._stack._spacing;\n      switch (this._orientation) {\n        case 0:\n          this._orientationSpacing = spacing.z;\n          break;\n        case 1:\n          this._orientationSpacing = spacing.x;\n          break;\n        case 2:\n          this._orientationSpacing = spacing.y;\n          break;\n        default:\n          this._orientationSpacing = 0;\n          break;\n      }\n    }\n\n    _computeOrientationMaxIndex() {\n      let dimensionsIJK = this._stack.dimensionsIJK;\n      this._orientationMaxIndex = 0;\n      switch (this._orientation) {\n        case 0:\n          this._orientationMaxIndex = dimensionsIJK.z - 1;\n          break;\n        case 1:\n          this._orientationMaxIndex = dimensionsIJK.x - 1;\n          break;\n        case 2:\n          this._orientationMaxIndex = dimensionsIJK.y - 1;\n          break;\n        default:\n          // do nothing!\n          break;\n      }\n    }\n\n    /**\n     * Given orientation, check if index is in/out of bounds.\n     *\n     * @private\n     */\n    _isIndexOutOfBounds() {\n      this._computeOrientationMaxIndex();\n      if (this._index >= this._orientationMaxIndex || this._index < 0) {\n        this._outOfBounds = true;\n      } else {\n        this._outOfBounds = false;\n      }\n    }\n\n    /**\n     * Prepare a stack for visualization. (image to world transform, frames order,\n     * pack data into 8 bits textures, etc.)\n     *\n     * @private\n     */\n    _prepareStack() {\n      // make sure there is something, if not throw an error\n      // compute image to workd transform, order frames, etc.\n      if (!this._stack.prepared) {\n        this._stack.prepare();\n      }\n      // pack data into 8 bits rgba texture for the shader\n      // this one can be slow...\n      if (!this._stack.packed) {\n        this._stack.pack();\n      }\n    }\n\n    /**\n     * Setup bounding box helper given prepared stack and add bounding box helper\n     * to stack helper.\n     *\n     * @private\n     */\n    _prepareBBox() {\n      const HelpersBoundingBoxConstructor = helpersBoundingBox();\n      this._bBox = new HelpersBoundingBoxConstructor(this._stack);\n      this.add(this._bBox);\n    }\n\n    /**\n     * Setup border helper given slice helper and add border helper\n     * to stack helper.\n     *\n     * @private\n     */\n    _prepareBorder() {\n      const HelpersBorderContructor = helpersBorder();\n      this._border = new HelpersBorderContructor(this._slice);\n      this.add(this._border);\n    }\n\n    /**\n     * Setup slice helper given prepared stack helper and add slice helper\n     * to stack helper.\n     *\n     * @private\n     */\n    _prepareSlice() {\n      let halfDimensionsIJK = this._stack.halfDimensionsIJK;\n      // compute initial index given orientation\n      this._index = this._prepareSliceIndex(halfDimensionsIJK);\n      // compute initial position given orientation and index\n      let position = this._prepareSlicePosition(halfDimensionsIJK, this._index);\n      // compute initial direction orientation\n      let direction = this._prepareDirection(this._orientation);\n\n      const SliceHelperConstructor = helpersSlice();\n      this._slice = new SliceHelperConstructor(this._stack, this._index, position, direction);\n      this.add(this._slice);\n    }\n\n    /**\n     * Compute slice index depending on orientation.\n     *\n     * @param {Vector3} indices - Indices in each direction.\n     *\n     * @returns {number} Slice index according to current orientation.\n     *\n     * @private\n     */\n    _prepareSliceIndex(indices) {\n      let index = 0;\n      switch (this._orientation) {\n        case 0:\n          index = Math.floor(indices.z);\n          break;\n        case 1:\n          index = Math.floor(indices.x);\n          break;\n        case 2:\n          index = Math.floor(indices.y);\n          break;\n        default:\n          // do nothing!\n          break;\n      }\n      return index;\n    }\n\n    /**\n     * Compute slice position depending on orientation.\n     * Sets index in proper location of reference position.\n     *\n     * @param {Vector3} rPosition - Reference position.\n     * @param {number} index - Current index.\n     *\n     * @returns {number} Slice index according to current orientation.\n     *\n     * @private\n     */\n    _prepareSlicePosition(rPosition, index) {\n      let position = new Vector3(0, 0, 0);\n      switch (this._orientation) {\n        case 0:\n          position = new Vector3(Math.floor(rPosition.x), Math.floor(rPosition.y), index);\n          break;\n        case 1:\n          position = new Vector3(index, Math.floor(rPosition.y), Math.floor(rPosition.z));\n          break;\n        case 2:\n          position = new Vector3(Math.floor(rPosition.x), index, Math.floor(rPosition.z));\n          break;\n        default:\n          // do nothing!\n          break;\n      }\n      return position;\n    }\n\n    /**\n     * Compute slice direction depending on orientation.\n     *\n     * @param {number} orientation - Slice orientation.\n     *\n     * @returns {Vector3} Slice direction\n     *\n     * @private\n     */\n    _prepareDirection(orientation) {\n      let direction = new Vector3(0, 0, 1);\n      switch (orientation) {\n        case 0:\n          direction = new Vector3(0, 0, 1);\n          break;\n        case 1:\n          direction = new Vector3(1, 0, 0);\n          break;\n        case 2:\n          direction = new Vector3(0, 1, 0);\n          break;\n        default:\n          // do nothing!\n          break;\n      }\n\n      return direction;\n    }\n\n    /**\n     * Release the stack helper memory including the slice memory.\n     *\n     * @public\n     */\n    dispose() {\n      this.remove(this._slice);\n      this._slice.dispose();\n      this._slice = null;\n      this._bBox.dispose();\n      this._bBox = null;\n      this._border.dispose();\n      this._border = null;\n    }\n  };\n};\n\n// export factory\nexport { helpersStack };\n// default export to\nexport default helpersStack();\n","/** * Imports ***/\nimport ShadersUniform from '../shaders/shaders.vr.uniform';\nimport ShadersVertex from '../shaders/shaders.vr.vertex';\nimport ShadersFragment from '../shaders/shaders.vr.fragment';\n\nimport { helpersMaterialMixin } from '../helpers/helpers.material.mixin';\n\n/**\n * @module helpers/volumerendering\n */\nimport {Matrix4, Mesh, BoxGeometry, BackSide} from 'three'\nconst helpersVolumeRendering = () => {\n\n  const Constructor = helpersMaterialMixin();\n  return class extends Constructor {\n    constructor(stack) {\n      //\n      super();\n\n      this._stack = stack;\n      this._textures = [];\n      this._shadersFragment = ShadersFragment;\n      this._shadersVertex = ShadersVertex;\n      this._uniforms = ShadersUniform.uniforms();\n      this._material = null;\n      this._geometry = null;\n      this._mesh = null;\n\n      this._algorithm = 0; // ray marching\n      this._alphaCorrection = 0.5; // default\n      this._interpolation = 1; // default to trilinear interpolation\n      this._shading = 1; // shading is on by default\n      this._shininess = 10.0;\n      this._steps = 256; // default\n      this._offset = 0;\n      this._windowCenter = 0.0;\n      this._windowWidth = 1.0;\n\n      this._create();\n    }\n\n    _create() {\n      this._prepareStack();\n      this._prepareTexture();\n      this._prepareMaterial();\n      this._prepareGeometry();\n\n      this._mesh = new Mesh(this._geometry, this._material);\n      this.add(this._mesh);\n    }\n\n    _prepareStack() {\n      if (!this._stack.prepared) {\n        this._stack.prepare();\n      }\n\n      if (!this._stack.packed) {\n        this._stack.pack();\n      }\n\n      // compensate for the offset to only pass > 0 values to shaders\n      // models > models.stack.js : _packTo8Bits\n      this._offset = Math.min(0, this._stack._minMax[0]);\n      this._windowCenter = this._stack.windowCenter;\n      this._windowWidth = this._stack.windowWidth * 0.8; // multiply for better default visualization\n    }\n\n    _prepareMaterial() {\n      // uniforms\n      this._uniforms = ShadersUniform.uniforms();\n      this._uniforms.uWorldBBox.value = this._stack.worldBoundingBox();\n      this._uniforms.uTextureSize.value = this._stack.textureSize;\n      this._uniforms.uTextureContainer.value = this._textures;\n      if (this._stack.textureUnits > 8) {\n        this._uniforms.uTextureContainer.length = 14;\n      }\n      this._uniforms.uWorldToData.value = this._stack.lps2IJK;\n      this._uniforms.uNumberOfChannels.value = this._stack.numberOfChannels;\n      this._uniforms.uPixelType.value = this._stack.pixelType;\n      this._uniforms.uBitsAllocated.value = this._stack.bitsAllocated;\n      this._uniforms.uPackedPerPixel.value = this._stack.packedPerPixel;\n      this._uniforms.uWindowCenterWidth.value = [\n        this._windowCenter - this._offset,\n        this._windowWidth,\n      ];\n      this._uniforms.uRescaleSlopeIntercept.value = [\n        this._stack.rescaleSlope,\n        this._stack.rescaleIntercept,\n      ];\n      this._uniforms.uDataDimensions.value = [\n        this._stack.dimensionsIJK.x,\n        this._stack.dimensionsIJK.y,\n        this._stack.dimensionsIJK.z,\n      ];\n      this._uniforms.uAlphaCorrection.value = this._alphaCorrection;\n      this._uniforms.uInterpolation.value = this._interpolation;\n      this._uniforms.uShading.value = this._shading;\n      this._uniforms.uShininess.value = this._shininess;\n      this._uniforms.uSteps.value = this._steps;\n      this._uniforms.uAlgorithm.value = this._algorithm;\n\n      this._createMaterial({\n        side: BackSide,\n        transparent: true,\n      });\n    }\n\n    _prepareGeometry() {\n      let worldBBox = this._stack.worldBoundingBox();\n      let centerLPS = this._stack.worldCenter();\n\n      this._geometry = new BoxGeometry(\n        worldBBox[1] - worldBBox[0],\n        worldBBox[3] - worldBBox[2],\n        worldBBox[5] - worldBBox[4]\n      );\n      this._geometry.applyMatrix4(\n        new three.Matrix4().makeTranslation(centerLPS.x, centerLPS.y, centerLPS.z)\n      );\n    }\n\n    get uniforms() {\n      return this._uniforms;\n    }\n\n    set uniforms(uniforms) {\n      this._uniforms = uniforms;\n    }\n\n    set mesh(mesh) {\n      this._mesh = mesh;\n    }\n\n    get mesh() {\n      return this._mesh;\n    }\n\n    get stack() {\n      return this._stack;\n    }\n\n    set stack(stack) {\n      this._stack = stack;\n    }\n\n    get windowCenter() {\n      return this._windowCenter;\n    }\n\n    set windowCenter(windowCenter) {\n      this._windowCenter = windowCenter;\n      this._uniforms.uWindowCenterWidth.value[0] = this._windowCenter - this._offset;\n    }\n\n    get windowWidth() {\n      return this._windowWidth;\n    }\n\n    set windowWidth(windowWidth) {\n      this._windowWidth = Math.max(1, windowWidth);\n      this._uniforms.uWindowCenterWidth.value[1] = this._windowWidth;\n    }\n\n    get steps() {\n      return this._steps;\n    }\n\n    set steps(steps) {\n      this._steps = steps;\n      this._uniforms.uSteps.value = this._steps;\n    }\n\n    get alphaCorrection() {\n      return this._alphaCorrection;\n    }\n\n    set alphaCorrection(alphaCorrection) {\n      this._alphaCorrection = alphaCorrection;\n      this._uniforms.uAlphaCorrection.value = this._alphaCorrection;\n    }\n\n    get interpolation() {\n      return this._interpolation;\n    }\n\n    set interpolation(interpolation) {\n      this._interpolation = interpolation;\n      this._uniforms.uInterpolation.value = this._interpolation;\n      this._updateMaterial();\n    }\n\n    get shading() {\n      return this._shading;\n    }\n\n    set shading(shading) {\n      this._shading = shading;\n      this._uniforms.uShading.value = this._shading;\n    }\n\n    get shininess() {\n      return this._shininess;\n    }\n\n    set shininess(shininess) {\n      this._shininess = shininess;\n      this._uniforms.uShininess.value = this._shininess;\n    }\n\n    get algorithm() {\n      return this._algorithm;\n    }\n\n    set algorithm(algorithm) {\n      this._algorithm = algorithm;\n      this._uniforms.uAlgorithm.value = this._algorithm;\n    }\n\n    dispose() {\n      // Release memory\n      for (let j = 0; j < this._textures.length; j++) {\n        this._textures[j].dispose();\n        this._textures[j] = null;\n      }\n      this._textures = null;\n      this._shadersFragment = null;\n      this._shadersVertex = null;\n\n      this._uniforms.uTextureContainer = null;\n      this._uniforms.uTextureLUT = null;\n      this._uniforms = null;\n\n      // material, geometry and mesh\n      this.remove(this._mesh);\n      this._mesh.geometry.dispose();\n      this._mesh.geometry = null;\n      this._mesh.material.dispose();\n      this._mesh.material = null;\n      this._mesh = null;\n\n      this._geometry.dispose();\n      this._geometry = null;\n      this._material.vertexShader = null;\n      this._material.fragmentShader = null;\n      this._material.uniforms = null;\n      this._material.dispose();\n      this._material = null;\n\n      this._stack = null;\n    }\n  };\n};\n\nexport { helpersVolumeRendering };\nexport default helpersVolumeRendering();\n","/**\n * @module helpers/progressBar\n */\n\nexport default class HelpersProgressBar {\n  constructor(container) {\n    this._container = container;\n    this._modes = {\n      load: {\n        name: 'load',\n        color: '#FFF56F',\n      },\n      parse: {\n        name: 'parse',\n        color: '#2196F3',\n      },\n    };\n\n    this.requestAnimationFrameID = null;\n\n    this._mode = null;\n    this._value = null;\n    this._total = null;\n    this._totalFiles = null;\n\n    this.init();\n  }\n\n  free() {\n    let progressContainers = this._container.getElementsByClassName('progress container');\n    if (progressContainers.length > 0) {\n      progressContainers[0].parentNode.removeChild(progressContainers[0]);\n    }\n    progressContainers = null;\n    // stop rendering loop\n    window.cancelAnimationFrame(this.requestAnimationFrameID);\n  }\n\n  init() {\n    let progressContainer = this._domContainer();\n\n    for (let mode in this._modes) {\n      if (this._modes.hasOwnProperty(mode)) {\n        let bar = this._domBar(this._modes[mode]);\n        progressContainer.appendChild(bar);\n        bar = null;\n      }\n    }\n\n    this._container.appendChild(progressContainer);\n    progressContainer = null;\n\n    // start rendering loop\n    this.updateUI();\n  }\n\n  // url can be used in child class to show overall progress bar\n  update(value, total, mode, url = '') {\n    this._mode = mode;\n    this._value = value;\n    // depending on CDN, total return to XHTTPRequest can be 0.\n    // In this case, we generate a random number to animate the progressbar\n    if (total === 0) {\n      this._total = value;\n      this._value = Math.random() * value;\n    } else {\n      this._total = total;\n    }\n  }\n\n  updateUI() {\n    this.requestAnimationFrameID = requestAnimationFrame(() => {\n      this.updateUI();\n    });\n\n    if (\n      !(\n        this._modes.hasOwnProperty(this._mode) &&\n        this._modes[this._mode].hasOwnProperty('name') &&\n        this._modes[this._mode].hasOwnProperty('color')\n      )\n    ) {\n      return false;\n    }\n\n    const progress = Math.round((this._value / this._total) * 100);\n    const color = this._modes[this._mode].color;\n\n    let progressBar = this._container.getElementsByClassName(\n      'progress ' + this._modes[this._mode].name\n    );\n    if (progressBar.length > 0) {\n      progressBar[0].style.borderColor = color;\n      progressBar[0].style.width = progress + '%';\n    }\n    progressBar = null;\n  }\n\n  _domContainer() {\n    let container = document.createElement('div');\n\n    // class it\n    container.classList.add('progress');\n    container.classList.add('container');\n\n    // style it\n    container.style.width = '100%';\n    container.style.height = '8px';\n    container.style.position = 'absolute';\n    container.style.backgroundColor = 'rgba(158, 158, 158, 0.5)';\n    container.style.top = '0';\n    container.style.zIndex = '1';\n\n    return container;\n  }\n\n  _domBar(mode) {\n    if (!(mode.hasOwnProperty('name') && mode.hasOwnProperty('color'))) {\n      window.console.log('Invalid mode provided.');\n      window.console.log(mode);\n\n      return false;\n    }\n\n    let bar = document.createElement('div');\n\n    // class it\n    bar.classList.add(mode.name);\n    bar.classList.add('progress');\n\n    // style it\n    bar.style.border = '2px solid ' + mode.color;\n    bar.style.width = '0%';\n\n    return bar;\n  }\n\n  set totalFiles(totalFiles) {\n    this._totalFiles = totalFiles;\n  }\n\n  get totalFiles() {\n    return this._totalFiles;\n  }\n}\n","/** Imports **/\nimport HelpersProgressBar from '../helpers/helpers.progressbar';\nimport EventEmitter from 'events';\n\n/**\n *\n * It is typically used to load a DICOM image. Use loading manager for\n * advanced usage, such as multiple files handling.\n *\n * Demo: {@link https://fnndsc.github.io/vjs#loader_dicom}\n *\n * @module loaders/base\n * @extends EventEmitter\n * @example\n * var files = ['/data/dcm/fruit'];\n *\n * // Instantiate a dicom loader\n * var lDicomoader = new dicom();\n *\n * // load a resource\n * loader.load(\n *   // resource URL\n *   files[0],\n *   // Function when resource is loaded\n *   function(object) {\n *     //scene.add( object );\n *     window.console.log(object);\n *   }\n * );\n */\nexport default class LoadersBase extends EventEmitter {\n  /**\n   * Create a Loader.\n   * @param {dom} container - The dom container of loader.\n   * @param {object} ProgressBar - The progressbar of loader.\n   */\n  constructor(container = null, ProgressBar = HelpersProgressBar) {\n    super();\n    this._loaded = -1;\n    this._totalLoaded = -1;\n    this._parsed = -1;\n    this._totalParsed = -1;\n\n    this._data = [];\n\n    this._container = container;\n    this._progressBar = null;\n    if (this._container && ProgressBar) {\n      this._progressBar = new ProgressBar(this._container);\n    }\n  }\n\n  /**\n   * free the reference.\n   */\n  free() {\n    this._data = [];\n    this._container = null;\n    // this._helpersProgressBar = null;\n\n    if (this._progressBar) {\n      this._progressBar.free();\n      this._progressBar = null;\n    }\n  }\n\n  /**\n   * load the resource by url.\n   * @param {string} url - resource url.\n   * @param {Map} requests - used for cancellation.\n   * @return {promise} promise.\n   */\n  fetch(url, requests) {\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open('GET', url);\n      request.crossOrigin = true;\n      request.responseType = 'arraybuffer';\n\n      request.onloadstart = event => {\n        // emit 'fetch-start' event\n        this.emit('fetch-start', {\n          file: url,\n          time: new Date(),\n        });\n      };\n\n      request.onload = event => {\n        if (request.status === 200 || request.status === 0) {\n          this._loaded = event.loaded;\n          this._totalLoaded = event.total;\n\n          // will be removed after eventer set up\n          if (this._progressBar) {\n            this._progressBar.update(this._loaded, this._totalLoaded, 'load', url);\n          }\n\n          let buffer = request.response;\n          let response = {\n            url,\n            buffer,\n          };\n\n          // emit 'fetch-success' event\n          this.emit('fetch-success', {\n            file: url,\n            time: new Date(),\n            totalLoaded: event.total,\n          });\n\n          resolve(response);\n        } else {\n          reject(request.statusText);\n        }\n      };\n\n      request.onerror = () => {\n        // emit 'fetch-error' event\n        this.emit('fetch-error', {\n          file: url,\n          time: new Date(),\n        });\n\n        reject(request.statusText);\n      };\n\n      request.onabort = event => {\n        // emit 'fetch-abort' event\n        this.emit('fetch-abort', {\n          file: url,\n          time: new Date(),\n        });\n\n        reject(request.statusText || 'Aborted');\n      };\n\n      request.ontimeout = () => {\n        // emit 'fetch-timeout' event\n        this.emit('fetch-timeout', {\n          file: url,\n          time: new Date(),\n        });\n\n        reject(request.statusText);\n      };\n\n      request.onprogress = event => {\n        this._loaded = event.loaded;\n        this._totalLoaded = event.total;\n        // emit 'fetch-progress' event\n        this.emit('fetch-progress', {\n          file: url,\n          total: event.total,\n          loaded: event.loaded,\n          time: new Date(),\n        });\n        // will be removed after eventer set up\n        if (this._progressBar) {\n          this._progressBar.update(this._loaded, this._totalLoaded, 'load', url);\n        }\n      };\n\n      request.onloadend = event => {\n        // emit 'fetch-end' event\n        this.emit('fetch-end', {\n          file: url,\n          time: new Date(),\n        });\n        // just use onload when success and onerror when failure, etc onabort\n        // reject(request.statusText);\n      };\n\n      if (requests instanceof Map) {\n        requests.set(url, request);\n      }\n\n      request.send();\n    });\n  }\n\n  /**\n   * parse the data loaded\n   * SHOULD BE implementd by detail loader.\n   * @param {object} response - loaded data.\n   * @return {promise} promise.\n   */\n  parse(response) {\n    return new Promise((resolve, reject) => {\n      resolve(response);\n    });\n  }\n\n  /**\n   * default load sequence group promise.\n   * @param {array} url - resource url.\n   * @param {Map} requests - used for cancellation.\n   * @return {promise} promise.\n   */\n  loadSequenceGroup(url, requests) {\n    const fetchSequence = [];\n\n    url.forEach(file => {\n      fetchSequence.push(this.fetch(file, requests));\n    });\n\n    return Promise.all(fetchSequence)\n      .then(rawdata => {\n        return this.parse(rawdata);\n      })\n      .then(data => {\n        this._data.push(data);\n        return data;\n      })\n      .catch(function(error) {\n        if (error === 'Aborted') {\n          return;\n        }\n        window.console.log('oops... something went wrong...');\n        window.console.log(error);\n      });\n  }\n\n  /**\n   * default load sequence promise.\n   * @param {string} url - resource url.\n   * @param {Map} requests - used for cancellation.\n   * @return {promise} promise.\n   */\n  loadSequence(url, requests) {\n    return this.fetch(url, requests)\n      .then(rawdata => {\n        return this.parse(rawdata);\n      })\n      .then(data => {\n        this._data.push(data);\n        return data;\n      })\n      .catch(function(error) {\n        if (error === 'Aborted') {\n          return;\n        }\n        window.console.log('oops... something went wrong...');\n        window.console.log(error);\n      });\n  }\n\n  /**\n   * load the data by url(urls)\n   * @param {string|array} url - resource url.\n   * @param {Map} requests - used for cancellation.\n   * @return {promise} promise\n   */\n  load(url, requests) {\n    // if we load a single file, convert it to an array\n    if (!Array.isArray(url)) {\n      url = [url];\n    }\n\n    if (this._progressBar) {\n      this._progressBar.totalFiles = url.length;\n      this._progressBar.requests = requests;\n    }\n\n    // emit 'load-start' event\n    this.emit('load-start', {\n      files: url,\n      time: new Date(),\n    });\n\n    const loadSequences = [];\n    url.forEach(file => {\n      if (!Array.isArray(file)) {\n        loadSequences.push(this.loadSequence(file, requests));\n      } else {\n        loadSequences.push(this.loadSequenceGroup(file, requests));\n      }\n    });\n    return Promise.all(loadSequences);\n  }\n\n  /**\n   * Set data\n   * @param {array} data\n   */\n  set data(data) {\n    this._data = data;\n  }\n\n  /**\n   * Get data\n   * @return {array} data loaded\n   */\n  get data() {\n    return this._data;\n  }\n}\n","/** * Imports ***/\nconst PAKO = require('pako');\n\nimport LoadersBase from './loaders.base';\nimport CoreUtils from '../core/core.utils';\nimport ModelsSeries from '../models/models.series';\nimport ModelsStack from '../models/models.stack';\nimport ModelsFrame from '../models/models.frame';\nimport ParsersNifti from '../parsers/parsers.nifti';\n\n/**\n *\n * It is typically used to load a DICOM image. Use loading manager for\n * advanced usage, such as multiple files handling.\n *\n * Demo: {@link https://fnndsc.github.io/vjs#loader_dicom}\n *\n * @module loaders/volumes\n * @example\n * var files = ['/data/dcm/fruit'];\n *\n * // Instantiate a dicom loader\n * var lDicomoader = new dicom();\n *\n * // load a resource\n * loader.load(\n *   // resource URL\n *   files[0],\n *   // Function when resource is loaded\n *   function(object) {\n *     //scene.add( object );\n *     console.log(object);\n *   }\n * );\n */\nexport default class LoadersVolumes extends LoadersBase {\n  /**\n   * Parse response.\n   * response is formated as:\n   *    {\n   *      url: 'resource url',\n   *      buffer: xmlresponse,\n   *    }\n   * @param {object} response - response\n   * @return {promise} promise\n   */\n  parse(response) {\n    // emit 'parse-start' event\n    this.emit('parse-start', {\n      file: response.url,\n      time: new Date(),\n    });\n\n    // give a chance to the UI to update because\n    // after the rendering will be blocked with intensive JS\n    // will be removed after eventer set up\n    if (this._progressBar) {\n      this._progressBar.update(0, 100, 'parse', response.url);\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(\n          new Promise((resolve, reject) => {\n            let data = response;\n\n            if (!Array.isArray(data)) {\n              data = [data];\n            }\n\n            data.forEach(dataset => {\n              this._preprocess(dataset);\n            });\n\n            if (data.length === 1) {\n              data = data[0];\n            } else {\n              // if raw/mhd pair\n              let mhdFile = data.filter(this._filterByExtension.bind(null, 'MHD'));\n              let rawFile = data.filter(this._filterByExtension.bind(null, 'RAW'));\n              if (data.length === 2 && mhdFile.length === 1 && rawFile.length === 1) {\n                data.url = mhdFile[0].url;\n                data.extension = mhdFile[0].extension;\n                data.mhdBuffer = mhdFile[0].buffer;\n                data.rawBuffer = rawFile[0].buffer;\n              }\n            }\n\n            let Parser = this._parser(data.extension);\n            if (!Parser) {\n              // emit 'parse-error' event\n              this.emit('parse-error', {\n                file: response.url,\n                time: new Date(),\n                error: data.filename + 'can not be parsed.',\n              });\n              reject(data.filename + ' can not be parsed.');\n            }\n\n            // check extension\n            let volumeParser = null;\n            try {\n              volumeParser = new Parser(data, 0);\n            } catch (e) {\n              console.warn(e);\n              // emit 'parse-error' event\n              this.emit('parse-error', {\n                file: response.url,\n                time: new Date(),\n                error: e,\n              });\n              reject(e);\n            }\n\n            // create a series\n            let series = new ModelsSeries();\n            series.rawHeader = volumeParser.rawHeader();\n            // global information\n            series.seriesInstanceUID = volumeParser.seriesInstanceUID();\n            series.transferSyntaxUID = volumeParser.transferSyntaxUID();\n            series.seriesDate = volumeParser.seriesDate();\n            series.seriesDescription = volumeParser.seriesDescription();\n            series.studyDate = volumeParser.studyDate();\n            series.studyDescription = volumeParser.studyDescription();\n            series.numberOfFrames = volumeParser.numberOfFrames();\n            if (!series.numberOfFrames) {\n              series.numberOfFrames = 1;\n            }\n            series.numberOfChannels = volumeParser.numberOfChannels();\n            series.modality = volumeParser.modality();\n            // if it is a segmentation, attach extra information\n            if (series.modality === 'SEG') {\n              // colors\n              // labels\n              // etc.\n              series.segmentationType = volumeParser.segmentationType();\n              series.segmentationSegments = volumeParser.segmentationSegments();\n            }\n            // patient information\n            series.patientID = volumeParser.patientID();\n            series.patientName = volumeParser.patientName();\n            series.patientAge = volumeParser.patientAge();\n            series.patientBirthdate = volumeParser.patientBirthdate();\n            series.patientSex = volumeParser.patientSex();\n\n            // just create 1 dummy stack for now\n            let stack = new ModelsStack();\n            stack.numberOfChannels = volumeParser.numberOfChannels();\n            stack.pixelRepresentation = volumeParser.pixelRepresentation();\n            stack.pixelType = volumeParser.pixelType();\n            stack.invert = volumeParser.invert();\n            stack.spacingBetweenSlices = volumeParser.spacingBetweenSlices();\n            stack.modality = series.modality;\n            // if it is a segmentation, attach extra information\n            if (stack.modality === 'SEG') {\n              // colors\n              // labels\n              // etc.\n              stack.segmentationType = series.segmentationType;\n              stack.segmentationSegments = series.segmentationSegments;\n            }\n            series.stack.push(stack);\n            // recursive call for each frame\n            // better than for loop to be able\n            // to update dom with \"progress\" callback\n            setTimeout(\n              this.parseFrameClosure(series, stack, response.url, 0, volumeParser, resolve, reject),\n              0\n            );\n          })\n        );\n      }, 10);\n    });\n  }\n\n  parseFrameClosure(series, stack, url, i, dataParser, resolve, reject) {\n    return () => {\n      this.parseFrame(series, stack, url, i, dataParser, resolve, reject);\n    };\n  }\n\n  /**\n   * recursive parse frame\n   * @param {ModelsSeries} series - data series\n   * @param {ModelsStack} stack - data stack\n   * @param {string} url - resource url\n   * @param {number} i - frame index\n   * @param {parser} dataParser - selected parser\n   * @param {promise.resolve} resolve - promise resolve args\n   * @param {promise.reject} reject - promise reject args\n   */\n  parseFrame(series, stack, url, i, dataParser, resolve, reject) {\n    let frame = new ModelsFrame();\n    frame.sopInstanceUID = dataParser.sopInstanceUID(i);\n    frame.url = url;\n    frame.index = i;\n    frame.invert = stack.invert;\n    frame.frameTime = dataParser.frameTime(i);\n    frame.ultrasoundRegions = dataParser.ultrasoundRegions(i);\n    frame.rows = dataParser.rows(i);\n    frame.columns = dataParser.columns(i);\n    frame.numberOfChannels = stack.numberOfChannels;\n    frame.pixelPaddingValue = dataParser.pixelPaddingValue(i);\n    frame.pixelRepresentation = stack.pixelRepresentation;\n    frame.pixelType = stack.pixelType;\n    frame.pixelData = dataParser.extractPixelData(i);\n    frame.pixelSpacing = dataParser.pixelSpacing(i);\n    frame.spacingBetweenSlices = dataParser.spacingBetweenSlices(i);\n    frame.sliceThickness = dataParser.sliceThickness(i);\n    frame.imageOrientation = dataParser.imageOrientation(i);\n    frame.rightHanded = dataParser.rightHanded();\n    stack.rightHanded = frame.rightHanded;\n    if (frame.imageOrientation === null) {\n      frame.imageOrientation = [1, 0, 0, 0, 1, 0];\n    }\n    frame.imagePosition = dataParser.imagePosition(i);\n    /*\n    null ImagePosition should not be handle here\n    if (frame.imagePosition === null) {\n      frame.imagePosition = [0, 0, i];\n    }*/\n    frame.dimensionIndexValues = dataParser.dimensionIndexValues(i);\n    frame.bitsAllocated = dataParser.bitsAllocated(i);\n    frame.instanceNumber = dataParser.instanceNumber(i);\n    frame.windowCenter = dataParser.windowCenter(i);\n    frame.windowWidth = dataParser.windowWidth(i);\n    frame.rescaleSlope = dataParser.rescaleSlope(i);\n    frame.rescaleIntercept = dataParser.rescaleIntercept(i);\n    // should pass frame index for consistency...\n    frame.minMax = dataParser.minMaxPixelData(frame.pixelData);\n\n    // if series.mo\n    if (series.modality === 'SEG') {\n      frame.referencedSegmentNumber = dataParser.referencedSegmentNumber(i);\n    }\n\n    stack.frame.push(frame);\n\n    // update status\n    this._parsed = i + 1;\n    this._totalParsed = series.numberOfFrames;\n\n    // will be removed after eventer set up\n    if (this._progressBar) {\n      this._progressBar.update(this._parsed, this._totalParsed, 'parse', url);\n    }\n\n    // emit 'parsing' event\n    this.emit('parsing', {\n      file: url,\n      total: this._totalParsed,\n      parsed: this._parsed,\n      time: new Date(),\n    });\n\n    if (this._parsed === this._totalParsed) {\n      // emit 'parse-success' event\n      this.emit('parse-success', {\n        file: url,\n        total: this._totalParsed,\n        parsed: this._parsed,\n        time: new Date(),\n      });\n\n      resolve(series);\n    } else {\n      setTimeout(\n        this.parseFrameClosure(series, stack, url, this._parsed, dataParser, resolve, reject),\n        0\n      );\n    }\n  }\n\n  /**\n   * Return parser given an extension\n   * @param {string} extension - extension\n   * @return {parser} selected parser\n   */\n  _parser(extension) {\n    let Parser = null;\n\n    // switch (extension.toUpperCase()) {\n    //   case 'NII':\n    //   case 'NII_':\n        Parser = ParsersNifti;\n    // break;\n    //   // case 'DCM':\n    //   // case 'DIC':\n    //   // case 'DICOM':\n    //   // case 'IMA':\n    //   // case '':\n    //   //   Parser = ParsersDicom;\n    //   //   break;\n    //   // case 'MHD':\n    //   //   Parser = ParsersMhd;\n    //   //   break;\n    //   // case 'NRRD':\n    //   //   Parser = ParsersNrrd;\n    //   //   break;\n    //   case 'MGH':\n    //   case 'MGZ':\n        // Parser = ParsersMgh;\n    //     break;\n    //   default:\n    //     console.warn('unsupported extension: ' + extension);\n    //     return false;\n    // }\n    return Parser;\n  }\n\n  /**\n   * Pre-process data to be parsed (find data type and de-compress)\n   * @param {*} data\n   */\n  _preprocess(data) {\n    const parsedUrl = CoreUtils.parseUrl(data.url);\n    // update data\n    data.filename = parsedUrl.filename;\n    data.extension = parsedUrl.extension;\n    data.pathname = parsedUrl.pathname;\n    data.query = parsedUrl.query;\n\n    // unzip if extension is '.gz'\n    if (data.extension === 'gz') {\n      data.gzcompressed = true;\n      data.extension = data.filename\n        .split('.gz')\n        .shift()\n        .split('.')\n        .pop();\n    } else if (data.extension === 'mgz') {\n      data.gzcompressed = true;\n      data.extension = 'mgh';\n    } else if (data.extension === 'zraw') {\n      data.gzcompressed = true;\n      data.extension = 'raw';\n    } else {\n      data.gzcompressed = false;\n    }\n\n    if (data.gzcompressed) {\n      let decompressedData = PAKO.inflate(data.buffer);\n      data.buffer = decompressedData.buffer;\n    }\n  }\n\n  /**\n   * Filter data by extension\n   * @param {*} extension\n   * @param {*} item\n   * @returns Boolean\n   */\n  _filterByExtension(extension, item) {\n    if (item.extension.toUpperCase() === extension.toUpperCase()) {\n      return true;\n    }\n    return false;\n  }\n}\n","/**\n * Base object.\n *\n * @module models/base\n */\n\nexport default class ModelsBase {\n  constructor() {\n    this._id = -1;\n  }\n  /**\n   * Merge 2 arrays of models.\n   * Merge the target array into the reference array.\n   *\n   * @param {Array.<Models>} referenceArray - Array to be merge against\n   * @param {Array.<Models>} targetArray - Array to be merged against reference.\n   *\n   * @return {boolean} True if merge was sucessful. False if something went wrong.\n   */\n  mergeModels(referenceArray, targetArray) {\n    if (!(this._validateModelArray(referenceArray) && this._validateModelArray(targetArray))) {\n      window.console.log('invalid inputs provided.');\n      return false;\n    }\n\n    for (let i = 0, targetLength = targetArray.length; i < targetLength; i++) {\n      // test targetArray against existing targetArray\n      for (let j = 0, refLength = referenceArray.length; j < refLength; j++) {\n        if (referenceArray[j].merge(targetArray[i])) {\n          // merged successfully\n          break;\n        } else if (j === referenceArray.length - 1) {\n          // last merge was not successful\n          // this is a new targetArray\n          referenceArray.push(targetArray[i]);\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Merge model against current model.\n   */\n  merge(model) {\n    // make sure model is valid\n    if (!this.validate(model)) {\n      return false;\n    }\n\n    // they can be merged if they match\n    if (this._id === model._id) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Validate a model.\n   *\n   * @return {boolean} True if model is valid. False if not.\n   */\n  validate(model) {\n    if (!(model && model !== null && typeof model.merge === 'function')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Validate array of models.\n   *\n   * @param {Array.<Models>} modelArray - Array containing models.\n   *\n   * @return {boolean} True if array is valid. False if not.\n   */\n  _validateModelArray(modelArray) {\n    if (!(modelArray !== null && Array === modelArray.constructor)) {\n      window.console.log('invalid model array provided.');\n      return false;\n    }\n\n    for (let i = 0; i < modelArray.length; i++) {\n      if (\n        !(\n          modelArray[i] &&\n          modelArray[i] !== null &&\n          typeof modelArray[i].validate === 'function' &&\n          modelArray[i].validate(modelArray[i])\n        )\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","/** * Imports ***/\nimport ModelsBase from '../models/models.base';\n\nimport { Vector3 } from 'three/src/math/Vector3';\n\n/**\n * Frame object.\n *\n * @module models/frame\n */\nexport default class ModelsFrame extends ModelsBase {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n\n    this._sopInstanceUID = null;\n    this._url = null;\n    this._stackID = -1;\n    this._invert = false;\n    this._frameTime = null;\n    this._ultrasoundRegions = [];\n    this._rows = 0;\n    this._columns = 0;\n    this._dimensionIndexValues = [];\n    this._imagePosition = null;\n    this._imageOrientation = null;\n    this._rightHanded = true;\n    this._sliceThickness = 1;\n    this._spacingBetweenSlices = null;\n    this._pixelPaddingValue = null;\n    this._pixelRepresentation = 0;\n    this._pixelType = 0;\n    this._pixelSpacing = null;\n    this._pixelAspectRatio = null;\n    this._pixelData = null;\n\n    this._instanceNumber = null;\n    this._windowCenter = null;\n    this._windowWidth = null;\n    this._rescaleSlope = null;\n    this._rescaleIntercept = null;\n\n    this._bitsAllocated = 8;\n    this._numberOfChannels = 1;\n\n    this._minMax = null;\n    this._dist = null;\n\n    this._index = -1;\n\n    this._referencedSegmentNumber = -1;\n  }\n\n  /**\n   * Validate the frame.\n   *\n   * @param {*} model\n   *\n   * @return {*}\n   */\n  validate(model) {\n    if (\n      !(\n        super.validate(model) &&\n        typeof model.cosines === 'function' &&\n        typeof model.spacingXY === 'function' &&\n        model.hasOwnProperty('_sopInstanceUID') &&\n        model.hasOwnProperty('_dimensionIndexValues') &&\n        model.hasOwnProperty('_imageOrientation') &&\n        model.hasOwnProperty('_imagePosition')\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Merge current frame with provided frame.\n   *\n   * Frames can be merged (i.e. are identical) if following are equals:\n   *  - dimensionIndexValues\n   *  - imageOrientation\n   *  - imagePosition\n   *  - instanceNumber\n   *  - sopInstanceUID\n   *\n   * @param {*} frame\n   *\n   * @return {boolean} True if frames could be merge. False if not.\n   */\n  merge(frame) {\n    if (!this.validate(frame)) {\n      return false;\n    }\n\n    if (\n      this._compareArrays(this._dimensionIndexValues, frame.dimensionIndexValues) &&\n      this._compareArrays(this._imageOrientation, frame.imageOrientation) &&\n      this._compareArrays(this._imagePosition, frame.imagePosition) &&\n      this._instanceNumber === frame.instanceNumber &&\n      this._sopInstanceUID === frame.sopInstanceUID\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Generate X, y and Z cosines from image orientation\n   * Returns default orientation if _imageOrientation was invalid.\n   *\n   * @returns {array} Array[3] containing cosinesX, Y and Z.\n   */\n  cosines() {\n    let cosines = [new Vector3(1, 0, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1)];\n\n    if (this._imageOrientation && this._imageOrientation.length === 6) {\n      let xCos = new Vector3(\n        this._imageOrientation[0],\n        this._imageOrientation[1],\n        this._imageOrientation[2]\n      );\n      let yCos = new Vector3(\n        this._imageOrientation[3],\n        this._imageOrientation[4],\n        this._imageOrientation[5]\n      );\n\n      if (xCos.length() > 0 && yCos.length() > 0) {\n        cosines[0] = xCos;\n        cosines[1] = yCos;\n        cosines[2] = new Vector3(0, 0, 0).crossVectors(cosines[0], cosines[1]).normalize();\n      }\n    } else {\n      window.console.log('No valid image orientation for frame');\n      window.console.log(this);\n      window.console.log('Returning default orientation.');\n    }\n\n    if (!this._rightHanded) {\n      cosines[2].negate();\n    }\n\n    return cosines;\n  }\n\n  /**\n   * Get x/y spacing of a frame.\n   *\n   * @return {*}\n   */\n  spacingXY() {\n    let spacingXY = [1.0, 1.0];\n\n    if (this.pixelSpacing) {\n      spacingXY[0] = this.pixelSpacing[0];\n\n      spacingXY[1] = this.pixelSpacing[1];\n    } else if (this.pixelAspectRatio) {\n      spacingXY[0] = 1.0;\n      spacingXY[1] = (1.0 * this.pixelAspectRatio[1]) / this.pixelAspectRatio[0];\n    }\n\n    return spacingXY;\n  }\n\n  /**\n   * Get data value\n   *\n   * @param {*} column\n   * @param {*} row\n   * @return {*}\n   */\n  getPixelData(column, row) {\n    if (column >= 0 && column < this._columns && row >= 0 && row < this._rows) {\n      return this.pixelData[column + this._columns * row];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Set data value\n   *\n   * @param {*} column\n   * @param {*} row\n   * @param {*} value\n   * @return {*}\n   */\n  setPixelData(column, row, value) {\n    this.pixelData[column + this._columns * row] = value;\n  }\n\n  /**\n   * Get frame preview as data:URL\n   *\n   * @return {String}\n   */\n  getImageDataUrl() {\n    const canvas = document.createElement('canvas');\n    canvas.width = this._columns;\n    canvas.height = this._rows;\n\n    const context = canvas.getContext('2d');\n\n    const imageData = context.createImageData(canvas.width, canvas.height);\n\n    imageData.data.set(this._frameToCanvas());\n    context.putImageData(imageData, 0, 0);\n\n    return canvas.toDataURL();\n  }\n\n  /**\n   * Convert frame.pixelData to canvas.context.imageData.data\n   *\n   * @return {Uint8Array}\n   */\n  _frameToCanvas() {\n    const dimension = this._columns * this._rows;\n\n    const params = {\n      invert: this._invert,\n      min: this._minMax[0],\n      padding: this._pixelPaddingValue,\n    };\n    let data = new Uint8Array(dimension * 4);\n\n    if (params.padding !== null) {\n      // recalculation of min ignoring pixelPaddingValue\n      params.min = this._minMax[1];\n      for (let index = 0, numPixels = this._pixelData.length; index < numPixels; index++) {\n        if (this._pixelData[index] !== params.padding) {\n          params.min = Math.min(params.min, this._pixelData[index]);\n        }\n      }\n    }\n\n    if (this._windowWidth && this._windowCenter !== null) {\n      // applying windowCenter and windowWidth\n      const intercept = this._rescaleIntercept || 0;\n\n      const slope = this._rescaleSlope || 1;\n\n      params.min = Math.max(\n        (this._windowCenter - this._windowWidth / 2 - intercept) / slope,\n        params.min\n      );\n      params.max = Math.min(\n        (this._windowCenter + this._windowWidth / 2 - intercept) / slope,\n        this._minMax[1]\n      );\n    } else {\n      params.max = this._minMax[1];\n    }\n\n    params.range = params.max - params.min || 255; // if max is 0 convert it to: 255 - black, 1 - white\n\n    if (this._numberOfChannels === 1) {\n      for (let i = 0; i < dimension; i++) {\n        const normalized = this._pixelTo8Bit(this._pixelData[i], params);\n        data[4 * i] = normalized;\n        data[4 * i + 1] = normalized;\n        data[4 * i + 2] = normalized;\n        data[4 * i + 3] = 255; // alpha channel (fully opaque)\n      }\n    } else if (this._numberOfChannels === 3) {\n      for (let i = 0; i < dimension; i++) {\n        data[4 * i] = this._pixelTo8Bit(this._pixelData[3 * i], params);\n        data[4 * i + 1] = this._pixelTo8Bit(this._pixelData[3 * i + 1], params);\n        data[4 * i + 2] = this._pixelTo8Bit(this._pixelData[3 * i + 2], params);\n        data[4 * i + 3] = 255; // alpha channel (fully opaque)\n      }\n    }\n\n    return data;\n  }\n\n  /**\n   * Convert pixel value to 8 bit (canvas.context.imageData.data: maximum 8 bit per each of RGBA value)\n   *\n   * @param {Number} value  Pixel value\n   * @param {Object} params {invert, min, mix, padding, range}\n   *\n   * @return {Number}\n   */\n  _pixelTo8Bit(value, params) {\n    // values equal to pixelPaddingValue are outside of the image and should be ignored\n    let packedValue = value <= params.min || value === params.padding ? 0 : 255;\n\n    if (value > params.min && value < params.max) {\n      packedValue = Math.round(((value - params.min) * 255) / params.range);\n    }\n\n    return Number.isNaN(packedValue) ? 0 : params.invert ? 255 - packedValue : packedValue;\n  }\n\n  /**\n   * Compare 2 arrays.\n   *\n   * 2 null arrays return true.\n   * Do no perform strict type checking.\n   *\n   * @param {*} reference\n   * @param {*} target\n   *\n   * @return {boolean} True if arrays are identicals. False if not.\n   */\n  _compareArrays(reference, target) {\n    // could both be null\n    if (reference === target) {\n      return true;\n    }\n\n    // if not null....\n    if (reference && target && reference.join() === target.join()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get frameTime() {\n    return this._frameTime;\n  }\n\n  set frameTime(frameTime) {\n    this._frameTime = frameTime;\n  }\n\n  get ultrasoundRegions() {\n    return this._ultrasoundRegions;\n  }\n\n  set ultrasoundRegions(ultrasoundRegions) {\n    this._ultrasoundRegions = ultrasoundRegions;\n  }\n\n  get rows() {\n    return this._rows;\n  }\n\n  set rows(rows) {\n    this._rows = rows;\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  set columns(columns) {\n    this._columns = columns;\n  }\n\n  get spacingBetweenSlices() {\n    return this._spacingBetweenSlices;\n  }\n\n  set spacingBetweenSlices(spacingBetweenSlices) {\n    this._spacingBetweenSlices = spacingBetweenSlices;\n  }\n\n  get sliceThickness() {\n    return this._sliceThickness;\n  }\n\n  set sliceThickness(sliceThickness) {\n    this._sliceThickness = sliceThickness;\n  }\n\n  get imagePosition() {\n    return this._imagePosition;\n  }\n\n  set imagePosition(imagePosition) {\n    this._imagePosition = imagePosition;\n  }\n\n  get imageOrientation() {\n    return this._imageOrientation;\n  }\n\n  set imageOrientation(imageOrientation) {\n    this._imageOrientation = imageOrientation;\n  }\n\n  get windowWidth() {\n    return this._windowWidth;\n  }\n\n  set windowWidth(windowWidth) {\n    this._windowWidth = windowWidth;\n  }\n\n  get windowCenter() {\n    return this._windowCenter;\n  }\n\n  set windowCenter(windowCenter) {\n    this._windowCenter = windowCenter;\n  }\n\n  get rescaleSlope() {\n    return this._rescaleSlope;\n  }\n\n  set rescaleSlope(rescaleSlope) {\n    this._rescaleSlope = rescaleSlope;\n  }\n\n  get rescaleIntercept() {\n    return this._rescaleIntercept;\n  }\n\n  set rescaleIntercept(rescaleIntercept) {\n    this._rescaleIntercept = rescaleIntercept;\n  }\n\n  get bitsAllocated() {\n    return this._bitsAllocated;\n  }\n\n  set bitsAllocated(bitsAllocated) {\n    this._bitsAllocated = bitsAllocated;\n  }\n\n  get dist() {\n    return this._dist;\n  }\n\n  set dist(dist) {\n    this._dist = dist;\n  }\n\n  get pixelSpacing() {\n    return this._pixelSpacing;\n  }\n\n  set pixelSpacing(pixelSpacing) {\n    this._pixelSpacing = pixelSpacing;\n  }\n\n  get pixelAspectRatio() {\n    return this._pixelAspectRatio;\n  }\n\n  set pixelAspectRatio(pixelAspectRatio) {\n    this._pixelAspectRatio = pixelAspectRatio;\n  }\n\n  get minMax() {\n    return this._minMax;\n  }\n\n  set minMax(minMax) {\n    this._minMax = minMax;\n  }\n\n  get dimensionIndexValues() {\n    return this._dimensionIndexValues;\n  }\n\n  set dimensionIndexValues(dimensionIndexValues) {\n    this._dimensionIndexValues = dimensionIndexValues;\n  }\n\n  get instanceNumber() {\n    return this._instanceNumber;\n  }\n\n  set instanceNumber(instanceNumber) {\n    this._instanceNumber = instanceNumber;\n  }\n\n  get pixelData() {\n    return this._pixelData;\n  }\n\n  set pixelData(pixelData) {\n    this._pixelData = pixelData;\n  }\n\n  set sopInstanceUID(sopInstanceUID) {\n    this._sopInstanceUID = sopInstanceUID;\n  }\n\n  get sopInstanceUID() {\n    return this._sopInstanceUID;\n  }\n\n  get pixelPaddingValue() {\n    return this._pixelPaddingValue;\n  }\n\n  set pixelPaddingValue(pixelPaddingValue) {\n    this._pixelPaddingValue = pixelPaddingValue;\n  }\n\n  get pixelRepresentation() {\n    return this._pixelRepresentation;\n  }\n\n  set pixelRepresentation(pixelRepresentation) {\n    this._pixelRepresentation = pixelRepresentation;\n  }\n\n  get pixelType() {\n    return this._pixelType;\n  }\n\n  set pixelType(pixelType) {\n    this._pixelType = pixelType;\n  }\n\n  get url() {\n    return this._url;\n  }\n\n  set url(url) {\n    this._url = url;\n  }\n\n  get referencedSegmentNumber() {\n    return this._referencedSegmentNumber;\n  }\n\n  set referencedSegmentNumber(referencedSegmentNumber) {\n    this._referencedSegmentNumber = referencedSegmentNumber;\n  }\n\n  get rightHanded() {\n    return this._rightHanded;\n  }\n\n  set rightHanded(rightHanded) {\n    this._rightHanded = rightHanded;\n  }\n\n  get index() {\n    return this._index;\n  }\n\n  set index(index) {\n    this._index = index;\n  }\n\n  get invert() {\n    return this._invert;\n  }\n\n  set invert(invert) {\n    this._invert = invert;\n  }\n\n  get numberOfChannels() {\n    return this._numberOfChannels;\n  }\n\n  set numberOfChannels(numberOfChannels) {\n    this._numberOfChannels = numberOfChannels;\n  }\n}\n","/**\n * @module models/voxel\n */\n\nexport default class ModelsVoxel {\n  constructor() {\n    this._id = -1;\n    this._worldCoordinates = null;\n    this._dataCoordinates = null;\n    this._screenCoordinates = null;\n    this._value = null;\n  }\n\n  set worldCoordinates(worldCoordinates) {\n    this._worldCoordinates = worldCoordinates;\n  }\n\n  get worldCoordinates() {\n    return this._worldCoordinates;\n  }\n\n  set dataCoordinates(dataCoordinates) {\n    this._dataCoordinates = dataCoordinates;\n  }\n\n  get dataCoordinates() {\n    return this._dataCoordinates;\n  }\n\n  set screenCoordinates(screenCoordinates) {\n    this._screenCoordinates = screenCoordinates;\n  }\n\n  get screenCoordinates() {\n    return this._screenCoordinates;\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set id(id) {\n    this._id = id;\n  }\n\n  get id() {\n    return this._id;\n  }\n}\n","/** * Imports ***/\nimport ModelsBase from '../models/models.base';\n\n/**\n * Series object.\n *\n * @module models/series\n */\nexport default class ModelsSeries extends ModelsBase {\n  /**\n   * Models series constructor\n   */\n  constructor() {\n    super();\n\n    this._concatenationUID = -1;\n    this._seriesInstanceUID = -1;\n    this._transferSyntaxUID = '';\n    this._seriesNumber = -1;\n    this._seriesDescription = '';\n    this._seriesDate = '';\n    this._studyDescription = '';\n    this._studyDate = '';\n    this._accessionNumber = -1;\n    this._modality = 'Modality not set';\n    this._dimensionIndexSequence = [];\n    // it is used in the loader in case a dicom/nifti contains multiple frames\n    // should be updated after merge or renamed\n    this._numberOfFrames = 0;\n    this._numberOfChannels = 1;\n\n    // patient information\n    this._rawHeader = null;\n    this._patientID = '';\n    this._patientName = '';\n    this._patientAge = '';\n    this._patientBirthdate = '';\n    this._patientSex = '';\n\n    // SEGMENTATION STUFF\n    this._segmentationType = null;\n    this._segmentationSegments = [];\n\n    // STACK\n    this._stack = [];\n  }\n\n  /**\n   * Validate a series.\n   *\n   * Requirements:\n   *   - mergeSeries method\n   *   - _seriesInstanceUID\n   *   - _numberOfFrames\n   *   - _numberOfChannels\n   *   _ _stack\n   *\n   * @param {ModelsSeries} model - Model to be validated as series.\n   *\n   * @return {boolean} True if series is valid. False if not.\n   *\n   * @override\n   */\n  validate(model) {\n    if (\n      !(\n        super.validate(model) &&\n        typeof model.mergeSeries === 'function' &&\n        model.hasOwnProperty('_seriesInstanceUID') &&\n        model.hasOwnProperty('_numberOfFrames') &&\n        model.hasOwnProperty('_numberOfChannels') &&\n        model.hasOwnProperty('_stack') &&\n        typeof model._stack !== 'undefined' &&\n        Array === model._stack.constructor\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Merge current series with provided series.\n   * 2 series can ONLY be merge if they have the same SeriesInstanceUID.\n   *\n   * Also merges the stacks inside a series.\n   *\n   * @param {ModelsSeries} series - Series to be merged against current series.\n   *\n   * @return {boolean} True if series could be merge. False if not.\n   *\n   * @override\n   */\n  merge(series) {\n    if (!this.validate(series)) {\n      return false;\n    }\n\n    if (this._seriesInstanceUID === series.seriesInstanceUID) {\n      // may merge incorrectly if loader will return more than one stacks per series\n      if (series.stack[0]) {\n        if (this._stack[0]._numberOfFrames === 0) {\n          this._stack[0].computeNumberOfFrames();\n        }\n        this._stack[0].computeCosines();\n        if (series.stack[0]._numberOfFrames === 0) {\n          series.stack[0].computeNumberOfFrames();\n        }\n        series.stack[0].computeCosines();\n      }\n      return this.mergeModels(this._stack, series.stack);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Merge current series with provided array of series.\n   * 2 series can ONLY be merge if they have the same SeriesInstanceUID.\n   *\n   * Also merges the stacks inside a series.\n   *\n   * @param {Array.<ModelsSeries>} target - Series to be merged against current series.\n   *\n   * @return {Array.<ModelsSeries>} Array of series properly merged.\n   */\n  mergeSeries(target) {\n    let seriesContainer = [this];\n    this.mergeModels(seriesContainer, target);\n    return seriesContainer;\n  }\n\n  /**\n   * Series instance UID setter\n   *\n   * @param {*} seriesInstanceUID\n   */\n  set seriesInstanceUID(seriesInstanceUID) {\n    this._seriesInstanceUID = seriesInstanceUID;\n  }\n\n  /**\n   * Series instace UID getter\n   *\n   * @return {*}\n   */\n  get seriesInstanceUID() {\n    return this._seriesInstanceUID;\n  }\n\n  /**\n   * Transfer syntax UID setter\n   *\n   * @param {*} transferSyntaxUID\n   */\n  set transferSyntaxUID(transferSyntaxUID) {\n    this._transferSyntaxUID = transferSyntaxUID;\n  }\n\n  /**\n   * Transfer syntax UID getter\n   *\n   * @return {*}\n   */\n  get transferSyntaxUID() {\n    return this._transferSyntaxUID;\n  }\n\n  /**\n   * Transfer syntax UID getter\n   *\n   * @return {*}\n   */\n  get transferSyntaxUIDLabel() {\n    switch (this._transferSyntaxUID) {\n      case '1.2.840.10008.1.2.4.90':\n        return 'JPEG 2000 Lossless';\n      case '1.2.840.10008.1.2.4.91':\n        return 'JPEG 2000 Lossy';\n      case '1.2.840.10008.1.2.4.57':\n        return 'JPEG Lossless, Nonhierarchical (Processes 14)';\n      case '1.2.840.10008.1.2.4.70':\n        return 'JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])';\n      case '1.2.840.10008.1.2.4.50':\n        return 'JPEG Baseline lossy process 1 (8 bit)';\n      case '1.2.840.10008.1.2.4.51':\n        return 'JPEG Baseline lossy process 2 & 4 (12 bit)';\n      case '1.2.840.10008.1.2':\n        return 'Implicit VR Little Endian';\n      case '1.2.840.10008.1.2.1':\n        return 'Explicit VR Little Endian';\n      case '1.2.840.10008.1.2.2':\n        return 'Explicit VR Big Endian';\n      default:\n        return `Unknown transfersyntax: ${this._transferSyntaxUID}`;\n    }\n  }\n\n  /**\n   * Study date setter\n   *\n   * @param {*} studyDate\n   */\n  set studyDate(studyDate) {\n    this._studyDate = studyDate;\n  }\n\n  /**\n   * Study date getter\n   *\n   * @return {*}\n   */\n  get studyDate() {\n    return this._studyDate;\n  }\n\n  /**\n   * Study descripition setter\n   *\n   * @param {*} studyDescription\n   */\n  set studyDescription(studyDescription) {\n    this._studyDescription = studyDescription;\n  }\n\n  /**\n   * Study description getter\n   *\n   * @return {*}\n   */\n  get studyDescription() {\n    return this._studyDescription;\n  }\n\n  /**\n   * Series date setter\n   *\n   * @param {*} seriesDate\n   */\n  set seriesDate(seriesDate) {\n    this._seriesDate = seriesDate;\n  }\n\n  /**\n   * Series date getter\n   *\n   * @return {*}\n   */\n  get seriesDate() {\n    return this._seriesDate;\n  }\n\n  /**\n   * Series descripition setter\n   *\n   * @param {*} seriesDescription\n   */\n  set seriesDescription(seriesDescription) {\n    this._seriesDescription = seriesDescription;\n  }\n\n  /**\n   * Series description getter\n   *\n   * @return {*}\n   */\n  get seriesDescription() {\n    return this._seriesDescription;\n  }\n\n    /**\n   * Raw Header setter\n   *\n   * @param {*} rawHeader\n   */\n  set rawHeader(rawHeader) {\n    this._rawHeader = rawHeader;\n  }\n\n  /**\n   * Raw Header getter\n   *\n   * @return {*}\n   */\n  get rawHeader() {\n    return this._rawHeader;\n  }\n\n  /**\n   * Patient ID setter\n   *\n   * @param {*} patientID\n   */\n  set patientID(patientID) {\n    this._patientID = patientID;\n  }\n\n  /**\n   * Patient ID getter\n   *\n   * @return {*}\n   */\n  get patientID() {\n    return this._patientID;\n  }\n\n  /**\n   * Patient name setter\n   *\n   * @param {*} patientName\n   */\n  set patientName(patientName) {\n    this._patientName = patientName;\n  }\n\n  /**\n   * Patient name getter\n   *\n   * @return {*}\n   */\n  get patientName() {\n    return this._patientName;\n  }\n\n  /**\n   * Patient age setter\n   *\n   * @param {*} patientAge\n   */\n  set patientAge(patientAge) {\n    this._patientAge = patientAge;\n  }\n\n  /**\n   * Patient age getter\n   *\n   * @return {*}\n   */\n  get patientAge() {\n    return this._patientAge;\n  }\n\n  /**\n   * Patient birthdate setter\n   *\n   * @param {*} patientBirthdate\n   */\n  set patientBirthdate(patientBirthdate) {\n    this._patientBirthdate = patientBirthdate;\n  }\n\n  /**\n   * Patient birthdate getter\n   *\n   * @return {*}\n   */\n  get patientBirthdate() {\n    return this._patientBirthdate;\n  }\n\n  /**\n   * Patient sex setter\n   *\n   * @param {*} patientSex\n   */\n  set patientSex(patientSex) {\n    this._patientSex = patientSex;\n  }\n\n  /**\n   * Patient sex getter\n   *\n   * @return {*}\n   */\n  get patientSex() {\n    return this._patientSex;\n  }\n\n  /**\n   * Number of frames setter\n   *\n   * @param {*} numberOfFrames\n   */\n  set numberOfFrames(numberOfFrames) {\n    this._numberOfFrames = numberOfFrames;\n  }\n\n  /**\n   * Number of frames getter\n   *\n   * @return {*}\n   */\n  get numberOfFrames() {\n    return this._numberOfFrames;\n  }\n\n  /**\n   * Number of channels setter\n   *\n   * @param {*} numberOfChannels\n   */\n  set numberOfChannels(numberOfChannels) {\n    this._numberOfChannels = numberOfChannels;\n  }\n\n  /**\n   * Number of channels getter\n   *\n   * @return {*}\n   */\n  get numberOfChannels() {\n    return this._numberOfChannels;\n  }\n\n  /**\n   * Stack setter\n   *\n   * @param {*} stack\n   */\n  set stack(stack) {\n    this._stack = stack;\n  }\n\n  /**\n   * Stack getter\n   *\n   * @return {*}\n   */\n  get stack() {\n    return this._stack;\n  }\n\n  /**\n   * Modality setter\n   *\n   * @param {*} modality\n   */\n  set modality(modality) {\n    this._modality = modality;\n  }\n\n  /**\n   * Modality getter\n   *\n   * @return {*}\n   */\n  get modality() {\n    return this._modality;\n  }\n\n  /**\n   * Segmentation type setter\n   *\n   * @param {*} segmentationType\n   */\n  set segmentationType(segmentationType) {\n    this._segmentationType = segmentationType;\n  }\n\n  /**\n   * Segmentation type getter\n   *\n   * @return {*}\n   */\n  get segmentationType() {\n    return this._segmentationType;\n  }\n\n  /**\n   * Segmentation segments setter\n   *\n   * @param {*} segmentationSegments\n   */\n  set segmentationSegments(segmentationSegments) {\n    this._segmentationSegments = segmentationSegments;\n  }\n\n  /**\n   * Segmentation segments getter\n   *\n   * @return {*}\n   */\n  get segmentationSegments() {\n    return this._segmentationSegments;\n  }\n}\n","export const REVISION = '126';\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nexport const CullFaceNone = 0;\nexport const CullFaceBack = 1;\nexport const CullFaceFront = 2;\nexport const CullFaceFrontBack = 3;\nexport const BasicShadowMap = 0;\nexport const PCFShadowMap = 1;\nexport const PCFSoftShadowMap = 2;\nexport const VSMShadowMap = 3;\nexport const FrontSide = 0;\nexport const BackSide = 1;\nexport const DoubleSide = 2;\nexport const FlatShading = 1;\nexport const SmoothShading = 2;\nexport const NoBlending = 0;\nexport const NormalBlending = 1;\nexport const AdditiveBlending = 2;\nexport const SubtractiveBlending = 3;\nexport const MultiplyBlending = 4;\nexport const CustomBlending = 5;\nexport const AddEquation = 100;\nexport const SubtractEquation = 101;\nexport const ReverseSubtractEquation = 102;\nexport const MinEquation = 103;\nexport const MaxEquation = 104;\nexport const ZeroFactor = 200;\nexport const OneFactor = 201;\nexport const SrcColorFactor = 202;\nexport const OneMinusSrcColorFactor = 203;\nexport const SrcAlphaFactor = 204;\nexport const OneMinusSrcAlphaFactor = 205;\nexport const DstAlphaFactor = 206;\nexport const OneMinusDstAlphaFactor = 207;\nexport const DstColorFactor = 208;\nexport const OneMinusDstColorFactor = 209;\nexport const SrcAlphaSaturateFactor = 210;\nexport const NeverDepth = 0;\nexport const AlwaysDepth = 1;\nexport const LessDepth = 2;\nexport const LessEqualDepth = 3;\nexport const EqualDepth = 4;\nexport const GreaterEqualDepth = 5;\nexport const GreaterDepth = 6;\nexport const NotEqualDepth = 7;\nexport const MultiplyOperation = 0;\nexport const MixOperation = 1;\nexport const AddOperation = 2;\nexport const NoToneMapping = 0;\nexport const LinearToneMapping = 1;\nexport const ReinhardToneMapping = 2;\nexport const CineonToneMapping = 3;\nexport const ACESFilmicToneMapping = 4;\nexport const CustomToneMapping = 5;\n\nexport const UVMapping = 300;\nexport const CubeReflectionMapping = 301;\nexport const CubeRefractionMapping = 302;\nexport const EquirectangularReflectionMapping = 303;\nexport const EquirectangularRefractionMapping = 304;\nexport const CubeUVReflectionMapping = 306;\nexport const CubeUVRefractionMapping = 307;\nexport const RepeatWrapping = 1000;\nexport const ClampToEdgeWrapping = 1001;\nexport const MirroredRepeatWrapping = 1002;\nexport const NearestFilter = 1003;\nexport const NearestMipmapNearestFilter = 1004;\nexport const NearestMipMapNearestFilter = 1004;\nexport const NearestMipmapLinearFilter = 1005;\nexport const NearestMipMapLinearFilter = 1005;\nexport const LinearFilter = 1006;\nexport const LinearMipmapNearestFilter = 1007;\nexport const LinearMipMapNearestFilter = 1007;\nexport const LinearMipmapLinearFilter = 1008;\nexport const LinearMipMapLinearFilter = 1008;\nexport const UnsignedByteType = 1009;\nexport const ByteType = 1010;\nexport const ShortType = 1011;\nexport const UnsignedShortType = 1012;\nexport const IntType = 1013;\nexport const UnsignedIntType = 1014;\nexport const FloatType = 1015;\nexport const HalfFloatType = 1016;\nexport const UnsignedShort4444Type = 1017;\nexport const UnsignedShort5551Type = 1018;\nexport const UnsignedShort565Type = 1019;\nexport const UnsignedInt248Type = 1020;\nexport const AlphaFormat = 1021;\nexport const RGBFormat = 1022;\nexport const RGBAFormat = 1023;\nexport const LuminanceFormat = 1024;\nexport const LuminanceAlphaFormat = 1025;\nexport const RGBEFormat = RGBAFormat;\nexport const DepthFormat = 1026;\nexport const DepthStencilFormat = 1027;\nexport const RedFormat = 1028;\nexport const RedIntegerFormat = 1029;\nexport const RGFormat = 1030;\nexport const RGIntegerFormat = 1031;\nexport const RGBIntegerFormat = 1032;\nexport const RGBAIntegerFormat = 1033;\n\nexport const RGB_S3TC_DXT1_Format = 33776;\nexport const RGBA_S3TC_DXT1_Format = 33777;\nexport const RGBA_S3TC_DXT3_Format = 33778;\nexport const RGBA_S3TC_DXT5_Format = 33779;\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\nexport const RGB_ETC1_Format = 36196;\nexport const RGB_ETC2_Format = 37492;\nexport const RGBA_ETC2_EAC_Format = 37496;\nexport const RGBA_ASTC_4x4_Format = 37808;\nexport const RGBA_ASTC_5x4_Format = 37809;\nexport const RGBA_ASTC_5x5_Format = 37810;\nexport const RGBA_ASTC_6x5_Format = 37811;\nexport const RGBA_ASTC_6x6_Format = 37812;\nexport const RGBA_ASTC_8x5_Format = 37813;\nexport const RGBA_ASTC_8x6_Format = 37814;\nexport const RGBA_ASTC_8x8_Format = 37815;\nexport const RGBA_ASTC_10x5_Format = 37816;\nexport const RGBA_ASTC_10x6_Format = 37817;\nexport const RGBA_ASTC_10x8_Format = 37818;\nexport const RGBA_ASTC_10x10_Format = 37819;\nexport const RGBA_ASTC_12x10_Format = 37820;\nexport const RGBA_ASTC_12x12_Format = 37821;\nexport const RGBA_BPTC_Format = 36492;\nexport const SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nexport const SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nexport const SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nexport const SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nexport const SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nexport const SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nexport const SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nexport const SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nexport const SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nexport const SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nexport const SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nexport const SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nexport const SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nexport const SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nexport const LoopOnce = 2200;\nexport const LoopRepeat = 2201;\nexport const LoopPingPong = 2202;\nexport const InterpolateDiscrete = 2300;\nexport const InterpolateLinear = 2301;\nexport const InterpolateSmooth = 2302;\nexport const ZeroCurvatureEnding = 2400;\nexport const ZeroSlopeEnding = 2401;\nexport const WrapAroundEnding = 2402;\nexport const NormalAnimationBlendMode = 2500;\nexport const AdditiveAnimationBlendMode = 2501;\nexport const TrianglesDrawMode = 0;\nexport const TriangleStripDrawMode = 1;\nexport const TriangleFanDrawMode = 2;\nexport const LinearEncoding = 3000;\nexport const sRGBEncoding = 3001;\nexport const GammaEncoding = 3007;\nexport const RGBEEncoding = 3002;\nexport const LogLuvEncoding = 3003;\nexport const RGBM7Encoding = 3004;\nexport const RGBM16Encoding = 3005;\nexport const RGBDEncoding = 3006;\nexport const BasicDepthPacking = 3200;\nexport const RGBADepthPacking = 3201;\nexport const TangentSpaceNormalMap = 0;\nexport const ObjectSpaceNormalMap = 1;\n\nexport const ZeroStencilOp = 0;\nexport const KeepStencilOp = 7680;\nexport const ReplaceStencilOp = 7681;\nexport const IncrementStencilOp = 7682;\nexport const DecrementStencilOp = 7683;\nexport const IncrementWrapStencilOp = 34055;\nexport const DecrementWrapStencilOp = 34056;\nexport const InvertStencilOp = 5386;\n\nexport const NeverStencilFunc = 512;\nexport const LessStencilFunc = 513;\nexport const EqualStencilFunc = 514;\nexport const LessEqualStencilFunc = 515;\nexport const GreaterStencilFunc = 516;\nexport const NotEqualStencilFunc = 517;\nexport const GreaterEqualStencilFunc = 518;\nexport const AlwaysStencilFunc = 519;\n\nexport const StaticDrawUsage = 35044;\nexport const DynamicDrawUsage = 35048;\nexport const StreamDrawUsage = 35040;\nexport const StaticReadUsage = 35045;\nexport const DynamicReadUsage = 35049;\nexport const StreamReadUsage = 35041;\nexport const StaticCopyUsage = 35046;\nexport const DynamicCopyUsage = 35050;\nexport const StreamCopyUsage = 35042;\n\nexport const GLSL1 = '100';\nexport const GLSL3 = '300 es';\n","/** * Imports ***/\nimport { Matrix4 } from 'three/src/math/Matrix4';\nimport { Vector3 } from 'three/src/math/Vector3';\nimport { RGBFormat, RGBAFormat } from 'three/src/constants';\n\nimport CoreColors from '../core/core.colors';\nimport CoreUtils from '../core/core.utils';\nimport ModelsBase from '../models/models.base';\n\nconst binaryString = require('math-float32-to-binary-string');\n\n/**\n * Stack object.\n *\n * @module models/stack\n */\nexport default class ModelsStack extends ModelsBase {\n  /**\n   * Models Stack constructor\n   */\n  constructor() {\n    super();\n\n    this._uid = null;\n    this._stackID = -1;\n\n    this._frame = [];\n    this._numberOfFrames = 0;\n\n    this._rows = 0;\n    this._columns = 0;\n    this._numberOfChannels = 1;\n    this._bitsAllocated = 8;\n    this._pixelType = 0;\n    this._pixelRepresentation = 0;\n\n    this._textureSize = 4096;\n    this._textureUnits = 7;\n\n    this._rawData = [];\n\n    this._windowCenter = 0;\n    this._windowWidth = 0;\n\n    this._rescaleSlope = 1;\n    this._rescaleIntercept = 0;\n\n    this._minMax = [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY];\n\n    // TRANSFORMATION MATRICES\n    this._regMatrix = new Matrix4();\n\n    this._ijk2LPS = null;\n    this._lps2IJK = null;\n\n    this._aabb2LPS = null;\n    this._lps2AABB = null;\n\n    //\n    // IJK dimensions\n    this._dimensionsIJK = null;\n    this._halfDimensionsIJK = null;\n    this._spacing = new Vector3(1, 1, 1);\n    this._spacingBetweenSlices = 0;\n    this._sliceThickness = 0;\n    this._origin = null;\n    this._rightHanded = true;\n    this._xCosine = new Vector3(1, 0, 0);\n    this._yCosine = new Vector3(0, 1, 0);\n    this._zCosine = new Vector3(0, 0, 1);\n\n    // convenience vars\n    this._prepared = false;\n    this._packed = false;\n    this._packedPerPixel = 1;\n\n    //\n    this._modality = 'Modality not set';\n\n    // SEGMENTATION STUFF\n    this._segmentationType = null;\n    this._segmentationSegments = [];\n    this._segmentationDefaultColor = [63, 174, 128];\n    this._frameSegment = [];\n    this._segmentationLUT = [];\n    this._segmentationLUTO = [];\n\n    // photometricInterpretation Monochrome1 VS Monochrome2\n    this._invert = false;\n  }\n\n  /**\n   * Prepare segmentation stack.\n   * A segmentation stack can hold x frames that are at the same location\n   * but segmentation specific information:\n   * - Frame X contains voxels for segmentation A.\n   * - Frame Y contains voxels for segmenttation B.\n   * - Frame X and Y are at the same location.\n   *\n   * We currently merge overlaping frames into 1.\n   */\n  prepareSegmentation() {\n    // store frame and do special pre-processing\n    this._frameSegment = this._frame;\n    let mergedFrames = [];\n\n    // order frames\n    this.computeCosines();\n    this._frame.map(this._computeDistanceArrayMap.bind(null, this._zCosine));\n    this._frame.sort(this._sortDistanceArraySort);\n\n    // merge frames\n    let prevIndex = -1;\n    for (let i = 0; i < this._frame.length; i++) {\n      if (!mergedFrames[prevIndex] || mergedFrames[prevIndex]._dist != this._frame[i]._dist) {\n        mergedFrames.push(this._frame[i]);\n        prevIndex++;\n\n        // Scale frame\n        // by default each frame contains binary data about a segmentation.\n        // we scale it by the referenceSegmentNumber in order to have a\n        // segmentation specific voxel value rather than 0 or 1.\n        // That allows us to merge frames later on.\n        // If we merge frames without scaling, then we can not differenciate\n        // voxels from segmentation A or B as the value is 0 or 1 in both cases.\n        for (let k = 0; k < mergedFrames[prevIndex]._rows * mergedFrames[prevIndex]._columns; k++) {\n          mergedFrames[prevIndex]._pixelData[k] *= this._frame[i]._referencedSegmentNumber;\n        }\n      } else {\n        // frame already exsits at this location.\n        // merge data from this segmentation into existing frame\n        for (let k = 0; k < mergedFrames[prevIndex]._rows * mergedFrames[prevIndex]._columns; k++) {\n          mergedFrames[prevIndex]._pixelData[k] +=\n            this._frame[i].pixelData[k] * this._frame[i]._referencedSegmentNumber;\n        }\n      }\n\n      mergedFrames[prevIndex].minMax = CoreUtils.minMax(mergedFrames[prevIndex]._pixelData);\n    }\n\n    // get information about segments\n    let dict = {};\n    let max = 0;\n    for (let i = 0; i < this._segmentationSegments.length; i++) {\n      max = Math.max(max, parseInt(this._segmentationSegments[i].segmentNumber, 10));\n\n      let color = this._segmentationSegments[i].recommendedDisplayCIELab;\n      if (color === null) {\n        dict[this._segmentationSegments[i].segmentNumber] = this._segmentationDefaultColor;\n      } else {\n        dict[this._segmentationSegments[i].segmentNumber] = CoreColors.cielab2RGB(...color);\n      }\n    }\n\n    // generate LUTs\n    for (let i = 0; i <= max; i++) {\n      let index = i / max;\n      let opacity = i ? 1 : 0;\n      let rgb = [0, 0, 0];\n      if (dict.hasOwnProperty(i.toString())) {\n        rgb = dict[i.toString()];\n      }\n\n      rgb[0] /= 255;\n      rgb[1] /= 255;\n      rgb[2] /= 255;\n\n      this._segmentationLUT.push([index, ...rgb]);\n      this._segmentationLUTO.push([index, opacity]);\n    }\n\n    this._frame = mergedFrames;\n  }\n\n  /**\n   * Compute cosines\n   * Order frames\n   * computeSpacing\n   * sanityCheck\n   * init some vars\n   * compute min/max\n   * compute transformation matrices\n   *\n   * @return {*}\n   */\n  prepare() {\n    // if segmentation, merge some frames...\n    if (this._modality === 'SEG') {\n      this.prepareSegmentation();\n    }\n\n    this.computeNumberOfFrames();\n\n    // pass parameters from frame to stack\n    this._rows = this._frame[0].rows;\n    this._columns = this._frame[0].columns;\n    this._dimensionsIJK = new Vector3(this._columns, this._rows, this._numberOfFrames);\n    this._halfDimensionsIJK = new Vector3(\n      this._dimensionsIJK.x / 2,\n      this._dimensionsIJK.y / 2,\n      this._dimensionsIJK.z / 2\n    );\n    this._spacingBetweenSlices = this._frame[0].spacingBetweenSlices;\n    this._sliceThickness = this._frame[0].sliceThickness;\n\n    // compute direction cosines\n    this.computeCosines();\n\n    // order the frames\n    if (this._numberOfFrames > 1) {\n      this.orderFrames();\n    }\n\n    // compute/guess spacing\n    this.computeSpacing();\n    // set extra vars if nulls\n    // do it now because before we would think image position/orientation\n    // are defined and we would use it to compute spacing.\n    if (!this._frame[0].imagePosition) {\n      this._frame[0].imagePosition = [0, 0, 0];\n    }\n    if (!this._frame[0].imageOrientation) {\n      this._frame[0].imageOrientation = [1, 0, 0, 0, 1, 0];\n    }\n\n    this._origin = this._arrayToVector3(this._frame[0].imagePosition, 0);\n\n    // compute transforms\n    this.computeIJK2LPS();\n\n    this.computeLPS2AABB();\n    // this.packEchos();\n\n    const middleFrameIndex = Math.floor(this._frame.length / 2);\n    const middleFrame = this._frame[middleFrameIndex];\n\n    this._rescaleSlope = middleFrame.rescaleSlope || 1;\n    this._rescaleIntercept = middleFrame.rescaleIntercept || 0;\n\n    // rescale/slope min max\n    this.computeMinMaxIntensities();\n    this._minMax[0] = CoreUtils.rescaleSlopeIntercept(\n      this._minMax[0],\n      this._rescaleSlope,\n      this._rescaleIntercept\n    );\n    this._minMax[1] = CoreUtils.rescaleSlopeIntercept(\n      this._minMax[1],\n      this._rescaleSlope,\n      this._rescaleIntercept\n    );\n\n    this._windowWidth = middleFrame.windowWidth || this._minMax[1] - this._minMax[0];\n\n    this._windowCenter = middleFrame.windowCenter || this._minMax[0] + this._windowWidth / 2;\n\n    this._bitsAllocated = middleFrame.bitsAllocated;\n    this._prepared = true;\n  }\n\n  packEchos() {\n    // 4 echo times...\n    let echos = 4;\n    let packedEcho = [];\n    for (let i = 0; i < this._frame.length; i += echos) {\n      let frame = this._frame[i];\n      for (let k = 0; k < this._rows * this._columns; k++) {\n        for (let j = 1; j < echos; j++) {\n          frame.pixelData[k] += this._frame[i + j].pixelData[k];\n        }\n        frame.pixelData[k] /= echos;\n      }\n      packedEcho.push(frame);\n    }\n    this._frame = packedEcho;\n    this._numberOfFrames = this._frame.length;\n    this._dimensionsIJK = new Vector3(this._columns, this._rows, this._numberOfFrames);\n    this._halfDimensionsIJK = new Vector3(\n      this._dimensionsIJK.x / 2,\n      this._dimensionsIJK.y / 2,\n      this._dimensionsIJK.z / 2\n    );\n  }\n\n  computeNumberOfFrames() {\n    // we need at least 1 frame\n    if (this._frame && this._frame.length > 0) {\n      this._numberOfFrames = this._frame.length;\n    } else {\n      window.console.warn(\"_frame doesn't contain anything....\");\n      window.console.warn(this._frame);\n      return false;\n    }\n  }\n\n  // frame.cosines - returns array [x, y, z]\n  computeCosines() {\n    if (this._frame && this._frame[0]) {\n      let cosines = this._frame[0].cosines();\n      this._xCosine = cosines[0];\n      this._yCosine = cosines[1];\n      this._zCosine = cosines[2];\n    }\n  }\n\n  orderFrames() {\n    // order the frames based on theirs dimension indices\n    // first index is the most important.\n    // 1,1,1,1 will be first\n    // 1,1,2,1 will be next\n    // 1,1,2,3 will be next\n    // 1,1,3,1 will be next\n    if (this._frame[0].dimensionIndexValues) {\n      this._frame.sort(this._orderFrameOnDimensionIndicesArraySort);\n\n      // else order with image position and orientation\n    } else if (\n      this._frame[0].imagePosition &&\n      this._frame[0].imageOrientation &&\n      this._frame[1] &&\n      this._frame[1].imagePosition &&\n      this._frame[1].imageOrientation &&\n      this._frame[0].imagePosition.join() !== this._frame[1].imagePosition.join()\n    ) {\n      // compute and sort by dist in this series\n      this._frame.map(this._computeDistanceArrayMap.bind(null, this._zCosine));\n      this._frame.sort(this._sortDistanceArraySort);\n    } else if (\n      this._frame[0].instanceNumber !== null &&\n      this._frame[1] &&\n      this._frame[1].instanceNumber !== null &&\n      this._frame[0].instanceNumber !== this._frame[1].instanceNumber\n    ) {\n      this._frame.sort(this._sortInstanceNumberArraySort);\n    } else if (\n      this._frame[0].sopInstanceUID &&\n      this._frame[1] &&\n      this._frame[1].sopInstanceUID &&\n      this._frame[0].sopInstanceUID !== this._frame[1].sopInstanceUID\n    ) {\n      this._frame.sort(this._sortSopInstanceUIDArraySort);\n    } else if (!this._frame[0].imagePosition) {\n      // cancel warning if you have set null imagePosition on purpose (?)\n    } else {\n      window.console.warn('do not know how to order the frames...');\n    }\n  }\n\n  computeSpacing() {\n    this.xySpacing();\n    this.zSpacing();\n  }\n\n  /**\n   * Compute stack z spacing\n   */\n  zSpacing() {\n    if (this._numberOfFrames > 1) {\n      if (this._frame[0].pixelSpacing && this._frame[0].pixelSpacing[2]) {\n        this._spacing.z = this._frame[0].pixelSpacing[2];\n      } else {\n        // compute and sort by dist in this series\n        this._frame.map(this._computeDistanceArrayMap.bind(null, this._zCosine));\n\n        // if distances are different, re-sort array\n        if (this._frame[1].dist !== this._frame[0].dist) {\n          this._frame.sort(this._sortDistanceArraySort);\n          this._spacing.z = this._frame[1].dist - this._frame[0].dist;\n        } else if (this._spacingBetweenSlices) {\n          this._spacing.z = this._spacingBetweenSlices;\n        } else if (this._frame[0].sliceThickness) {\n          this._spacing.z = this._frame[0].sliceThickness;\n        }\n      }\n    }\n\n    // Spacing\n    // can not be 0 if not matrix can not be inverted.\n    if (this._spacing.z === 0) {\n      this._spacing.z = 1;\n    }\n  }\n\n  /**\n   *  FRAME CAN DO IT\n   */\n  xySpacing() {\n    if (this._frame && this._frame[0]) {\n      let spacingXY = this._frame[0].spacingXY();\n      this._spacing.x = spacingXY[0];\n      this._spacing.y = spacingXY[1];\n    }\n  }\n\n  /**\n   * Find min and max intensities among all frames.\n   */\n  computeMinMaxIntensities() {\n    // what about colors!!!!?\n    // we ignore values if NaNs\n    // https://github.com/FNNDSC/ami/issues/185\n    for (let i = 0; i < this._frame.length; i++) {\n      // get min/max\n      let min = this._frame[i].minMax[0];\n      if (!Number.isNaN(min)) {\n        this._minMax[0] = Math.min(this._minMax[0], min);\n      }\n\n      let max = this._frame[i].minMax[1];\n      if (!Number.isNaN(max)) {\n        this._minMax[1] = Math.max(this._minMax[1], max);\n      }\n    }\n  }\n\n  /**\n   * Compute IJK to LPS and invert transforms\n   */\n  computeIJK2LPS() {\n    // ijk to lps\n    this._ijk2LPS = CoreUtils.ijk2LPS(\n      this._xCosine,\n      this._yCosine,\n      this._zCosine,\n      this._spacing,\n      this._origin,\n      this._regMatrix\n    );\n\n    // lps 2 ijk\n    this._lps2IJK = new Matrix4();\n    this._lps2IJK.getInverse(this._ijk2LPS);\n  }\n\n  /**\n   * Compute LPS to AABB and invert transforms\n   */\n  computeLPS2AABB() {\n    this._aabb2LPS = CoreUtils.aabb2LPS(this._xCosine, this._yCosine, this._zCosine, this._origin);\n\n    this._lps2AABB = new Matrix4();\n    this._lps2AABB.getInverse(this._aabb2LPS);\n  }\n\n  /**\n   * Merge stacks\n   *\n   * @param {*} stack\n   *\n   * @return {*}\n   */\n  merge(stack) {\n    // also make sure x/y/z cosines are a match!\n    if (\n      this._stackID === stack.stackID &&\n      this._numberOfFrames === 1 &&\n      stack._numberOfFrames === 1 &&\n      this._frame[0].columns === stack.frame[0].columns &&\n      this._frame[0].rows === stack.frame[0].rows &&\n      this._xCosine.equals(stack.xCosine) &&\n      this._yCosine.equals(stack.yCosine) &&\n      this._zCosine.equals(stack.zCosine)\n    ) {\n      return this.mergeModels(this._frame, stack.frame);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Pack current stack pixel data into 8 bits array buffers\n   */\n  pack() {\n    // Get total number of voxels\n    const nbVoxels = this._dimensionsIJK.x * this._dimensionsIJK.y * this._dimensionsIJK.z;\n\n    // Packing style\n    if ((this._bitsAllocated === 8 && this._numberOfChannels === 1) || this._bitsAllocated === 1) {\n      this._packedPerPixel = 4;\n    }\n\n    if (this._bitsAllocated === 16 && this._numberOfChannels === 1) {\n      this._packedPerPixel = 2;\n    }\n\n    // Loop through all the textures we need\n    const textureDimension = this._textureSize * this._textureSize;\n    let requiredTextures = Math.ceil(nbVoxels / (textureDimension * this._packedPerPixel));\n    let voxelIndexStart = 0;\n    let voxelIndexStop = this._packedPerPixel * textureDimension;\n    if (voxelIndexStop > nbVoxels) {\n      voxelIndexStop = nbVoxels;\n    }\n\n    if (this._textureUnits < requiredTextures) {\n      console.warn('Insufficient number of supported textures. Some frames will not be packed.');\n      requiredTextures = this._textureUnits;\n    }\n\n    for (let ii = 0; ii < requiredTextures; ii++) {\n      const packed = this._packTo8Bits(\n        this._numberOfChannels,\n        this._frame,\n        this._textureSize,\n        voxelIndexStart,\n        voxelIndexStop\n      );\n      this._textureType = packed.textureType;\n      this._rawData.push(packed.data);\n\n      voxelIndexStart += this._packedPerPixel * textureDimension;\n      voxelIndexStop += this._packedPerPixel * textureDimension;\n      if (voxelIndexStop > nbVoxels) {\n        voxelIndexStop = nbVoxels;\n      }\n    }\n\n    this._packed = true;\n  }\n\n  /**\n   * Pack frame data to 32 bits texture\n   * @param {*} channels\n   * @param {*} frame\n   * @param {*} textureSize\n   * @param {*} startVoxel\n   * @param {*} stopVoxel\n   */\n  _packTo8Bits(channels, frame, textureSize, startVoxel, stopVoxel) {\n    const packed = {\n      textureType: null,\n      data: null,\n    };\n\n    const bitsAllocated = frame[0].bitsAllocated;\n    const pixelType = frame[0].pixelType;\n\n    // transform signed to unsigned for convenience\n    let offset = 0;\n    if (this._minMax[0] < 0) {\n      offset -= this._minMax[0];\n    }\n\n    let packIndex = 0;\n    let frameIndex = 0;\n    let inFrameIndex = 0;\n    // frame should return it!\n    const frameDimension = frame[0].rows * frame[0].columns;\n\n    if ((bitsAllocated === 8 && channels === 1) || bitsAllocated === 1) {\n      let data = new Uint8Array(textureSize * textureSize * 4);\n      let coordinate = 0;\n      let channelOffset = 0;\n      for (let i = startVoxel; i < stopVoxel; i++) {\n        frameIndex = ~~(i / frameDimension);\n        inFrameIndex = i % frameDimension;\n\n        let raw = frame[frameIndex].pixelData[inFrameIndex] + offset;\n        if (!Number.isNaN(raw)) {\n          data[4 * coordinate + channelOffset] = raw;\n        }\n\n        packIndex++;\n        coordinate = Math.floor(packIndex / 4);\n        channelOffset = packIndex % 4;\n      }\n      packed.textureType = RGBAFormat;\n      packed.data = data;\n    } else if (bitsAllocated === 16 && channels === 1) {\n      let data = new Uint8Array(textureSize * textureSize * 4);\n      let coordinate = 0;\n      let channelOffset = 0;\n\n      for (let i = startVoxel; i < stopVoxel; i++) {\n        frameIndex = ~~(i / frameDimension);\n        inFrameIndex = i % frameDimension;\n\n        let raw = frame[frameIndex].pixelData[inFrameIndex] + offset;\n        if (!Number.isNaN(raw)) {\n          data[4 * coordinate + 2 * channelOffset] = raw & 0x00ff;\n          data[4 * coordinate + 2 * channelOffset + 1] = (raw >>> 8) & 0x00ff;\n        }\n\n        packIndex++;\n        coordinate = Math.floor(packIndex / 2);\n        channelOffset = packIndex % 2;\n      }\n\n      packed.textureType = RGBAFormat;\n      packed.data = data;\n    } else if (bitsAllocated === 32 && channels === 1 && pixelType === 0) {\n      let data = new Uint8Array(textureSize * textureSize * 4);\n      for (let i = startVoxel; i < stopVoxel; i++) {\n        frameIndex = ~~(i / frameDimension);\n        inFrameIndex = i % frameDimension;\n\n        let raw = frame[frameIndex].pixelData[inFrameIndex] + offset;\n        if (!Number.isNaN(raw)) {\n          data[4 * packIndex] = raw & 0x000000ff;\n          data[4 * packIndex + 1] = (raw >>> 8) & 0x000000ff;\n          data[4 * packIndex + 2] = (raw >>> 16) & 0x000000ff;\n          data[4 * packIndex + 3] = (raw >>> 24) & 0x000000ff;\n        }\n\n        packIndex++;\n      }\n      packed.textureType = RGBAFormat;\n      packed.data = data;\n    } else if (bitsAllocated === 32 && channels === 1 && pixelType === 1) {\n      let data = new Uint8Array(textureSize * textureSize * 4);\n\n      for (let i = startVoxel; i < stopVoxel; i++) {\n        frameIndex = ~~(i / frameDimension);\n        inFrameIndex = i % frameDimension;\n\n        let raw = frame[frameIndex].pixelData[inFrameIndex] + offset;\n        if (!Number.isNaN(raw)) {\n          let bitString = binaryString(raw);\n          let bitStringArray = bitString.match(/.{1,8}/g);\n\n          data[4 * packIndex] = parseInt(bitStringArray[0], 2);\n          data[4 * packIndex + 1] = parseInt(bitStringArray[1], 2);\n          data[4 * packIndex + 2] = parseInt(bitStringArray[2], 2);\n          data[4 * packIndex + 3] = parseInt(bitStringArray[3], 2);\n        }\n\n        packIndex++;\n      }\n\n      packed.textureType = RGBAFormat;\n      packed.data = data;\n    } else if (bitsAllocated === 8 && channels === 3) {\n      let data = new Uint8Array(textureSize * textureSize * 3);\n\n      for (let i = startVoxel; i < stopVoxel; i++) {\n        frameIndex = ~~(i / frameDimension);\n        inFrameIndex = i % frameDimension;\n\n        data[3 * packIndex] = frame[frameIndex].pixelData[3 * inFrameIndex];\n        data[3 * packIndex + 1] = frame[frameIndex].pixelData[3 * inFrameIndex + 1];\n        data[3 * packIndex + 2] = frame[frameIndex].pixelData[3 * inFrameIndex + 2];\n        packIndex++;\n      }\n\n      packed.textureType = RGBFormat;\n      packed.data = data;\n    }\n\n    return packed;\n  }\n\n  /**\n   * Get the stack world center\n   *\n   *@return {*}\n   */\n  worldCenter() {\n    let center = this._halfDimensionsIJK\n      .clone()\n      .addScalar(-0.5)\n      .applyMatrix4(this._ijk2LPS);\n    return center;\n  }\n\n  /**\n   * Get the stack world bounding box\n   * @return {*}\n   */\n  worldBoundingBox() {\n    let bbox = [\n      Number.POSITIVE_INFINITY,\n      Number.NEGATIVE_INFINITY,\n      Number.POSITIVE_INFINITY,\n      Number.NEGATIVE_INFINITY,\n      Number.POSITIVE_INFINITY,\n      Number.NEGATIVE_INFINITY,\n    ];\n\n    const dims = this._dimensionsIJK;\n\n    for (let i = 0; i <= dims.x; i += dims.x) {\n      for (let j = 0; j <= dims.y; j += dims.y) {\n        for (let k = 0; k <= dims.z; k += dims.z) {\n          let world = new Vector3(i, j, k).applyMatrix4(this._ijk2LPS);\n          bbox = [\n            Math.min(bbox[0], world.x),\n            Math.max(bbox[1], world.x), // x min/max\n            Math.min(bbox[2], world.y),\n            Math.max(bbox[3], world.y),\n            Math.min(bbox[4], world.z),\n            Math.max(bbox[5], world.z),\n          ];\n        }\n      }\n    }\n\n    return bbox;\n  }\n\n  /**\n   * Get AABB size in LPS space.\n   *\n   * @return {*}\n   */\n  AABBox() {\n    let world0 = new Vector3()\n      .addScalar(-0.5)\n      .applyMatrix4(this._ijk2LPS)\n      .applyMatrix4(this._lps2AABB);\n\n    let world7 = this._dimensionsIJK\n      .clone()\n      .addScalar(-0.5)\n      .applyMatrix4(this._ijk2LPS)\n      .applyMatrix4(this._lps2AABB);\n\n    let minBBox = new Vector3(\n      Math.abs(world0.x - world7.x),\n      Math.abs(world0.y - world7.y),\n      Math.abs(world0.z - world7.z)\n    );\n\n    return minBBox;\n  }\n\n  /**\n   * Get AABB center in LPS space\n   */\n  centerAABBox() {\n    let centerBBox = this.worldCenter();\n    centerBBox.applyMatrix4(this._lps2AABB);\n    return centerBBox;\n  }\n\n  static indexInDimensions(index, dimensions) {\n    if (\n      index.x >= 0 &&\n      index.y >= 0 &&\n      index.z >= 0 &&\n      index.x < dimensions.x &&\n      index.y < dimensions.y &&\n      index.z < dimensions.z\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  _arrayToVector3(array, index) {\n    return new Vector3(array[index], array[index + 1], array[index + 2]);\n  }\n\n  _orderFrameOnDimensionIndicesArraySort(a, b) {\n    if (\n      'dimensionIndexValues' in a &&\n      Object.prototype.toString.call(a.dimensionIndexValues) === '[object Array]' &&\n      'dimensionIndexValues' in b &&\n      Object.prototype.toString.call(b.dimensionIndexValues) === '[object Array]'\n    ) {\n      for (let i = 0; i < a.dimensionIndexValues.length; i++) {\n        if (parseInt(a.dimensionIndexValues[i], 10) > parseInt(b.dimensionIndexValues[i], 10)) {\n          return 1;\n        }\n        if (parseInt(a.dimensionIndexValues[i], 10) < parseInt(b.dimensionIndexValues[i], 10)) {\n          return -1;\n        }\n      }\n    } else {\n      window.console.warn(\"One of the frames doesn't have a dimensionIndexValues array.\");\n      window.console.warn(a);\n      window.console.warn(b);\n    }\n\n    return 0;\n  }\n\n  _computeDistanceArrayMap(normal, frame) {\n    if (frame.imagePosition) {\n      frame.dist =\n        frame.imagePosition[0] * normal.x +\n        frame.imagePosition[1] * normal.y +\n        frame.imagePosition[2] * normal.z;\n    }\n    return frame;\n  }\n\n  _sortDistanceArraySort(a, b) {\n    return a.dist - b.dist;\n  }\n  _sortInstanceNumberArraySort(a, b) {\n    return a.instanceNumber - b.instanceNumber;\n  }\n  _sortSopInstanceUIDArraySort(a, b) {\n    return a.sopInstanceUID - b.sopInstanceUID;\n  }\n\n  set numberOfChannels(numberOfChannels) {\n    this._numberOfChannels = numberOfChannels;\n  }\n\n  get numberOfChannels() {\n    return this._numberOfChannels;\n  }\n\n  set frame(frame) {\n    this._frame = frame;\n  }\n\n  get frame() {\n    return this._frame;\n  }\n\n  set prepared(prepared) {\n    this._prepared = prepared;\n  }\n\n  get prepared() {\n    return this._prepared;\n  }\n\n  set packed(packed) {\n    this._packed = packed;\n  }\n\n  get packed() {\n    return this._packed;\n  }\n\n  set packedPerPixel(packedPerPixel) {\n    this._packedPerPixel = packedPerPixel;\n  }\n\n  get packedPerPixel() {\n    return this._packedPerPixel;\n  }\n\n  set dimensionsIJK(dimensionsIJK) {\n    this._dimensionsIJK = dimensionsIJK;\n  }\n\n  get dimensionsIJK() {\n    return this._dimensionsIJK;\n  }\n\n  set halfDimensionsIJK(halfDimensionsIJK) {\n    this._halfDimensionsIJK = halfDimensionsIJK;\n  }\n\n  get halfDimensionsIJK() {\n    return this._halfDimensionsIJK;\n  }\n\n  set regMatrix(regMatrix) {\n    this._regMatrix = regMatrix;\n  }\n\n  get regMatrix() {\n    return this._regMatrix;\n  }\n\n  set ijk2LPS(ijk2LPS) {\n    this._ijk2LPS = ijk2LPS;\n  }\n\n  get ijk2LPS() {\n    return this._ijk2LPS;\n  }\n\n  set lps2IJK(lps2IJK) {\n    this._lps2IJK = lps2IJK;\n  }\n\n  get lps2IJK() {\n    return this._lps2IJK;\n  }\n\n  set lps2AABB(lps2AABB) {\n    this._lps2AABB = lps2AABB;\n  }\n\n  get lps2AABB() {\n    return this._lps2AABB;\n  }\n\n  set textureSize(textureSize) {\n    this._textureSize = textureSize;\n  }\n\n  get textureSize() {\n    return this._textureSize;\n  }\n\n  set textureUnits(textureUnits) {\n    this._textureUnits = textureUnits;\n  }\n\n  get textureUnits() {\n    return this._textureUnits;\n  }\n\n  set textureType(textureType) {\n    this._textureType = textureType;\n  }\n\n  get textureType() {\n    return this._textureType;\n  }\n\n  set bitsAllocated(bitsAllocated) {\n    this._bitsAllocated = bitsAllocated;\n  }\n\n  get bitsAllocated() {\n    return this._bitsAllocated;\n  }\n\n  set rawData(rawData) {\n    this._rawData = rawData;\n  }\n\n  get rawData() {\n    return this._rawData;\n  }\n\n  get windowWidth() {\n    return this._windowWidth;\n  }\n\n  set windowWidth(windowWidth) {\n    this._windowWidth = windowWidth;\n  }\n\n  get windowCenter() {\n    return this._windowCenter;\n  }\n\n  set windowCenter(windowCenter) {\n    this._windowCenter = windowCenter;\n  }\n\n  get rescaleSlope() {\n    return this._rescaleSlope;\n  }\n\n  set rescaleSlope(rescaleSlope) {\n    this._rescaleSlope = rescaleSlope;\n  }\n\n  get rescaleIntercept() {\n    return this._rescaleIntercept;\n  }\n\n  set rescaleIntercept(rescaleIntercept) {\n    this._rescaleIntercept = rescaleIntercept;\n  }\n\n  get xCosine() {\n    return this._xCosine;\n  }\n\n  set xCosine(xCosine) {\n    this._xCosine = xCosine;\n  }\n\n  get yCosine() {\n    return this._yCosine;\n  }\n\n  set yCosine(yCosine) {\n    this._yCosine = yCosine;\n  }\n\n  get zCosine() {\n    return this._zCosine;\n  }\n\n  set zCosine(zCosine) {\n    this._zCosine = zCosine;\n  }\n\n  get minMax() {\n    return this._minMax;\n  }\n\n  set minMax(minMax) {\n    this._minMax = minMax;\n  }\n\n  get stackID() {\n    return this._stackID;\n  }\n\n  set stackID(stackID) {\n    this._stackID = stackID;\n  }\n\n  get pixelType() {\n    return this._pixelType;\n  }\n\n  set pixelType(pixelType) {\n    this._pixelType = pixelType;\n  }\n\n  get pixelRepresentation() {\n    return this._pixelRepresentation;\n  }\n\n  set pixelRepresentation(pixelRepresentation) {\n    this._pixelRepresentation = pixelRepresentation;\n  }\n\n  set invert(invert) {\n    this._invert = invert;\n  }\n\n  get invert() {\n    return this._invert;\n  }\n\n  set modality(modality) {\n    this._modality = modality;\n  }\n\n  get modality() {\n    return this._modality;\n  }\n\n  get rightHanded() {\n    return this._rightHanded;\n  }\n\n  set rightHanded(rightHanded) {\n    this._rightHanded = rightHanded;\n  }\n\n  get spacingBetweenSlices() {\n    return this._spacingBetweenSlices;\n  }\n\n  set spacingBetweenSlices(spacingBetweenSlices) {\n    this._spacingBetweenSlices = spacingBetweenSlices;\n  }\n\n  set segmentationSegments(segmentationSegments) {\n    this._segmentationSegments = segmentationSegments;\n  }\n\n  get segmentationSegments() {\n    return this._segmentationSegments;\n  }\n\n  set segmentationType(segmentationType) {\n    this._segmentationType = segmentationType;\n  }\n\n  get segmentationType() {\n    return this._segmentationType;\n  }\n\n  set segmentationLUT(segmentationLUT) {\n    this._segmentationLUT = segmentationLUT;\n  }\n\n  get segmentationLUT() {\n    return this._segmentationLUT;\n  }\n\n  set segmentationLUTO(segmentationLUTO) {\n    this._segmentationLUTO = segmentationLUTO;\n  }\n\n  get segmentationLUTO() {\n    return this._segmentationLUTO;\n  }\n\n  // DEPRECATED FUNCTION\n\n  /**\n   * @deprecated for core.utils.value\n   *\n   * Get voxel value.\n   *\n   * @param {*} stack\n   * @param {*} coordinate\n   *\n   * @return {*}\n   */\n  static value(stack, coordinate) {\n    window.console.warn(\n      `models.stack.value is deprecated.\n       Please use core.utils.value instead.`\n    );\n    return CoreUtils.value(stack, coordinate);\n  }\n\n  /**\n   * @deprecated for core.utils.rescaleSlopeIntercept\n   *\n   * Apply slope/intercept to a value.\n   *\n   * @param {*} value\n   * @param {*} slope\n   * @param {*} intercept\n   *\n   * @return {*}\n   */\n  static valueRescaleSlopeIntercept(value, slope, intercept) {\n    window.console.warn(\n      `models.stack.valueRescaleSlopeIntercept is deprecated.\n       Please use core.utils.rescaleSlopeIntercept instead.`\n    );\n    return CoreUtils.rescaleSlopeIntercept(value, slope, intercept);\n  }\n\n  /**\n   * @deprecated for core.utils.worldToData\n   *\n   * Transform coordinates from world coordinate to data\n   *\n   * @param {*} stack\n   * @param {*} worldCoordinates\n   *\n   * @return {*}\n   */\n  static worldToData(stack, worldCoordinates) {\n    window.console.warn(\n      `models.stack.worldToData is deprecated.\n       Please use core.utils.worldToData instead.`\n    );\n\n    return CoreUtils.worldToData(stack._lps2IJK, worldCoordinates);\n  }\n}\n","/**\n * @module parsers/volume\n */\nexport default class ParsersVolume {\n  constructor() {\n    this._rightHanded = true;\n  }\n\n  pixelRepresentation() {\n    return 0;\n  }\n\n  pixelPaddingValue(frameIndex = 0) {\n    return null;\n  }\n\n  modality() {\n    return 'unknown';\n  }\n\n  segmentationType() {\n    return 'unknown';\n  }\n\n  segmentationSegments() {\n    return [];\n  }\n\n  referencedSegmentNumber(frameIndex) {\n    return -1;\n  }\n\n  rightHanded() {\n    return this._rightHanded;\n  }\n\n  spacingBetweenSlices() {\n    return null;\n  }\n\n  numberOfChannels() {\n    return 1;\n  }\n\n  sliceThickness() {\n    return null;\n  }\n\n  dimensionIndexValues(frameIndex = 0) {\n    return null;\n  }\n\n  instanceNumber(frameIndex = 0) {\n    return frameIndex;\n  }\n\n  windowCenter(frameIndex = 0) {\n    return null;\n  }\n\n  windowWidth(frameIndex = 0) {\n    return null;\n  }\n\n  rescaleSlope(frameIndex = 0) {\n    return 1;\n  }\n\n  rescaleIntercept(frameIndex = 0) {\n    return 0;\n  }\n\n  ultrasoundRegions(frameIndex = 0) {\n    return [];\n  }\n\n  frameTime(frameIndex = 0) {\n    return null;\n  }\n\n  _decompressUncompressed() {}\n\n  // http://stackoverflow.com/questions/5320439/how-do-i-swap-endian-ness-byte-order-of-a-variable-in-javascript\n  _swap16(val) {\n    return ((val & 0xff) << 8) | ((val >> 8) & 0xff);\n  }\n\n  _swap32(val) {\n    return (\n      ((val & 0xff) << 24) | ((val & 0xff00) << 8) | ((val >> 8) & 0xff00) | ((val >> 24) & 0xff)\n    );\n  }\n\n  invert() {\n    return false;\n  }\n\n  /**\n   * Get the transfer syntax UID.\n   * @return {*}\n   */\n  transferSyntaxUID() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the study date.\n   * @return {*}\n   */\n  studyDate() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the study desciption.\n   * @return {*}\n   */\n  studyDescription() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the series date.\n   * @return {*}\n   */\n  seriesDate() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the series desciption.\n   * @return {*}\n   */\n  seriesDescription() {\n    return 'no value provided';\n  }\n   \n  /**\n   * Get the raw Header.\n   * @return {*}\n   */\n  rawHeader() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the patient ID.\n   * @return {*}\n   */\n  patientID() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the patient name.\n   * @return {*}\n   */\n  patientName() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the patient age.\n   * @return {*}\n   */\n  patientAge() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the patient birthdate.\n   * @return {*}\n   */\n  patientBirthdate() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get the patient sex.\n   * @return {*}\n   */\n  patientSex() {\n    return 'no value provided';\n  }\n\n  /**\n   * Get min/max values in array\n   *\n   * @param {*} pixelData\n   *\n   * @return {*}\n   */\n  minMaxPixelData(pixelData = []) {\n    let minMax = [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY];\n    let numPixels = pixelData.length;\n    for (let index = 0; index < numPixels; index++) {\n      let spv = pixelData[index];\n      minMax[0] = Math.min(minMax[0], spv);\n      minMax[1] = Math.max(minMax[1], spv);\n    }\n\n    return minMax;\n  }\n}\n","/** * Imports ***/\nimport ParsersVolume from './parsers.volume';\n\nimport NiftiReader from 'nifti-reader-js/src/nifti';\n\n/**\n * @module parsers/nifti\n */\nexport default class ParsersNifti extends ParsersVolume {\n  constructor(data, id) {\n    super();\n\n    /**\n     * @member\n     * @type {arraybuffer}\n     */\n    this._id = id;\n    this._arrayBuffer = data.buffer;\n    this._url = data.url;\n    this._dataSet = null;\n    this._niftiHeader = null;\n    this._niftiImage = null;\n    this._ordered = true;\n    this._orderedData = null;\n\n    //\n    this._qfac = 1.0;\n\n    if (NiftiReader.isNIFTI(this._arrayBuffer)) {\n      this._dataSet = NiftiReader.readHeader(this._arrayBuffer);\n      this._niftiImage = NiftiReader.readImage(this._dataSet, this._arrayBuffer);\n    } else {\n      const error = new Error('parsers.nifti could not parse the file');\n      throw error;\n    }\n  }\n\n  seriesInstanceUID() {\n    // use filename + timestamp..?\n    return this._url;\n  }\n\n  numberOfFrames() {\n    return this._dataSet.dims[3];\n  }\n\n  numberOfChannels() {\n    let numberOfChannels = 1;\n\n    // can dims[0] >= 5 and not multi channels with RGB datatypecode?\n\n    if (this._dataSet.dims[0] >= 5) {\n      numberOfChannels = this._dataSet.dims[5];\n      this._ordered = false;\n    } else if (this._dataSet.datatypeCode === 128) {\n      numberOfChannels = 3;\n    } else if (this._dataSet.datatypeCode === 2304) {\n      numberOfChannels = 4;\n    }\n\n    return numberOfChannels;\n  }\n\n  sopInstanceUID(frameIndex = 0) {\n    return frameIndex;\n  }\n\n  rows(frameIndex = 0) {\n    return this._dataSet.dims[2];\n  }\n\n  columns(frameIndex = 0) {\n    return this._dataSet.dims[1];\n  }\n\n  pixelType(frameIndex = 0) {\n    // papaya.volume.nifti.NIFTI_TYPE_UINT8           = 2;\n    // papaya.volume.nifti.NIFTI_TYPE_INT16           = 4;\n    // papaya.volume.nifti.NIFTI_TYPE_INT32           = 8;\n    // papaya.volume.nifti.NIFTI_TYPE_FLOAT32        = 16;\n    // papaya.volume.nifti.NIFTI_TYPE_COMPLEX64      = 32;\n    // papaya.volume.nifti.NIFTI_TYPE_FLOAT64        = 64;\n    // papaya.volume.nifti.NIFTI_TYPE_RGB24         = 128;\n    // papaya.volume.nifti.NIFTI_TYPE_INT8          = 256;\n    // papaya.volume.nifti.NIFTI_TYPE_UINT16        = 512;\n    // papaya.volume.nifti.NIFTI_TYPE_UINT32        = 768;\n    // papaya.volume.nifti.NIFTI_TYPE_INT64        = 1024;\n    // papaya.volume.nifti.NIFTI_TYPE_UINT64       = 1280;\n    // papaya.volume.nifti.NIFTI_TYPE_FLOAT128     = 1536;\n    // papaya.volume.nifti.NIFTI_TYPE_COMPLEX128   = 1792;\n    // papaya.volume.nifti.NIFTI_TYPE_COMPLEX256   = 2048;\n\n    // 0 integer, 1 float\n\n    let pixelType = 0;\n    if (\n      this._dataSet.datatypeCode === 16 ||\n      this._dataSet.datatypeCode === 64 ||\n      this._dataSet.datatypeCode === 1536\n    ) {\n      pixelType = 1;\n    }\n    return pixelType;\n  }\n\n  bitsAllocated(frameIndex = 0) {\n    return this._dataSet.numBitsPerVoxel;\n  }\n\n  pixelSpacing(frameIndex = 0) {\n    return [this._dataSet.pixDims[1], this._dataSet.pixDims[2], this._dataSet.pixDims[3]];\n  }\n\n  sliceThickness() {\n    // should be a string...\n    return null; // this._dataSet.pixDims[3].toString();\n  }\n\n  imageOrientation(frameIndex = 0) {\n    // http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1.h\n    // http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c\n    if (this._dataSet.qform_code > 0) {\n      // METHOD 2 (used when qform_code > 0, which should be the \"normal\" case):\n      // ---------------------------------------------------------------------\n      // The (x,y,z) coordinates are given by the pixdim[] scales, a rotation\n      // matrix, and a shift.  This method is intended to represent\n      // \"scanner-anatomical\" coordinates, which are often embedded in the\n      // image header (e.g., DICOM fields (0020,0032), (0020,0037), (0028,0030),\n      // and (0018,0050)), and represent the nominal orientation and location of\n      // the data.  This method can also be used to represent \"aligned\"\n      // coordinates, which would typically result from some post-acquisition\n      // alignment of the volume to a standard orientation (e.g., the same\n      // subject on another day, or a rigid rotation to true anatomical\n      // orientation from the tilted position of the subject in the scanner).\n      // The formula for (x,y,z) in terms of header parameters and (i,j,k) is:\n\n      //   [ x ]   [ R11 R12 R13 ] [        pixdim[1] * i ]   [ qoffset_x ]\n      //   [ y ] = [ R21 R22 R23 ] [        pixdim[2] * j ] + [ qoffset_y ]\n      //   [ z ]   [ R31 R32 R33 ] [ qfac * pixdim[3] * k ]   [ qoffset_z ]\n\n      // The qoffset_* shifts are in the NIFTI-1 header.  Note that the center\n      // of the (i,j,k)=(0,0,0) voxel (first value in the dataset array) is\n      // just (x,y,z)=(qoffset_x,qoffset_y,qoffset_z).\n\n      // The rotation matrix R is calculated from the quatern_* parameters.\n      // This calculation is described below.\n\n      // The scaling factor qfac is either 1 or -1.  The rotation matrix R\n      // defined by the quaternion parameters is \"proper\" (has determinant 1).\n      // This may not fit the needs of the data; for example, if the image\n      // grid is\n      //   i increases from Left-to-Right\n      //   j increases from Anterior-to-Posterior\n      //   k increases from Inferior-to-Superior\n      // Then (i,j,k) is a left-handed triple.  In this example, if qfac=1,\n      // the R matrix would have to be\n\n      //   [  1   0   0 ]\n      //   [  0  -1   0 ]  which is \"improper\" (determinant = -1).\n      //   [  0   0   1 ]\n\n      // If we set qfac=-1, then the R matrix would be\n\n      //   [  1   0   0 ]\n      //   [  0  -1   0 ]  which is proper.\n      //   [  0   0  -1 ]\n\n      // This R matrix is represented by quaternion [a,b,c,d] = [0,1,0,0]\n      // (which encodes a 180 degree rotation about the x-axis).\n      // https://github.com/Kitware/ITK/blob/master/Modules/IO/NIFTI/src/itkNiftiImageIO.cxx\n      let a = 0.0;\n      let b = this._dataSet.quatern_b;\n      let c = this._dataSet.quatern_c;\n      let d = this._dataSet.quatern_d;\n      // compute a\n      a = 1.0 - (b * b + c * c + d * d);\n      if (a < 0.0000001) {\n        /* special case */\n\n        a = 1.0 / Math.sqrt(b * b + c * c + d * d);\n        b *= a;\n        c *= a;\n        d *= a; /* normalize (b,c,d) vector */\n        a = 0.0; /* a = 0 ==> 180 degree rotation */\n      } else {\n        a = Math.sqrt(a); /* angle = 2*arccos(a) */\n      }\n\n      if (this._dataSet.pixDims[0] < 0.0) {\n        this._rightHanded = false;\n      }\n\n      return [\n        -(a * a + b * b - c * c - d * d),\n        -2 * (b * c + a * d),\n        2 * (b * d - a * c),\n        -2 * (b * c - a * d),\n        -(a * a + c * c - b * b - d * d),\n        2 * (c * d + a * b),\n      ];\n    } else if (this._dataSet.sform_code > 0) {\n      // METHOD 3 (used when sform_code > 0):\n      // -----------------------------------\n      // The (x,y,z) coordinates are given by a general affine transformation\n      // of the (i,j,k) indexes:\n\n      //   x = srow_x[0] * i + srow_x[1] * j + srow_x[2] * k + srow_x[3]\n      //   y = srow_y[0] * i + srow_y[1] * j + srow_y[2] * k + srow_y[3]\n      //   z = srow_z[0] * i + srow_z[1] * j + srow_z[2] * k + srow_z[3]\n\n      // The srow_* vectors are in the NIFTI_1 header.  Note that no use is\n      // made of pixdim[] in this method.\n      const rowX = [\n        -this._dataSet.affine[0][0],\n        -this._dataSet.affine[0][1],\n        this._dataSet.affine[0][2],\n      ];\n      const rowY = [\n        -this._dataSet.affine[1][0],\n        -this._dataSet.affine[1][1],\n        this._dataSet.affine[0][2],\n      ];\n      return [...rowX, ...rowY];\n    } else if (this._dataSet.qform_code === 0) {\n      // METHOD 1 (the \"old\" way, used only when qform_code = 0):\n      // -------------------------------------------------------\n      // The coordinate mapping from (i,j,k) to (x,y,z) is the ANALYZE\n      // 7.5 way.  This is a simple scaling relationship:\n      //   x = pixdim[1] * i\n      //   y = pixdim[2] * j\n      //   z = pixdim[3] * k\n      // No particular spatial orientation is attached to these (x,y,z)\n      // coordinates.  (NIFTI-1 does not have the ANALYZE 7.5 orient field,\n      // which is not general and is often not set properly.)  This method\n      // is not recommended, and is present mainly for compatibility with\n      // ANALYZE 7.5 files.\n    }\n    return [1, 0, 0, 0, 1, 0];\n  }\n\n  imagePosition(frameIndex = 0) {\n    // qoffset is RAS\n    return [-this._dataSet.qoffset_x, -this._dataSet.qoffset_y, this._dataSet.qoffset_z];\n  }\n\n  dimensionIndexValues(frameIndex = 0) {\n    return null;\n  }\n\n  instanceNumber(frameIndex = 0) {\n    return frameIndex;\n  }\n\n  windowCenter(frameIndex = 0) {\n    // calc min and calc max\n    return null;\n  }\n\n  windowWidth(frameIndex = 0) {\n    // calc min and calc max\n    return null;\n  }\n\n  rescaleSlope(frameIndex = 0) {\n    return this._dataSet.scl_slope;\n  }\n\n  rescaleIntercept(frameIndex = 0) {\n    return this._dataSet.scl_inter;\n  }\n\n  extractPixelData(frameIndex = 0) {\n    return this._decompressUncompressed(frameIndex);\n  }\n\n  _decompressUncompressed(frameIndex = 0) {\n    // papaya.volume.nifti.NIFTI_TYPE_UINT8           = 2;\n    // papaya.volume.nifti.NIFTI_TYPE_INT16           = 4;\n    // papaya.volume.nifti.NIFTI_TYPE_INT32           = 8;\n    // papaya.volume.nifti.NIFTI_TYPE_FLOAT32        = 16;\n    // papaya.volume.nifti.NIFTI_TYPE_COMPLEX64      = 32;\n    // papaya.volume.nifti.NIFTI_TYPE_FLOAT64        = 64;\n    // papaya.volume.nifti.NIFTI_TYPE_RGB24         = 128;\n    // papaya.volume.nifti.NIFTI_TYPE_INT8          = 256;\n    // papaya.volume.nifti.NIFTI_TYPE_UINT16        = 512;\n    // papaya.volume.nifti.NIFTI_TYPE_UINT32        = 768;\n    // papaya.volume.nifti.NIFTI_TYPE_INT64        = 1024;\n    // papaya.volume.nifti.NIFTI_TYPE_UINT64       = 1280;\n    // papaya.volume.nifti.NIFTI_TYPE_FLOAT128     = 1536;\n    // papaya.volume.nifti.NIFTI_TYPE_COMPLEX128   = 1792;\n    // papaya.volume.nifti.NIFTI_TYPE_COMPLEX256   = 2048;\n\n    let numberOfChannels = this.numberOfChannels();\n    let numPixels = this.rows(frameIndex) * this.columns(frameIndex) * numberOfChannels;\n    // if( !this.rightHanded() ){\n    //   frameIndex = this.numberOfFrames() - 1 - frameIndex;\n    // }\n    let frameOffset = frameIndex * numPixels;\n    let buffer = this._niftiImage;\n\n    // use bits allocated && pixel reprensentation too\n    if (!this._ordered && this._orderedData === null) {\n      // order then\n      this._reorderData();\n    }\n\n    if (this._orderedData !== null) {\n      // just a slice...\n      return this._orderedData.slice(frameOffset, frameOffset + numPixels);\n    } else if (this._dataSet.datatypeCode === 2) {\n      // unsigned int 8 bit\n      return new Uint8Array(buffer, frameOffset, numPixels);\n    } else if (this._dataSet.datatypeCode === 256) {\n      // signed int 8 bit\n      return new Int8Array(buffer, frameOffset, numPixels);\n    } else if (this._dataSet.datatypeCode === 512) {\n      // unsigned int 16 bit\n      frameOffset = frameOffset * 2;\n      return new Uint16Array(buffer, frameOffset, numPixels);\n    } else if (this._dataSet.datatypeCode === 4) {\n      // signed int 16 bit\n      frameOffset = frameOffset * 2;\n      return new Int16Array(buffer, frameOffset, numPixels);\n    } else if (this._dataSet.datatypeCode === 8) {\n      // signed int 32 bit\n      frameOffset = frameOffset * 4;\n      return new Int32Array(buffer, frameOffset, numPixels);\n    } else if (this._dataSet.datatypeCode === 16) {\n      // signed float 32 bit\n      frameOffset = frameOffset * 4;\n      const data = new Float32Array(buffer, frameOffset, numPixels);\n      for (let i = 0; i < data.length; i++) {\n        if (data[i] === Infinity || data[i] === -Infinity) {\n          data[i] = 0;\n        }\n      }\n      return data;\n    } else {\n      window.console.warn(`Unknown data type: datatypeCode : ${this._dataSet.datatypeCode}`);\n    }\n  }\n\n  _reorderData() {\n    let numberOfChannels = this.numberOfChannels();\n    let numPixels = this.rows() * this.columns() * numberOfChannels;\n    let buffer = this._niftiImage;\n\n    let totalNumPixels = numPixels * this.numberOfFrames();\n    let tmp = null;\n    this._orderedData = null;\n\n    if (this._dataSet.datatypeCode === 2) {\n      // unsigned 8 bit\n      tmp = new Uint8Array(buffer, 0, totalNumPixels);\n      this._orderedData = new Uint8Array(tmp.length);\n    } else if (this._dataSet.datatypeCode === 256) {\n      // signed 8 bit\n      tmp = new Int8Array(buffer, 0, totalNumPixels);\n      this._orderedData = new Int8Array(tmp.length);\n    } else if (this._dataSet.datatypeCode === 512) {\n      tmp = new Uint16Array(buffer, 0, totalNumPixels);\n      this._orderedData = new Uint16Array(tmp.length);\n    } else if (this._dataSet.datatypeCode === 4) {\n      tmp = new Int16Array(buffer, 0, totalNumPixels);\n      this._orderedData = new Int16Array(tmp.length);\n    } else if (this._dataSet.datatypeCode === 16) {\n      tmp = new Float32Array(buffer, 0, totalNumPixels);\n      this._orderedData = new Float32Array(tmp.length);\n    }\n\n    // re-order pixels...\n    let numPixels2 = tmp.length / 3;\n    let rgbaIndex = 0;\n    let rIndex = 0;\n    let gIndex = numPixels2;\n    let bIndex = numPixels2 * 2;\n\n    for (let i = 0; i < numPixels2; i++) {\n      this._orderedData[rgbaIndex++] = tmp[rIndex++]; // red\n      this._orderedData[rgbaIndex++] = tmp[gIndex++]; // green\n      this._orderedData[rgbaIndex++] = tmp[bIndex++]; // blue\n    }\n\n    this._ordered = true;\n  }\n}\n","const segmentationFs = {\n  0: { color: [0, 0, 0], opacity: 0, label: 'Unknown' },\n  1: { color: [70, 130, 180], opacity: 1, label: 'Left-Cerebral-Exterior' },\n  2: { color: [245, 245, 245], opacity: 1, label: 'Left-Cerebral-White-Matter' },\n  3: { color: [205, 62, 78], opacity: 1, label: 'Left-Cerebral-Cortex' },\n  4: { color: [120, 18, 134], opacity: 1, label: 'Left-Lateral-Ventricle' },\n  5: { color: [196, 58, 250], opacity: 1, label: 'Left-Inf-Lat-Vent' },\n  6: { color: [0, 148, 0], opacity: 1, label: 'Left-Cerebellum-Exterior' },\n  7: { color: [220, 248, 164], opacity: 1, label: 'Left-Cerebellum-White-Matter' },\n  8: { color: [230, 148, 34], opacity: 1, label: 'Left-Cerebellum-Cortex' },\n  9: { color: [0, 118, 14], opacity: 1, label: 'Left-Thalamus' },\n  10: { color: [0, 118, 14], opacity: 1, label: 'Left-Thalamus-Proper' },\n  11: { color: [122, 186, 220], opacity: 1, label: 'Left-Caudate' },\n  12: { color: [236, 13, 176], opacity: 1, label: 'Left-Putamen' },\n  13: { color: [12, 48, 255], opacity: 1, label: 'Left-Pallidum' },\n  14: { color: [204, 182, 142], opacity: 1, label: '3rd-Ventricle' },\n  15: { color: [42, 204, 164], opacity: 1, label: '4th-Ventricle' },\n  16: { color: [119, 159, 176], opacity: 1, label: 'Brain-Stem' },\n  17: { color: [220, 216, 20], opacity: 1, label: 'Left-Hippocampus' },\n  18: { color: [103, 255, 255], opacity: 1, label: 'Left-Amygdala' },\n  19: { color: [80, 196, 98], opacity: 1, label: 'Left-Insula' },\n  20: { color: [60, 58, 210], opacity: 1, label: 'Left-Operculum' },\n  21: { color: [60, 58, 210], opacity: 1, label: 'Line-1' },\n  22: { color: [60, 58, 210], opacity: 1, label: 'Line-2' },\n  23: { color: [60, 58, 210], opacity: 1, label: 'Line-3' },\n  24: { color: [60, 60, 60], opacity: 1, label: 'CSF' },\n  25: { color: [255, 165, 0], opacity: 1, label: 'Left-Lesion' },\n  26: { color: [255, 165, 0], opacity: 1, label: 'Left-Accumbens-area' },\n  27: { color: [0, 255, 127], opacity: 1, label: 'Left-Substancia-Nigra' },\n  28: { color: [165, 42, 42], opacity: 1, label: 'Left-VentralDC' },\n  29: { color: [135, 206, 235], opacity: 1, label: 'Left-undetermined' },\n  30: { color: [160, 32, 240], opacity: 1, label: 'Left-vessel' },\n  31: { color: [0, 200, 200], opacity: 1, label: 'Left-choroid-plexus' },\n  32: { color: [100, 50, 100], opacity: 1, label: 'Left-F3orb' },\n  33: { color: [135, 50, 74], opacity: 1, label: 'Left-lOg' },\n  34: { color: [122, 135, 50], opacity: 1, label: 'Left-aOg' },\n  35: { color: [51, 50, 135], opacity: 1, label: 'Left-mOg' },\n  36: { color: [74, 155, 60], opacity: 1, label: 'Left-pOg' },\n  37: { color: [120, 62, 43], opacity: 1, label: 'Left-Stellate' },\n  38: { color: [74, 155, 60], opacity: 1, label: 'Left-Porg' },\n  39: { color: [122, 135, 50], opacity: 1, label: 'Left-Aorg' },\n  40: { color: [70, 130, 180], opacity: 1, label: 'Right-Cerebral-Exterior' },\n  41: { color: [245, 245, 245], opacity: 1, label: 'Right-Cerebral-White-Matter' },\n  42: { color: [205, 62, 78], opacity: 1, label: 'Right-Cerebral-Cortex' },\n  43: { color: [120, 18, 134], opacity: 1, label: 'Right-Lateral-Ventricle' },\n  44: { color: [196, 58, 250], opacity: 1, label: 'Right-Inf-Lat-Vent' },\n  45: { color: [0, 148, 0], opacity: 1, label: 'Right-Cerebellum-Exterior' },\n  46: { color: [220, 248, 164], opacity: 1, label: 'Right-Cerebellum-White-Matter' },\n  47: { color: [230, 148, 34], opacity: 1, label: 'Right-Cerebellum-Cortex' },\n  48: { color: [0, 118, 14], opacity: 1, label: 'Right-Thalamus' },\n  49: { color: [0, 118, 14], opacity: 1, label: 'Right-Thalamus-Proper' },\n  50: { color: [122, 186, 220], opacity: 1, label: 'Right-Caudate' },\n  51: { color: [236, 13, 176], opacity: 1, label: 'Right-Putamen' },\n  52: { color: [13, 48, 255], opacity: 1, label: 'Right-Pallidum' },\n  53: { color: [220, 216, 20], opacity: 1, label: 'Right-Hippocampus' },\n  54: { color: [103, 255, 255], opacity: 1, label: 'Right-Amygdala' },\n  55: { color: [80, 196, 98], opacity: 1, label: 'Right-Insula' },\n  56: { color: [60, 58, 210], opacity: 1, label: 'Right-Operculum' },\n  57: { color: [255, 165, 0], opacity: 1, label: 'Right-Lesion' },\n  58: { color: [255, 165, 0], opacity: 1, label: 'Right-Accumbens-area' },\n  59: { color: [0, 255, 127], opacity: 1, label: 'Right-Substancia-Nigra' },\n  60: { color: [165, 42, 42], opacity: 1, label: 'Right-VentralDC' },\n  61: { color: [135, 206, 235], opacity: 1, label: 'Right-undetermined' },\n  62: { color: [160, 32, 240], opacity: 1, label: 'Right-vessel' },\n  63: { color: [0, 200, 221], opacity: 1, label: 'Right-choroid-plexus' },\n  64: { color: [100, 50, 100], opacity: 1, label: 'Right-F3orb' },\n  65: { color: [135, 50, 74], opacity: 1, label: 'Right-lOg' },\n  66: { color: [122, 135, 50], opacity: 1, label: 'Right-aOg' },\n  67: { color: [51, 50, 135], opacity: 1, label: 'Right-mOg' },\n  68: { color: [74, 155, 60], opacity: 1, label: 'Right-pOg' },\n  69: { color: [120, 62, 43], opacity: 1, label: 'Right-Stellate' },\n  70: { color: [74, 155, 60], opacity: 1, label: 'Right-Porg' },\n  71: { color: [122, 135, 50], opacity: 1, label: 'Right-Aorg' },\n  72: { color: [120, 190, 150], opacity: 1, label: '5th-Ventricle' },\n  73: { color: [122, 135, 50], opacity: 1, label: 'Left-Interior' },\n  74: { color: [122, 135, 50], opacity: 1, label: 'Right-Interior' },\n  77: { color: [200, 70, 255], opacity: 1, label: 'WM-hypointensities' },\n  78: { color: [255, 148, 10], opacity: 1, label: 'Left-WM-hypointensities' },\n  79: { color: [255, 148, 10], opacity: 1, label: 'Right-WM-hypointensities' },\n  80: { color: [164, 108, 226], opacity: 1, label: 'non-WM-hypointensities' },\n  81: { color: [164, 108, 226], opacity: 1, label: 'Left-non-WM-hypointensities' },\n  82: { color: [164, 108, 226], opacity: 1, label: 'Right-non-WM-hypointensities' },\n  83: { color: [255, 218, 185], opacity: 1, label: 'Left-F1' },\n  84: { color: [255, 218, 185], opacity: 1, label: 'Right-F1' },\n  85: { color: [234, 169, 30], opacity: 1, label: 'Optic-Chiasm' },\n  192: { color: [250, 255, 50], opacity: 1, label: 'Corpus_Callosum' },\n  86: { color: [200, 120, 255], opacity: 1, label: 'Left_future_WMSA' },\n  87: { color: [200, 121, 255], opacity: 1, label: 'Right_future_WMSA' },\n  88: { color: [200, 122, 255], opacity: 1, label: 'future_WMSA' },\n  96: { color: [205, 10, 125], opacity: 1, label: 'Left-Amygdala-Anterior' },\n  97: { color: [205, 10, 125], opacity: 1, label: 'Right-Amygdala-Anterior' },\n  98: { color: [160, 32, 240], opacity: 1, label: 'Dura' },\n  100: { color: [124, 140, 178], opacity: 1, label: 'Left-wm-intensity-abnormality' },\n  101: { color: [125, 140, 178], opacity: 1, label: 'Left-caudate-intensity-abnormality' },\n  102: { color: [126, 140, 178], opacity: 1, label: 'Left-putamen-intensity-abnormality' },\n  103: { color: [127, 140, 178], opacity: 1, label: 'Left-accumbens-intensity-abnormality' },\n  104: { color: [124, 141, 178], opacity: 1, label: 'Left-pallidum-intensity-abnormality' },\n  105: { color: [124, 142, 178], opacity: 1, label: 'Left-amygdala-intensity-abnormality' },\n  106: { color: [124, 143, 178], opacity: 1, label: 'Left-hippocampus-intensity-abnormality' },\n  107: { color: [124, 144, 178], opacity: 1, label: 'Left-thalamus-intensity-abnormality' },\n  108: { color: [124, 140, 179], opacity: 1, label: 'Left-VDC-intensity-abnormality' },\n  109: { color: [124, 140, 178], opacity: 1, label: 'Right-wm-intensity-abnormality' },\n  110: { color: [125, 140, 178], opacity: 1, label: 'Right-caudate-intensity-abnormality' },\n  111: { color: [126, 140, 178], opacity: 1, label: 'Right-putamen-intensity-abnormality' },\n  112: { color: [127, 140, 178], opacity: 1, label: 'Right-accumbens-intensity-abnormality' },\n  113: { color: [124, 141, 178], opacity: 1, label: 'Right-pallidum-intensity-abnormality' },\n  114: { color: [124, 142, 178], opacity: 1, label: 'Right-amygdala-intensity-abnormality' },\n  115: { color: [124, 143, 178], opacity: 1, label: 'Right-hippocampus-intensity-abnormality' },\n  116: { color: [124, 144, 178], opacity: 1, label: 'Right-thalamus-intensity-abnormality' },\n  117: { color: [124, 140, 179], opacity: 1, label: 'Right-VDC-intensity-abnormality' },\n  118: { color: [255, 20, 147], opacity: 1, label: 'Epidermis' },\n  119: { color: [205, 179, 139], opacity: 1, label: 'Conn-Tissue' },\n  120: { color: [238, 238, 209], opacity: 1, label: 'SC-Fat-Muscle' },\n  121: { color: [200, 200, 200], opacity: 1, label: 'Cranium' },\n  122: { color: [74, 255, 74], opacity: 1, label: 'CSF-SA' },\n  123: { color: [238, 0, 0], opacity: 1, label: 'Muscle' },\n  124: { color: [0, 0, 139], opacity: 1, label: 'Ear' },\n  125: { color: [173, 255, 47], opacity: 1, label: 'Adipose' },\n  126: { color: [133, 203, 229], opacity: 1, label: 'Spinal-Cord' },\n  127: { color: [26, 237, 57], opacity: 1, label: 'Soft-Tissue' },\n  128: { color: [34, 139, 34], opacity: 1, label: 'Nerve' },\n  129: { color: [30, 144, 255], opacity: 1, label: 'Bone' },\n  130: { color: [147, 19, 173], opacity: 1, label: 'Air' },\n  131: { color: [238, 59, 59], opacity: 1, label: 'Orbital-Fat' },\n  132: { color: [221, 39, 200], opacity: 1, label: 'Tongue' },\n  133: { color: [238, 174, 238], opacity: 1, label: 'Nasal-Structures' },\n  134: { color: [255, 0, 0], opacity: 1, label: 'Globe' },\n  135: { color: [72, 61, 139], opacity: 1, label: 'Teeth' },\n  136: { color: [21, 39, 132], opacity: 1, label: 'Left-Caudate-Putamen' },\n  137: { color: [21, 39, 132], opacity: 1, label: 'Right-Caudate-Putamen' },\n  138: { color: [65, 135, 20], opacity: 1, label: 'Left-Claustrum' },\n  139: { color: [65, 135, 20], opacity: 1, label: 'Right-Claustrum' },\n  140: { color: [134, 4, 160], opacity: 1, label: 'Cornea' },\n  142: { color: [221, 226, 68], opacity: 1, label: 'Diploe' },\n  143: { color: [255, 255, 254], opacity: 1, label: 'Vitreous-Humor' },\n  144: { color: [52, 209, 226], opacity: 1, label: 'Lens' },\n  145: { color: [239, 160, 223], opacity: 1, label: 'Aqueous-Humor' },\n  146: { color: [70, 130, 180], opacity: 1, label: 'Outer-Table' },\n  147: { color: [70, 130, 181], opacity: 1, label: 'Inner-Table' },\n  148: { color: [139, 121, 94], opacity: 1, label: 'Periosteum' },\n  149: { color: [224, 224, 224], opacity: 1, label: 'Endosteum' },\n  150: { color: [255, 0, 0], opacity: 1, label: 'R-C-S' },\n  151: { color: [205, 205, 0], opacity: 1, label: 'Iris' },\n  152: { color: [238, 238, 209], opacity: 1, label: 'SC-Adipose-Muscle' },\n  153: { color: [139, 121, 94], opacity: 1, label: 'SC-Tissue' },\n  154: { color: [238, 59, 59], opacity: 1, label: 'Orbital-Adipose' },\n  155: { color: [238, 59, 59], opacity: 1, label: 'Left-IntCapsule-Ant' },\n  156: { color: [238, 59, 59], opacity: 1, label: 'Right-IntCapsule-Ant' },\n  157: { color: [62, 10, 205], opacity: 1, label: 'Left-IntCapsule-Pos' },\n  158: { color: [62, 10, 205], opacity: 1, label: 'Right-IntCapsule-Pos' },\n  159: { color: [0, 118, 14], opacity: 1, label: 'Left-Cerebral-WM-unmyelinated' },\n  160: { color: [0, 118, 14], opacity: 1, label: 'Right-Cerebral-WM-unmyelinated' },\n  161: { color: [220, 216, 21], opacity: 1, label: 'Left-Cerebral-WM-myelinated' },\n  162: { color: [220, 216, 21], opacity: 1, label: 'Right-Cerebral-WM-myelinated' },\n  163: { color: [122, 186, 220], opacity: 1, label: 'Left-Subcortical-Gray-Matter' },\n  164: { color: [122, 186, 220], opacity: 1, label: 'Right-Subcortical-Gray-Matter' },\n  165: { color: [120, 120, 120], opacity: 1, label: 'Skull' },\n  166: { color: [14, 48, 255], opacity: 1, label: 'Posterior-fossa' },\n  167: { color: [166, 42, 42], opacity: 1, label: 'Scalp' },\n  168: { color: [121, 18, 134], opacity: 1, label: 'Hematoma' },\n  169: { color: [236, 13, 127], opacity: 1, label: 'Left-Basal-Ganglia' },\n  176: { color: [236, 13, 126], opacity: 1, label: 'Right-Basal-Ganglia' },\n  170: { color: [119, 159, 176], opacity: 1, label: 'brainstem' },\n  171: { color: [119, 0, 176], opacity: 1, label: 'DCG' },\n  172: { color: [119, 100, 176], opacity: 1, label: 'Vermis' },\n  173: { color: [242, 104, 76], opacity: 1, label: 'Midbrain' },\n  174: { color: [206, 195, 58], opacity: 1, label: 'Pons' },\n  175: { color: [119, 159, 176], opacity: 1, label: 'Medulla' },\n  177: { color: [119, 50, 176], opacity: 1, label: 'Vermis-White-Matter' },\n  178: { color: [142, 182, 0], opacity: 1, label: 'SCP' },\n  179: { color: [19, 100, 176], opacity: 1, label: 'Floculus' },\n  180: { color: [73, 61, 139], opacity: 1, label: 'Left-Cortical-Dysplasia' },\n  181: { color: [73, 62, 139], opacity: 1, label: 'Right-Cortical-Dysplasia' },\n  182: { color: [10, 100, 176], opacity: 1, label: 'CblumNodulus' },\n  193: { color: [0, 196, 255], opacity: 1, label: 'Left-hippocampal_fissure' },\n  194: { color: [255, 164, 164], opacity: 1, label: 'Left-CADG-head' },\n  195: { color: [196, 196, 0], opacity: 1, label: 'Left-subiculum' },\n  196: { color: [0, 100, 255], opacity: 1, label: 'Left-fimbria' },\n  197: { color: [128, 196, 164], opacity: 1, label: 'Right-hippocampal_fissure' },\n  198: { color: [0, 126, 75], opacity: 1, label: 'Right-CADG-head' },\n  199: { color: [128, 96, 64], opacity: 1, label: 'Right-subiculum' },\n  200: { color: [0, 50, 128], opacity: 1, label: 'Right-fimbria' },\n  201: { color: [255, 204, 153], opacity: 1, label: 'alveus' },\n  202: { color: [255, 128, 128], opacity: 1, label: 'perforant_pathway' },\n  203: { color: [255, 255, 0], opacity: 1, label: 'parasubiculum' },\n  204: { color: [64, 0, 64], opacity: 1, label: 'presubiculum' },\n  205: { color: [0, 0, 255], opacity: 1, label: 'subiculum' },\n  206: { color: [255, 0, 0], opacity: 1, label: 'CA1' },\n  207: { color: [128, 128, 255], opacity: 1, label: 'CA2' },\n  208: { color: [0, 128, 0], opacity: 1, label: 'CA3' },\n  209: { color: [196, 160, 128], opacity: 1, label: 'CA4' },\n  210: { color: [32, 200, 255], opacity: 1, label: 'GC-DG' },\n  211: { color: [128, 255, 128], opacity: 1, label: 'HATA' },\n  212: { color: [204, 153, 204], opacity: 1, label: 'fimbria' },\n  213: { color: [121, 17, 136], opacity: 1, label: 'lateral_ventricle' },\n  214: { color: [128, 0, 0], opacity: 1, label: 'molecular_layer_HP' },\n  215: { color: [128, 32, 255], opacity: 1, label: 'hippocampal_fissure' },\n  216: { color: [255, 204, 102], opacity: 1, label: 'entorhinal_cortex' },\n  217: { color: [128, 128, 128], opacity: 1, label: 'molecular_layer_subiculum' },\n  218: { color: [104, 255, 255], opacity: 1, label: 'Amygdala' },\n  219: { color: [0, 226, 0], opacity: 1, label: 'Cerebral_White_Matter' },\n  220: { color: [205, 63, 78], opacity: 1, label: 'Cerebral_Cortex' },\n  221: { color: [197, 58, 250], opacity: 1, label: 'Inf_Lat_Vent' },\n  222: { color: [33, 150, 250], opacity: 1, label: 'Perirhinal' },\n  223: { color: [226, 0, 0], opacity: 1, label: 'Cerebral_White_Matter_Edge' },\n  224: { color: [100, 100, 100], opacity: 1, label: 'Background' },\n  225: { color: [197, 150, 250], opacity: 1, label: 'Ectorhinal' },\n  226: { color: [170, 170, 255], opacity: 1, label: 'HP_tail' },\n  250: { color: [255, 0, 0], opacity: 1, label: 'Fornix' },\n  251: { color: [0, 0, 64], opacity: 1, label: 'CC_Posterior' },\n  252: { color: [0, 0, 112], opacity: 1, label: 'CC_Mid_Posterior' },\n  253: { color: [0, 0, 160], opacity: 1, label: 'CC_Central' },\n  254: { color: [0, 0, 208], opacity: 1, label: 'CC_Mid_Anterior' },\n  255: { color: [0, 0, 255], opacity: 1, label: 'CC_Anterior' },\n  256: { color: [0, 0, 0], opacity: 1, label: 'Voxel-Unchanged' },\n  257: { color: [60, 60, 60], opacity: 1, label: 'CSF-ExtraCerebral' },\n  258: { color: [150, 150, 200], opacity: 1, label: 'Head-ExtraCerebral' },\n  259: { color: [120, 120, 120], opacity: 1, label: 'SkullApprox' },\n  260: { color: [119, 159, 176], opacity: 1, label: 'BoneOrAir' },\n  261: { color: [120, 18, 134], opacity: 1, label: 'PossibleFluid' },\n  262: { color: [119, 159, 176], opacity: 1, label: 'Sinus' },\n  263: { color: [119, 159, 176], opacity: 1, label: 'Left-Eustachian' },\n  264: { color: [119, 159, 176], opacity: 1, label: 'Right-Eustachian' },\n  331: { color: [255, 0, 0], opacity: 1, label: 'Aorta' },\n  332: { color: [255, 80, 0], opacity: 1, label: 'Left-Common-IliacA' },\n  333: { color: [255, 160, 0], opacity: 1, label: 'Right-Common-IliacA' },\n  334: { color: [255, 255, 0], opacity: 1, label: 'Left-External-IliacA' },\n  335: { color: [0, 255, 0], opacity: 1, label: 'Right-External-IliacA' },\n  336: { color: [255, 0, 160], opacity: 1, label: 'Left-Internal-IliacA' },\n  337: { color: [255, 0, 255], opacity: 1, label: 'Right-Internal-IliacA' },\n  338: { color: [255, 50, 80], opacity: 1, label: 'Left-Lateral-SacralA' },\n  339: { color: [80, 255, 50], opacity: 1, label: 'Right-Lateral-SacralA' },\n  340: { color: [160, 255, 50], opacity: 1, label: 'Left-ObturatorA' },\n  341: { color: [160, 200, 255], opacity: 1, label: 'Right-ObturatorA' },\n  342: { color: [0, 255, 160], opacity: 1, label: 'Left-Internal-PudendalA' },\n  343: { color: [0, 0, 255], opacity: 1, label: 'Right-Internal-PudendalA' },\n  344: { color: [80, 50, 255], opacity: 1, label: 'Left-UmbilicalA' },\n  345: { color: [160, 0, 255], opacity: 1, label: 'Right-UmbilicalA' },\n  346: { color: [255, 210, 0], opacity: 1, label: 'Left-Inf-RectalA' },\n  347: { color: [0, 160, 255], opacity: 1, label: 'Right-Inf-RectalA' },\n  348: { color: [255, 200, 80], opacity: 1, label: 'Left-Common-IliacV' },\n  349: { color: [255, 200, 160], opacity: 1, label: 'Right-Common-IliacV' },\n  350: { color: [255, 80, 200], opacity: 1, label: 'Left-External-IliacV' },\n  351: { color: [255, 160, 200], opacity: 1, label: 'Right-External-IliacV' },\n  352: { color: [30, 255, 80], opacity: 1, label: 'Left-Internal-IliacV' },\n  353: { color: [80, 200, 255], opacity: 1, label: 'Right-Internal-IliacV' },\n  354: { color: [80, 255, 200], opacity: 1, label: 'Left-ObturatorV' },\n  355: { color: [195, 255, 200], opacity: 1, label: 'Right-ObturatorV' },\n  356: { color: [120, 200, 20], opacity: 1, label: 'Left-Internal-PudendalV' },\n  357: { color: [170, 10, 200], opacity: 1, label: 'Right-Internal-PudendalV' },\n  358: { color: [20, 130, 180], opacity: 1, label: 'Pos-Lymph' },\n  359: { color: [20, 180, 130], opacity: 1, label: 'Neg-Lymph' },\n  400: { color: [206, 62, 78], opacity: 1, label: 'V1' },\n  401: { color: [121, 18, 134], opacity: 1, label: 'V2' },\n  402: { color: [199, 58, 250], opacity: 1, label: 'BA44' },\n  403: { color: [1, 148, 0], opacity: 1, label: 'BA45' },\n  404: { color: [221, 248, 164], opacity: 1, label: 'BA4a' },\n  405: { color: [231, 148, 34], opacity: 1, label: 'BA4p' },\n  406: { color: [1, 118, 14], opacity: 1, label: 'BA6' },\n  407: { color: [120, 118, 14], opacity: 1, label: 'BA2' },\n  408: { color: [123, 186, 221], opacity: 1, label: 'BA1_old' },\n  409: { color: [238, 13, 177], opacity: 1, label: 'BAun2' },\n  410: { color: [123, 186, 220], opacity: 1, label: 'BA1' },\n  411: { color: [138, 13, 206], opacity: 1, label: 'BA2b' },\n  412: { color: [238, 130, 176], opacity: 1, label: 'BA3a' },\n  413: { color: [218, 230, 76], opacity: 1, label: 'BA3b' },\n  414: { color: [38, 213, 176], opacity: 1, label: 'MT' },\n  415: { color: [1, 225, 176], opacity: 1, label: 'AIPS_AIP_l' },\n  416: { color: [1, 225, 176], opacity: 1, label: 'AIPS_AIP_r' },\n  417: { color: [200, 2, 100], opacity: 1, label: 'AIPS_VIP_l' },\n  418: { color: [200, 2, 100], opacity: 1, label: 'AIPS_VIP_r' },\n  419: { color: [5, 200, 90], opacity: 1, label: 'IPL_PFcm_l' },\n  420: { color: [5, 200, 90], opacity: 1, label: 'IPL_PFcm_r' },\n  421: { color: [100, 5, 200], opacity: 1, label: 'IPL_PF_l' },\n  422: { color: [25, 255, 100], opacity: 1, label: 'IPL_PFm_l' },\n  423: { color: [25, 255, 100], opacity: 1, label: 'IPL_PFm_r' },\n  424: { color: [230, 7, 100], opacity: 1, label: 'IPL_PFop_l' },\n  425: { color: [230, 7, 100], opacity: 1, label: 'IPL_PFop_r' },\n  426: { color: [100, 5, 200], opacity: 1, label: 'IPL_PF_r' },\n  427: { color: [150, 10, 200], opacity: 1, label: 'IPL_PFt_l' },\n  428: { color: [150, 10, 200], opacity: 1, label: 'IPL_PFt_r' },\n  429: { color: [175, 10, 176], opacity: 1, label: 'IPL_PGa_l' },\n  430: { color: [175, 10, 176], opacity: 1, label: 'IPL_PGa_r' },\n  431: { color: [10, 100, 255], opacity: 1, label: 'IPL_PGp_l' },\n  432: { color: [10, 100, 255], opacity: 1, label: 'IPL_PGp_r' },\n  433: { color: [150, 45, 70], opacity: 1, label: 'Visual_V3d_l' },\n  434: { color: [150, 45, 70], opacity: 1, label: 'Visual_V3d_r' },\n  435: { color: [45, 200, 15], opacity: 1, label: 'Visual_V4_l' },\n  436: { color: [45, 200, 15], opacity: 1, label: 'Visual_V4_r' },\n  437: { color: [227, 45, 100], opacity: 1, label: 'Visual_V5_b' },\n  438: { color: [227, 45, 100], opacity: 1, label: 'Visual_VP_l' },\n  439: { color: [227, 45, 100], opacity: 1, label: 'Visual_VP_r' },\n  498: { color: [143, 188, 143], opacity: 1, label: 'wmsa' },\n  499: { color: [255, 248, 220], opacity: 1, label: 'other_wmsa' },\n  500: { color: [17, 85, 136], opacity: 1, label: 'right_CA2_3' },\n  501: { color: [119, 187, 102], opacity: 1, label: 'right_alveus' },\n  502: { color: [204, 68, 34], opacity: 1, label: 'right_CA1' },\n  503: { color: [204, 0, 255], opacity: 1, label: 'right_fimbria' },\n  504: { color: [221, 187, 17], opacity: 1, label: 'right_presubiculum' },\n  505: { color: [153, 221, 238], opacity: 1, label: 'right_hippocampal_fissure' },\n  506: { color: [51, 17, 17], opacity: 1, label: 'right_CA4_DG' },\n  507: { color: [0, 119, 85], opacity: 1, label: 'right_subiculum' },\n  508: { color: [20, 100, 200], opacity: 1, label: 'right_fornix' },\n  550: { color: [17, 85, 137], opacity: 1, label: 'left_CA2_3' },\n  551: { color: [119, 187, 103], opacity: 1, label: 'left_alveus' },\n  552: { color: [204, 68, 35], opacity: 1, label: 'left_CA1' },\n  553: { color: [204, 0, 254], opacity: 1, label: 'left_fimbria' },\n  554: { color: [221, 187, 16], opacity: 1, label: 'left_presubiculum' },\n  555: { color: [153, 221, 239], opacity: 1, label: 'left_hippocampal_fissure' },\n  556: { color: [51, 17, 18], opacity: 1, label: 'left_CA4_DG' },\n  557: { color: [0, 119, 86], opacity: 1, label: 'left_subiculum' },\n  558: { color: [20, 100, 201], opacity: 1, label: 'left_fornix' },\n  600: { color: [254, 254, 254], opacity: 1, label: 'Tumor' },\n  601: { color: [70, 130, 180], opacity: 1, label: 'Cbm_Left_I_IV' },\n  602: { color: [245, 245, 245], opacity: 1, label: 'Cbm_Right_I_IV' },\n  603: { color: [205, 62, 78], opacity: 1, label: 'Cbm_Left_V' },\n  604: { color: [120, 18, 134], opacity: 1, label: 'Cbm_Right_V' },\n  605: { color: [196, 58, 250], opacity: 1, label: 'Cbm_Left_VI' },\n  606: { color: [0, 148, 0], opacity: 1, label: 'Cbm_Vermis_VI' },\n  607: { color: [220, 248, 164], opacity: 1, label: 'Cbm_Right_VI' },\n  608: { color: [230, 148, 34], opacity: 1, label: 'Cbm_Left_CrusI' },\n  609: { color: [0, 118, 14], opacity: 1, label: 'Cbm_Vermis_CrusI' },\n  610: { color: [0, 118, 14], opacity: 1, label: 'Cbm_Right_CrusI' },\n  611: { color: [122, 186, 220], opacity: 1, label: 'Cbm_Left_CrusII' },\n  612: { color: [236, 13, 176], opacity: 1, label: 'Cbm_Vermis_CrusII' },\n  613: { color: [12, 48, 255], opacity: 1, label: 'Cbm_Right_CrusII' },\n  614: { color: [204, 182, 142], opacity: 1, label: 'Cbm_Left_VIIb' },\n  615: { color: [42, 204, 164], opacity: 1, label: 'Cbm_Vermis_VIIb' },\n  616: { color: [119, 159, 176], opacity: 1, label: 'Cbm_Right_VIIb' },\n  617: { color: [220, 216, 20], opacity: 1, label: 'Cbm_Left_VIIIa' },\n  618: { color: [103, 255, 255], opacity: 1, label: 'Cbm_Vermis_VIIIa' },\n  619: { color: [80, 196, 98], opacity: 1, label: 'Cbm_Right_VIIIa' },\n  620: { color: [60, 58, 210], opacity: 1, label: 'Cbm_Left_VIIIb' },\n  621: { color: [60, 58, 210], opacity: 1, label: 'Cbm_Vermis_VIIIb' },\n  622: { color: [60, 58, 210], opacity: 1, label: 'Cbm_Right_VIIIb' },\n  623: { color: [60, 58, 210], opacity: 1, label: 'Cbm_Left_IX' },\n  624: { color: [60, 60, 60], opacity: 1, label: 'Cbm_Vermis_IX' },\n  625: { color: [255, 165, 0], opacity: 1, label: 'Cbm_Right_IX' },\n  626: { color: [255, 165, 0], opacity: 1, label: 'Cbm_Left_X' },\n  627: { color: [0, 255, 127], opacity: 1, label: 'Cbm_Vermis_X' },\n  628: { color: [165, 42, 42], opacity: 1, label: 'Cbm_Right_X' },\n  640: { color: [204, 0, 0], opacity: 1, label: 'Cbm_Right_I_V_med' },\n  641: { color: [255, 0, 0], opacity: 1, label: 'Cbm_Right_I_V_mid' },\n  642: { color: [0, 0, 255], opacity: 1, label: 'Cbm_Right_VI_med' },\n  643: { color: [30, 144, 255], opacity: 1, label: 'Cbm_Right_VI_mid' },\n  644: { color: [100, 212, 237], opacity: 1, label: 'Cbm_Right_VI_lat' },\n  645: { color: [218, 165, 32], opacity: 1, label: 'Cbm_Right_CrusI_med' },\n  646: { color: [255, 215, 0], opacity: 1, label: 'Cbm_Right_CrusI_mid' },\n  647: { color: [255, 255, 166], opacity: 1, label: 'Cbm_Right_CrusI_lat' },\n  648: { color: [153, 0, 204], opacity: 1, label: 'Cbm_Right_CrusII_med' },\n  649: { color: [153, 141, 209], opacity: 1, label: 'Cbm_Right_CrusII_mid' },\n  650: { color: [204, 204, 255], opacity: 1, label: 'Cbm_Right_CrusII_lat' },\n  651: { color: [31, 212, 194], opacity: 1, label: 'Cbm_Right_7med' },\n  652: { color: [3, 255, 237], opacity: 1, label: 'Cbm_Right_7mid' },\n  653: { color: [204, 255, 255], opacity: 1, label: 'Cbm_Right_7lat' },\n  654: { color: [86, 74, 147], opacity: 1, label: 'Cbm_Right_8med' },\n  655: { color: [114, 114, 190], opacity: 1, label: 'Cbm_Right_8mid' },\n  656: { color: [184, 178, 255], opacity: 1, label: 'Cbm_Right_8lat' },\n  657: { color: [126, 138, 37], opacity: 1, label: 'Cbm_Right_PUNs' },\n  658: { color: [189, 197, 117], opacity: 1, label: 'Cbm_Right_TONs' },\n  659: { color: [240, 230, 140], opacity: 1, label: 'Cbm_Right_FLOs' },\n  660: { color: [204, 0, 0], opacity: 1, label: 'Cbm_Left_I_V_med' },\n  661: { color: [255, 0, 0], opacity: 1, label: 'Cbm_Left_I_V_mid' },\n  662: { color: [0, 0, 255], opacity: 1, label: 'Cbm_Left_VI_med' },\n  663: { color: [30, 144, 255], opacity: 1, label: 'Cbm_Left_VI_mid' },\n  664: { color: [100, 212, 237], opacity: 1, label: 'Cbm_Left_VI_lat' },\n  665: { color: [218, 165, 32], opacity: 1, label: 'Cbm_Left_CrusI_med' },\n  666: { color: [255, 215, 0], opacity: 1, label: 'Cbm_Left_CrusI_mid' },\n  667: { color: [255, 255, 166], opacity: 1, label: 'Cbm_Left_CrusI_lat' },\n  668: { color: [153, 0, 204], opacity: 1, label: 'Cbm_Left_CrusII_med' },\n  669: { color: [153, 141, 209], opacity: 1, label: 'Cbm_Left_CrusII_mid' },\n  670: { color: [204, 204, 255], opacity: 1, label: 'Cbm_Left_CrusII_lat' },\n  671: { color: [31, 212, 194], opacity: 1, label: 'Cbm_Left_7med' },\n  672: { color: [3, 255, 237], opacity: 1, label: 'Cbm_Left_7mid' },\n  673: { color: [204, 255, 255], opacity: 1, label: 'Cbm_Left_7lat' },\n  674: { color: [86, 74, 147], opacity: 1, label: 'Cbm_Left_8med' },\n  675: { color: [114, 114, 190], opacity: 1, label: 'Cbm_Left_8mid' },\n  676: { color: [184, 178, 255], opacity: 1, label: 'Cbm_Left_8lat' },\n  677: { color: [126, 138, 37], opacity: 1, label: 'Cbm_Left_PUNs' },\n  678: { color: [189, 197, 117], opacity: 1, label: 'Cbm_Left_TONs' },\n  679: { color: [240, 230, 140], opacity: 1, label: 'Cbm_Left_FLOs' },\n  690: { color: [122, 135, 50], opacity: 1, label: 'CbmWM_Gyri_Left' },\n  691: { color: [122, 135, 50], opacity: 1, label: 'CbmWM_Gyri_Right' },\n  701: { color: [120, 18, 134], opacity: 1, label: 'CSF-FSL-FAST' },\n  702: { color: [205, 62, 78], opacity: 1, label: 'GrayMatter-FSL-FAST' },\n  703: { color: [0, 225, 0], opacity: 1, label: 'WhiteMatter-FSL-FAST' },\n  999: { color: [255, 100, 100], opacity: 1, label: 'SUSPICIOUS' },\n  1000: { color: [25, 5, 25], opacity: 1, label: 'ctx-lh-unknown' },\n  1001: { color: [25, 100, 40], opacity: 1, label: 'ctx-lh-bankssts' },\n  1002: { color: [125, 100, 160], opacity: 1, label: 'ctx-lh-caudalanteriorcingulate' },\n  1003: { color: [100, 25, 0], opacity: 1, label: 'ctx-lh-caudalmiddlefrontal' },\n  1004: { color: [120, 70, 50], opacity: 1, label: 'ctx-lh-corpuscallosum' },\n  1005: { color: [220, 20, 100], opacity: 1, label: 'ctx-lh-cuneus' },\n  1006: { color: [220, 20, 10], opacity: 1, label: 'ctx-lh-entorhinal' },\n  1007: { color: [180, 220, 140], opacity: 1, label: 'ctx-lh-fusiform' },\n  1008: { color: [220, 60, 220], opacity: 1, label: 'ctx-lh-inferiorparietal' },\n  1009: { color: [180, 40, 120], opacity: 1, label: 'ctx-lh-inferiortemporal' },\n  1010: { color: [140, 20, 140], opacity: 1, label: 'ctx-lh-isthmuscingulate' },\n  1011: { color: [20, 30, 140], opacity: 1, label: 'ctx-lh-lateraloccipital' },\n  1012: { color: [35, 75, 50], opacity: 1, label: 'ctx-lh-lateralorbitofrontal' },\n  1013: { color: [225, 140, 140], opacity: 1, label: 'ctx-lh-lingual' },\n  1014: { color: [200, 35, 75], opacity: 1, label: 'ctx-lh-medialorbitofrontal' },\n  1015: { color: [160, 100, 50], opacity: 1, label: 'ctx-lh-middletemporal' },\n  1016: { color: [20, 220, 60], opacity: 1, label: 'ctx-lh-parahippocampal' },\n  1017: { color: [60, 220, 60], opacity: 1, label: 'ctx-lh-paracentral' },\n  1018: { color: [220, 180, 140], opacity: 1, label: 'ctx-lh-parsopercularis' },\n  1019: { color: [20, 100, 50], opacity: 1, label: 'ctx-lh-parsorbitalis' },\n  1020: { color: [220, 60, 20], opacity: 1, label: 'ctx-lh-parstriangularis' },\n  1021: { color: [120, 100, 60], opacity: 1, label: 'ctx-lh-pericalcarine' },\n  1022: { color: [220, 20, 20], opacity: 1, label: 'ctx-lh-postcentral' },\n  1023: { color: [220, 180, 220], opacity: 1, label: 'ctx-lh-posteriorcingulate' },\n  1024: { color: [60, 20, 220], opacity: 1, label: 'ctx-lh-precentral' },\n  1025: { color: [160, 140, 180], opacity: 1, label: 'ctx-lh-precuneus' },\n  1026: { color: [80, 20, 140], opacity: 1, label: 'ctx-lh-rostralanteriorcingulate' },\n  1027: { color: [75, 50, 125], opacity: 1, label: 'ctx-lh-rostralmiddlefrontal' },\n  1028: { color: [20, 220, 160], opacity: 1, label: 'ctx-lh-superiorfrontal' },\n  1029: { color: [20, 180, 140], opacity: 1, label: 'ctx-lh-superiorparietal' },\n  1030: { color: [140, 220, 220], opacity: 1, label: 'ctx-lh-superiortemporal' },\n  1031: { color: [80, 160, 20], opacity: 1, label: 'ctx-lh-supramarginal' },\n  1032: { color: [100, 0, 100], opacity: 1, label: 'ctx-lh-frontalpole' },\n  1033: { color: [70, 70, 70], opacity: 1, label: 'ctx-lh-temporalpole' },\n  1034: { color: [150, 150, 200], opacity: 1, label: 'ctx-lh-transversetemporal' },\n  1035: { color: [255, 192, 32], opacity: 1, label: 'ctx-lh-insula' },\n  2000: { color: [25, 5, 25], opacity: 1, label: 'ctx-rh-unknown' },\n  2001: { color: [25, 100, 40], opacity: 1, label: 'ctx-rh-bankssts' },\n  2002: { color: [125, 100, 160], opacity: 1, label: 'ctx-rh-caudalanteriorcingulate' },\n  2003: { color: [100, 25, 0], opacity: 1, label: 'ctx-rh-caudalmiddlefrontal' },\n  2004: { color: [120, 70, 50], opacity: 1, label: 'ctx-rh-corpuscallosum' },\n  2005: { color: [220, 20, 100], opacity: 1, label: 'ctx-rh-cuneus' },\n  2006: { color: [220, 20, 10], opacity: 1, label: 'ctx-rh-entorhinal' },\n  2007: { color: [180, 220, 140], opacity: 1, label: 'ctx-rh-fusiform' },\n  2008: { color: [220, 60, 220], opacity: 1, label: 'ctx-rh-inferiorparietal' },\n  2009: { color: [180, 40, 120], opacity: 1, label: 'ctx-rh-inferiortemporal' },\n  2010: { color: [140, 20, 140], opacity: 1, label: 'ctx-rh-isthmuscingulate' },\n  2011: { color: [20, 30, 140], opacity: 1, label: 'ctx-rh-lateraloccipital' },\n  2012: { color: [35, 75, 50], opacity: 1, label: 'ctx-rh-lateralorbitofrontal' },\n  2013: { color: [225, 140, 140], opacity: 1, label: 'ctx-rh-lingual' },\n  2014: { color: [200, 35, 75], opacity: 1, label: 'ctx-rh-medialorbitofrontal' },\n  2015: { color: [160, 100, 50], opacity: 1, label: 'ctx-rh-middletemporal' },\n  2016: { color: [20, 220, 60], opacity: 1, label: 'ctx-rh-parahippocampal' },\n  2017: { color: [60, 220, 60], opacity: 1, label: 'ctx-rh-paracentral' },\n  2018: { color: [220, 180, 140], opacity: 1, label: 'ctx-rh-parsopercularis' },\n  2019: { color: [20, 100, 50], opacity: 1, label: 'ctx-rh-parsorbitalis' },\n  2020: { color: [220, 60, 20], opacity: 1, label: 'ctx-rh-parstriangularis' },\n  2021: { color: [120, 100, 60], opacity: 1, label: 'ctx-rh-pericalcarine' },\n  2022: { color: [220, 20, 20], opacity: 1, label: 'ctx-rh-postcentral' },\n  2023: { color: [220, 180, 220], opacity: 1, label: 'ctx-rh-posteriorcingulate' },\n  2024: { color: [60, 20, 220], opacity: 1, label: 'ctx-rh-precentral' },\n  2025: { color: [160, 140, 180], opacity: 1, label: 'ctx-rh-precuneus' },\n  2026: { color: [80, 20, 140], opacity: 1, label: 'ctx-rh-rostralanteriorcingulate' },\n  2027: { color: [75, 50, 125], opacity: 1, label: 'ctx-rh-rostralmiddlefrontal' },\n  2028: { color: [20, 220, 160], opacity: 1, label: 'ctx-rh-superiorfrontal' },\n  2029: { color: [20, 180, 140], opacity: 1, label: 'ctx-rh-superiorparietal' },\n  2030: { color: [140, 220, 220], opacity: 1, label: 'ctx-rh-superiortemporal' },\n  2031: { color: [80, 160, 20], opacity: 1, label: 'ctx-rh-supramarginal' },\n  2032: { color: [100, 0, 100], opacity: 1, label: 'ctx-rh-frontalpole' },\n  2033: { color: [70, 70, 70], opacity: 1, label: 'ctx-rh-temporalpole' },\n  2034: { color: [150, 150, 200], opacity: 1, label: 'ctx-rh-transversetemporal' },\n  2035: { color: [255, 192, 32], opacity: 1, label: 'ctx-rh-insula' },\n  3000: { color: [230, 250, 230], opacity: 1, label: 'wm-lh-unknown' },\n  3001: { color: [230, 155, 215], opacity: 1, label: 'wm-lh-bankssts' },\n  3002: { color: [130, 155, 95], opacity: 1, label: 'wm-lh-caudalanteriorcingulate' },\n  3003: { color: [155, 230, 255], opacity: 1, label: 'wm-lh-caudalmiddlefrontal' },\n  3004: { color: [135, 185, 205], opacity: 1, label: 'wm-lh-corpuscallosum' },\n  3005: { color: [35, 235, 155], opacity: 1, label: 'wm-lh-cuneus' },\n  3006: { color: [35, 235, 245], opacity: 1, label: 'wm-lh-entorhinal' },\n  3007: { color: [75, 35, 115], opacity: 1, label: 'wm-lh-fusiform' },\n  3008: { color: [35, 195, 35], opacity: 1, label: 'wm-lh-inferiorparietal' },\n  3009: { color: [75, 215, 135], opacity: 1, label: 'wm-lh-inferiortemporal' },\n  3010: { color: [115, 235, 115], opacity: 1, label: 'wm-lh-isthmuscingulate' },\n  3011: { color: [235, 225, 115], opacity: 1, label: 'wm-lh-lateraloccipital' },\n  3012: { color: [220, 180, 205], opacity: 1, label: 'wm-lh-lateralorbitofrontal' },\n  3013: { color: [30, 115, 115], opacity: 1, label: 'wm-lh-lingual' },\n  3014: { color: [55, 220, 180], opacity: 1, label: 'wm-lh-medialorbitofrontal' },\n  3015: { color: [95, 155, 205], opacity: 1, label: 'wm-lh-middletemporal' },\n  3016: { color: [235, 35, 195], opacity: 1, label: 'wm-lh-parahippocampal' },\n  3017: { color: [195, 35, 195], opacity: 1, label: 'wm-lh-paracentral' },\n  3018: { color: [35, 75, 115], opacity: 1, label: 'wm-lh-parsopercularis' },\n  3019: { color: [235, 155, 205], opacity: 1, label: 'wm-lh-parsorbitalis' },\n  3020: { color: [35, 195, 235], opacity: 1, label: 'wm-lh-parstriangularis' },\n  3021: { color: [135, 155, 195], opacity: 1, label: 'wm-lh-pericalcarine' },\n  3022: { color: [35, 235, 235], opacity: 1, label: 'wm-lh-postcentral' },\n  3023: { color: [35, 75, 35], opacity: 1, label: 'wm-lh-posteriorcingulate' },\n  3024: { color: [195, 235, 35], opacity: 1, label: 'wm-lh-precentral' },\n  3025: { color: [95, 115, 75], opacity: 1, label: 'wm-lh-precuneus' },\n  3026: { color: [175, 235, 115], opacity: 1, label: 'wm-lh-rostralanteriorcingulate' },\n  3027: { color: [180, 205, 130], opacity: 1, label: 'wm-lh-rostralmiddlefrontal' },\n  3028: { color: [235, 35, 95], opacity: 1, label: 'wm-lh-superiorfrontal' },\n  3029: { color: [235, 75, 115], opacity: 1, label: 'wm-lh-superiorparietal' },\n  3030: { color: [115, 35, 35], opacity: 1, label: 'wm-lh-superiortemporal' },\n  3031: { color: [175, 95, 235], opacity: 1, label: 'wm-lh-supramarginal' },\n  3032: { color: [155, 255, 155], opacity: 1, label: 'wm-lh-frontalpole' },\n  3033: { color: [185, 185, 185], opacity: 1, label: 'wm-lh-temporalpole' },\n  3034: { color: [105, 105, 55], opacity: 1, label: 'wm-lh-transversetemporal' },\n  3035: { color: [20, 220, 160], opacity: 1, label: 'wm-lh-insula' },\n  4000: { color: [230, 250, 230], opacity: 1, label: 'wm-rh-unknown' },\n  4001: { color: [230, 155, 215], opacity: 1, label: 'wm-rh-bankssts' },\n  4002: { color: [130, 155, 95], opacity: 1, label: 'wm-rh-caudalanteriorcingulate' },\n  4003: { color: [155, 230, 255], opacity: 1, label: 'wm-rh-caudalmiddlefrontal' },\n  4004: { color: [135, 185, 205], opacity: 1, label: 'wm-rh-corpuscallosum' },\n  4005: { color: [35, 235, 155], opacity: 1, label: 'wm-rh-cuneus' },\n  4006: { color: [35, 235, 245], opacity: 1, label: 'wm-rh-entorhinal' },\n  4007: { color: [75, 35, 115], opacity: 1, label: 'wm-rh-fusiform' },\n  4008: { color: [35, 195, 35], opacity: 1, label: 'wm-rh-inferiorparietal' },\n  4009: { color: [75, 215, 135], opacity: 1, label: 'wm-rh-inferiortemporal' },\n  4010: { color: [115, 235, 115], opacity: 1, label: 'wm-rh-isthmuscingulate' },\n  4011: { color: [235, 225, 115], opacity: 1, label: 'wm-rh-lateraloccipital' },\n  4012: { color: [220, 180, 205], opacity: 1, label: 'wm-rh-lateralorbitofrontal' },\n  4013: { color: [30, 115, 115], opacity: 1, label: 'wm-rh-lingual' },\n  4014: { color: [55, 220, 180], opacity: 1, label: 'wm-rh-medialorbitofrontal' },\n  4015: { color: [95, 155, 205], opacity: 1, label: 'wm-rh-middletemporal' },\n  4016: { color: [235, 35, 195], opacity: 1, label: 'wm-rh-parahippocampal' },\n  4017: { color: [195, 35, 195], opacity: 1, label: 'wm-rh-paracentral' },\n  4018: { color: [35, 75, 115], opacity: 1, label: 'wm-rh-parsopercularis' },\n  4019: { color: [235, 155, 205], opacity: 1, label: 'wm-rh-parsorbitalis' },\n  4020: { color: [35, 195, 235], opacity: 1, label: 'wm-rh-parstriangularis' },\n  4021: { color: [135, 155, 195], opacity: 1, label: 'wm-rh-pericalcarine' },\n  4022: { color: [35, 235, 235], opacity: 1, label: 'wm-rh-postcentral' },\n  4023: { color: [35, 75, 35], opacity: 1, label: 'wm-rh-posteriorcingulate' },\n  4024: { color: [195, 235, 35], opacity: 1, label: 'wm-rh-precentral' },\n  4025: { color: [95, 115, 75], opacity: 1, label: 'wm-rh-precuneus' },\n  4026: { color: [175, 235, 115], opacity: 1, label: 'wm-rh-rostralanteriorcingulate' },\n  4027: { color: [180, 205, 130], opacity: 1, label: 'wm-rh-rostralmiddlefrontal' },\n  4028: { color: [235, 35, 95], opacity: 1, label: 'wm-rh-superiorfrontal' },\n  4029: { color: [235, 75, 115], opacity: 1, label: 'wm-rh-superiorparietal' },\n  4030: { color: [115, 35, 35], opacity: 1, label: 'wm-rh-superiortemporal' },\n  4031: { color: [175, 95, 235], opacity: 1, label: 'wm-rh-supramarginal' },\n  4032: { color: [155, 255, 155], opacity: 1, label: 'wm-rh-frontalpole' },\n  4033: { color: [185, 185, 185], opacity: 1, label: 'wm-rh-temporalpole' },\n  4034: { color: [105, 105, 55], opacity: 1, label: 'wm-rh-transversetemporal' },\n  4035: { color: [20, 220, 160], opacity: 1, label: 'wm-rh-insula' },\n  3201: { color: [235, 35, 95], opacity: 1, label: 'wm-lh-frontal-lobe' },\n  3203: { color: [35, 75, 35], opacity: 1, label: 'wm-lh-cingulate-lobe' },\n  3204: { color: [135, 155, 195], opacity: 1, label: 'wm-lh-occiptal-lobe' },\n  3205: { color: [115, 35, 35], opacity: 1, label: 'wm-lh-temporal-lobe' },\n  3206: { color: [35, 195, 35], opacity: 1, label: 'wm-lh-parietal-lobe' },\n  3207: { color: [20, 220, 160], opacity: 1, label: 'wm-lh-insula-lobe' },\n  4201: { color: [235, 35, 95], opacity: 1, label: 'wm-rh-frontal-lobe' },\n  4203: { color: [35, 75, 35], opacity: 1, label: 'wm-rh-cingulate-lobe' },\n  4204: { color: [135, 155, 195], opacity: 1, label: 'wm-rh-occiptal-lobe' },\n  4205: { color: [115, 35, 35], opacity: 1, label: 'wm-rh-temporal-lobe' },\n  4206: { color: [35, 195, 35], opacity: 1, label: 'wm-rh-parietal-lobe' },\n  4207: { color: [20, 220, 160], opacity: 1, label: 'wm-rh-insula-lobe' },\n  1100: { color: [0, 0, 0], opacity: 1, label: 'ctx-lh-Unknown' },\n  1101: { color: [50, 50, 50], opacity: 1, label: 'ctx-lh-Corpus_callosum' },\n  1102: { color: [180, 20, 30], opacity: 1, label: 'ctx-lh-G_and_S_Insula_ONLY_AVERAGE' },\n  1103: { color: [60, 25, 25], opacity: 1, label: 'ctx-lh-G_cingulate-Isthmus' },\n  1104: { color: [25, 60, 60], opacity: 1, label: 'ctx-lh-G_cingulate-Main_part' },\n  1200: { color: [25, 60, 61], opacity: 1, label: 'ctx-lh-G_cingulate-caudal_ACC' },\n  1201: { color: [25, 90, 60], opacity: 1, label: 'ctx-lh-G_cingulate-rostral_ACC' },\n  1202: { color: [25, 120, 60], opacity: 1, label: 'ctx-lh-G_cingulate-posterior' },\n  1205: { color: [25, 150, 60], opacity: 1, label: 'ctx-lh-S_cingulate-caudal_ACC' },\n  1206: { color: [25, 180, 60], opacity: 1, label: 'ctx-lh-S_cingulate-rostral_ACC' },\n  1207: { color: [25, 210, 60], opacity: 1, label: 'ctx-lh-S_cingulate-posterior' },\n  1210: { color: [25, 150, 90], opacity: 1, label: 'ctx-lh-S_pericallosal-caudal' },\n  1211: { color: [25, 180, 90], opacity: 1, label: 'ctx-lh-S_pericallosal-rostral' },\n  1212: { color: [25, 210, 90], opacity: 1, label: 'ctx-lh-S_pericallosal-posterior' },\n  1105: { color: [180, 20, 20], opacity: 1, label: 'ctx-lh-G_cuneus' },\n  1106: { color: [220, 20, 100], opacity: 1, label: 'ctx-lh-G_frontal_inf-Opercular_part' },\n  1107: { color: [140, 60, 60], opacity: 1, label: 'ctx-lh-G_frontal_inf-Orbital_part' },\n  1108: { color: [180, 220, 140], opacity: 1, label: 'ctx-lh-G_frontal_inf-Triangular_part' },\n  1109: { color: [140, 100, 180], opacity: 1, label: 'ctx-lh-G_frontal_middle' },\n  1110: { color: [180, 20, 140], opacity: 1, label: 'ctx-lh-G_frontal_superior' },\n  1111: { color: [140, 20, 140], opacity: 1, label: 'ctx-lh-G_frontomarginal' },\n  1112: { color: [21, 10, 10], opacity: 1, label: 'ctx-lh-G_insular_long' },\n  1113: { color: [225, 140, 140], opacity: 1, label: 'ctx-lh-G_insular_short' },\n  1114: { color: [23, 60, 180], opacity: 1, label: 'ctx-lh-G_and_S_occipital_inferior' },\n  1115: { color: [180, 60, 180], opacity: 1, label: 'ctx-lh-G_occipital_middle' },\n  1116: { color: [20, 220, 60], opacity: 1, label: 'ctx-lh-G_occipital_superior' },\n  1117: { color: [60, 20, 140], opacity: 1, label: 'ctx-lh-G_occipit-temp_lat-Or_fusiform' },\n  1118: { color: [220, 180, 140], opacity: 1, label: 'ctx-lh-G_occipit-temp_med-Lingual_part' },\n  1119: {\n    color: [65, 100, 20],\n    opacity: 1,\n    label: 'ctx-lh-G_occipit-temp_med-Parahippocampal_part',\n  },\n  1120: { color: [220, 60, 20], opacity: 1, label: 'ctx-lh-G_orbital' },\n  1121: { color: [60, 100, 60], opacity: 1, label: 'ctx-lh-G_paracentral' },\n  1122: { color: [20, 60, 220], opacity: 1, label: 'ctx-lh-G_parietal_inferior-Angular_part' },\n  1123: {\n    color: [100, 100, 60],\n    opacity: 1,\n    label: 'ctx-lh-G_parietal_inferior-Supramarginal_part',\n  },\n  1124: { color: [220, 180, 220], opacity: 1, label: 'ctx-lh-G_parietal_superior' },\n  1125: { color: [20, 180, 140], opacity: 1, label: 'ctx-lh-G_postcentral' },\n  1126: { color: [60, 140, 180], opacity: 1, label: 'ctx-lh-G_precentral' },\n  1127: { color: [25, 20, 140], opacity: 1, label: 'ctx-lh-G_precuneus' },\n  1128: { color: [20, 60, 100], opacity: 1, label: 'ctx-lh-G_rectus' },\n  1129: { color: [60, 220, 20], opacity: 1, label: 'ctx-lh-G_subcallosal' },\n  1130: { color: [60, 20, 220], opacity: 1, label: 'ctx-lh-G_subcentral' },\n  1131: { color: [220, 220, 100], opacity: 1, label: 'ctx-lh-G_temporal_inferior' },\n  1132: { color: [180, 60, 60], opacity: 1, label: 'ctx-lh-G_temporal_middle' },\n  1133: { color: [60, 60, 220], opacity: 1, label: 'ctx-lh-G_temp_sup-G_temp_transv_and_interm_S' },\n  1134: { color: [220, 60, 220], opacity: 1, label: 'ctx-lh-G_temp_sup-Lateral_aspect' },\n  1135: { color: [65, 220, 60], opacity: 1, label: 'ctx-lh-G_temp_sup-Planum_polare' },\n  1136: { color: [25, 140, 20], opacity: 1, label: 'ctx-lh-G_temp_sup-Planum_tempolare' },\n  1137: { color: [13, 0, 250], opacity: 1, label: 'ctx-lh-G_and_S_transverse_frontopolar' },\n  1138: { color: [61, 20, 220], opacity: 1, label: 'ctx-lh-Lat_Fissure-ant_sgt-ramus_horizontal' },\n  1139: { color: [61, 20, 60], opacity: 1, label: 'ctx-lh-Lat_Fissure-ant_sgt-ramus_vertical' },\n  1140: { color: [61, 60, 100], opacity: 1, label: 'ctx-lh-Lat_Fissure-post_sgt' },\n  1141: { color: [25, 25, 25], opacity: 1, label: 'ctx-lh-Medial_wall' },\n  1142: { color: [140, 20, 60], opacity: 1, label: 'ctx-lh-Pole_occipital' },\n  1143: { color: [220, 180, 20], opacity: 1, label: 'ctx-lh-Pole_temporal' },\n  1144: { color: [63, 180, 180], opacity: 1, label: 'ctx-lh-S_calcarine' },\n  1145: { color: [221, 20, 10], opacity: 1, label: 'ctx-lh-S_central' },\n  1146: { color: [21, 220, 20], opacity: 1, label: 'ctx-lh-S_central_insula' },\n  1147: {\n    color: [183, 100, 20],\n    opacity: 1,\n    label: 'ctx-lh-S_cingulate-Main_part_and_Intracingulate',\n  },\n  1148: { color: [221, 20, 100], opacity: 1, label: 'ctx-lh-S_cingulate-Marginalis_part' },\n  1149: { color: [221, 60, 140], opacity: 1, label: 'ctx-lh-S_circular_insula_anterior' },\n  1150: { color: [221, 20, 220], opacity: 1, label: 'ctx-lh-S_circular_insula_inferior' },\n  1151: { color: [61, 220, 220], opacity: 1, label: 'ctx-lh-S_circular_insula_superior' },\n  1152: { color: [100, 200, 200], opacity: 1, label: 'ctx-lh-S_collateral_transverse_ant' },\n  1153: { color: [10, 200, 200], opacity: 1, label: 'ctx-lh-S_collateral_transverse_post' },\n  1154: { color: [221, 220, 20], opacity: 1, label: 'ctx-lh-S_frontal_inferior' },\n  1155: { color: [141, 20, 100], opacity: 1, label: 'ctx-lh-S_frontal_middle' },\n  1156: { color: [61, 220, 100], opacity: 1, label: 'ctx-lh-S_frontal_superior' },\n  1157: { color: [21, 220, 60], opacity: 1, label: 'ctx-lh-S_frontomarginal' },\n  1158: { color: [141, 60, 20], opacity: 1, label: 'ctx-lh-S_intermedius_primus-Jensen' },\n  1159: {\n    color: [143, 20, 220],\n    opacity: 1,\n    label: 'ctx-lh-S_intraparietal-and_Parietal_transverse',\n  },\n  1160: { color: [61, 20, 180], opacity: 1, label: 'ctx-lh-S_occipital_anterior' },\n  1161: { color: [101, 60, 220], opacity: 1, label: 'ctx-lh-S_occipital_middle_and_Lunatus' },\n  1162: {\n    color: [21, 20, 140],\n    opacity: 1,\n    label: 'ctx-lh-S_occipital_superior_and_transversalis',\n  },\n  1163: { color: [221, 140, 20], opacity: 1, label: 'ctx-lh-S_occipito-temporal_lateral' },\n  1164: {\n    color: [141, 100, 220],\n    opacity: 1,\n    label: 'ctx-lh-S_occipito-temporal_medial_and_S_Lingual',\n  },\n  1165: { color: [101, 20, 20], opacity: 1, label: 'ctx-lh-S_orbital-H_shapped' },\n  1166: { color: [221, 100, 20], opacity: 1, label: 'ctx-lh-S_orbital_lateral' },\n  1167: { color: [181, 200, 20], opacity: 1, label: 'ctx-lh-S_orbital_medial-Or_olfactory' },\n  1168: { color: [21, 180, 140], opacity: 1, label: 'ctx-lh-S_paracentral' },\n  1169: { color: [101, 100, 180], opacity: 1, label: 'ctx-lh-S_parieto_occipital' },\n  1170: { color: [181, 220, 20], opacity: 1, label: 'ctx-lh-S_pericallosal' },\n  1171: { color: [21, 140, 200], opacity: 1, label: 'ctx-lh-S_postcentral' },\n  1172: { color: [21, 20, 240], opacity: 1, label: 'ctx-lh-S_precentral-Inferior-part' },\n  1173: { color: [21, 20, 200], opacity: 1, label: 'ctx-lh-S_precentral-Superior-part' },\n  1174: { color: [61, 180, 60], opacity: 1, label: 'ctx-lh-S_subcentral_ant' },\n  1175: { color: [61, 180, 250], opacity: 1, label: 'ctx-lh-S_subcentral_post' },\n  1176: { color: [21, 20, 60], opacity: 1, label: 'ctx-lh-S_suborbital' },\n  1177: { color: [101, 60, 60], opacity: 1, label: 'ctx-lh-S_subparietal' },\n  1178: { color: [21, 220, 220], opacity: 1, label: 'ctx-lh-S_supracingulate' },\n  1179: { color: [21, 180, 180], opacity: 1, label: 'ctx-lh-S_temporal_inferior' },\n  1180: { color: [223, 220, 60], opacity: 1, label: 'ctx-lh-S_temporal_superior' },\n  1181: { color: [221, 60, 60], opacity: 1, label: 'ctx-lh-S_temporal_transverse' },\n  2100: { color: [0, 0, 0], opacity: 1, label: 'ctx-rh-Unknown' },\n  2101: { color: [50, 50, 50], opacity: 1, label: 'ctx-rh-Corpus_callosum' },\n  2102: { color: [180, 20, 30], opacity: 1, label: 'ctx-rh-G_and_S_Insula_ONLY_AVERAGE' },\n  2103: { color: [60, 25, 25], opacity: 1, label: 'ctx-rh-G_cingulate-Isthmus' },\n  2104: { color: [25, 60, 60], opacity: 1, label: 'ctx-rh-G_cingulate-Main_part' },\n  2105: { color: [180, 20, 20], opacity: 1, label: 'ctx-rh-G_cuneus' },\n  2106: { color: [220, 20, 100], opacity: 1, label: 'ctx-rh-G_frontal_inf-Opercular_part' },\n  2107: { color: [140, 60, 60], opacity: 1, label: 'ctx-rh-G_frontal_inf-Orbital_part' },\n  2108: { color: [180, 220, 140], opacity: 1, label: 'ctx-rh-G_frontal_inf-Triangular_part' },\n  2109: { color: [140, 100, 180], opacity: 1, label: 'ctx-rh-G_frontal_middle' },\n  2110: { color: [180, 20, 140], opacity: 1, label: 'ctx-rh-G_frontal_superior' },\n  2111: { color: [140, 20, 140], opacity: 1, label: 'ctx-rh-G_frontomarginal' },\n  2112: { color: [21, 10, 10], opacity: 1, label: 'ctx-rh-G_insular_long' },\n  2113: { color: [225, 140, 140], opacity: 1, label: 'ctx-rh-G_insular_short' },\n  2114: { color: [23, 60, 180], opacity: 1, label: 'ctx-rh-G_and_S_occipital_inferior' },\n  2115: { color: [180, 60, 180], opacity: 1, label: 'ctx-rh-G_occipital_middle' },\n  2116: { color: [20, 220, 60], opacity: 1, label: 'ctx-rh-G_occipital_superior' },\n  2117: { color: [60, 20, 140], opacity: 1, label: 'ctx-rh-G_occipit-temp_lat-Or_fusiform' },\n  2118: { color: [220, 180, 140], opacity: 1, label: 'ctx-rh-G_occipit-temp_med-Lingual_part' },\n  2119: {\n    color: [65, 100, 20],\n    opacity: 1,\n    label: 'ctx-rh-G_occipit-temp_med-Parahippocampal_part',\n  },\n  2120: { color: [220, 60, 20], opacity: 1, label: 'ctx-rh-G_orbital' },\n  2121: { color: [60, 100, 60], opacity: 1, label: 'ctx-rh-G_paracentral' },\n  2122: { color: [20, 60, 220], opacity: 1, label: 'ctx-rh-G_parietal_inferior-Angular_part' },\n  2123: {\n    color: [100, 100, 60],\n    opacity: 1,\n    label: 'ctx-rh-G_parietal_inferior-Supramarginal_part',\n  },\n  2124: { color: [220, 180, 220], opacity: 1, label: 'ctx-rh-G_parietal_superior' },\n  2125: { color: [20, 180, 140], opacity: 1, label: 'ctx-rh-G_postcentral' },\n  2126: { color: [60, 140, 180], opacity: 1, label: 'ctx-rh-G_precentral' },\n  2127: { color: [25, 20, 140], opacity: 1, label: 'ctx-rh-G_precuneus' },\n  2128: { color: [20, 60, 100], opacity: 1, label: 'ctx-rh-G_rectus' },\n  2129: { color: [60, 220, 20], opacity: 1, label: 'ctx-rh-G_subcallosal' },\n  2130: { color: [60, 20, 220], opacity: 1, label: 'ctx-rh-G_subcentral' },\n  2131: { color: [220, 220, 100], opacity: 1, label: 'ctx-rh-G_temporal_inferior' },\n  2132: { color: [180, 60, 60], opacity: 1, label: 'ctx-rh-G_temporal_middle' },\n  2133: { color: [60, 60, 220], opacity: 1, label: 'ctx-rh-G_temp_sup-G_temp_transv_and_interm_S' },\n  2134: { color: [220, 60, 220], opacity: 1, label: 'ctx-rh-G_temp_sup-Lateral_aspect' },\n  2135: { color: [65, 220, 60], opacity: 1, label: 'ctx-rh-G_temp_sup-Planum_polare' },\n  2136: { color: [25, 140, 20], opacity: 1, label: 'ctx-rh-G_temp_sup-Planum_tempolare' },\n  2137: { color: [13, 0, 250], opacity: 1, label: 'ctx-rh-G_and_S_transverse_frontopolar' },\n  2138: { color: [61, 20, 220], opacity: 1, label: 'ctx-rh-Lat_Fissure-ant_sgt-ramus_horizontal' },\n  2139: { color: [61, 20, 60], opacity: 1, label: 'ctx-rh-Lat_Fissure-ant_sgt-ramus_vertical' },\n  2140: { color: [61, 60, 100], opacity: 1, label: 'ctx-rh-Lat_Fissure-post_sgt' },\n  2141: { color: [25, 25, 25], opacity: 1, label: 'ctx-rh-Medial_wall' },\n  2142: { color: [140, 20, 60], opacity: 1, label: 'ctx-rh-Pole_occipital' },\n  2143: { color: [220, 180, 20], opacity: 1, label: 'ctx-rh-Pole_temporal' },\n  2144: { color: [63, 180, 180], opacity: 1, label: 'ctx-rh-S_calcarine' },\n  2145: { color: [221, 20, 10], opacity: 1, label: 'ctx-rh-S_central' },\n  2146: { color: [21, 220, 20], opacity: 1, label: 'ctx-rh-S_central_insula' },\n  2147: {\n    color: [183, 100, 20],\n    opacity: 1,\n    label: 'ctx-rh-S_cingulate-Main_part_and_Intracingulate',\n  },\n  2148: { color: [221, 20, 100], opacity: 1, label: 'ctx-rh-S_cingulate-Marginalis_part' },\n  2149: { color: [221, 60, 140], opacity: 1, label: 'ctx-rh-S_circular_insula_anterior' },\n  2150: { color: [221, 20, 220], opacity: 1, label: 'ctx-rh-S_circular_insula_inferior' },\n  2151: { color: [61, 220, 220], opacity: 1, label: 'ctx-rh-S_circular_insula_superior' },\n  2152: { color: [100, 200, 200], opacity: 1, label: 'ctx-rh-S_collateral_transverse_ant' },\n  2153: { color: [10, 200, 200], opacity: 1, label: 'ctx-rh-S_collateral_transverse_post' },\n  2154: { color: [221, 220, 20], opacity: 1, label: 'ctx-rh-S_frontal_inferior' },\n  2155: { color: [141, 20, 100], opacity: 1, label: 'ctx-rh-S_frontal_middle' },\n  2156: { color: [61, 220, 100], opacity: 1, label: 'ctx-rh-S_frontal_superior' },\n  2157: { color: [21, 220, 60], opacity: 1, label: 'ctx-rh-S_frontomarginal' },\n  2158: { color: [141, 60, 20], opacity: 1, label: 'ctx-rh-S_intermedius_primus-Jensen' },\n  2159: {\n    color: [143, 20, 220],\n    opacity: 1,\n    label: 'ctx-rh-S_intraparietal-and_Parietal_transverse',\n  },\n  2160: { color: [61, 20, 180], opacity: 1, label: 'ctx-rh-S_occipital_anterior' },\n  2161: { color: [101, 60, 220], opacity: 1, label: 'ctx-rh-S_occipital_middle_and_Lunatus' },\n  2162: {\n    color: [21, 20, 140],\n    opacity: 1,\n    label: 'ctx-rh-S_occipital_superior_and_transversalis',\n  },\n  2163: { color: [221, 140, 20], opacity: 1, label: 'ctx-rh-S_occipito-temporal_lateral' },\n  2164: {\n    color: [141, 100, 220],\n    opacity: 1,\n    label: 'ctx-rh-S_occipito-temporal_medial_and_S_Lingual',\n  },\n  2165: { color: [101, 20, 20], opacity: 1, label: 'ctx-rh-S_orbital-H_shapped' },\n  2166: { color: [221, 100, 20], opacity: 1, label: 'ctx-rh-S_orbital_lateral' },\n  2167: { color: [181, 200, 20], opacity: 1, label: 'ctx-rh-S_orbital_medial-Or_olfactory' },\n  2168: { color: [21, 180, 140], opacity: 1, label: 'ctx-rh-S_paracentral' },\n  2169: { color: [101, 100, 180], opacity: 1, label: 'ctx-rh-S_parieto_occipital' },\n  2170: { color: [181, 220, 20], opacity: 1, label: 'ctx-rh-S_pericallosal' },\n  2171: { color: [21, 140, 200], opacity: 1, label: 'ctx-rh-S_postcentral' },\n  2172: { color: [21, 20, 240], opacity: 1, label: 'ctx-rh-S_precentral-Inferior-part' },\n  2173: { color: [21, 20, 200], opacity: 1, label: 'ctx-rh-S_precentral-Superior-part' },\n  2174: { color: [61, 180, 60], opacity: 1, label: 'ctx-rh-S_subcentral_ant' },\n  2175: { color: [61, 180, 250], opacity: 1, label: 'ctx-rh-S_subcentral_post' },\n  2176: { color: [21, 20, 60], opacity: 1, label: 'ctx-rh-S_suborbital' },\n  2177: { color: [101, 60, 60], opacity: 1, label: 'ctx-rh-S_subparietal' },\n  2178: { color: [21, 220, 220], opacity: 1, label: 'ctx-rh-S_supracingulate' },\n  2179: { color: [21, 180, 180], opacity: 1, label: 'ctx-rh-S_temporal_inferior' },\n  2180: { color: [223, 220, 60], opacity: 1, label: 'ctx-rh-S_temporal_superior' },\n  2181: { color: [221, 60, 60], opacity: 1, label: 'ctx-rh-S_temporal_transverse' },\n  2200: { color: [25, 60, 61], opacity: 1, label: 'ctx-rh-G_cingulate-caudal_ACC' },\n  2201: { color: [25, 90, 60], opacity: 1, label: 'ctx-rh-G_cingulate-rostral_ACC' },\n  2202: { color: [25, 120, 60], opacity: 1, label: 'ctx-rh-G_cingulate-posterior' },\n  2205: { color: [25, 150, 60], opacity: 1, label: 'ctx-rh-S_cingulate-caudal_ACC' },\n  2206: { color: [25, 180, 60], opacity: 1, label: 'ctx-rh-S_cingulate-rostral_ACC' },\n  2207: { color: [25, 210, 60], opacity: 1, label: 'ctx-rh-S_cingulate-posterior' },\n  2210: { color: [25, 150, 90], opacity: 1, label: 'ctx-rh-S_pericallosal-caudal' },\n  2211: { color: [25, 180, 90], opacity: 1, label: 'ctx-rh-S_pericallosal-rostral' },\n  2212: { color: [25, 210, 90], opacity: 1, label: 'ctx-rh-S_pericallosal-posterior' },\n  3100: { color: [0, 0, 0], opacity: 1, label: 'wm-lh-Unknown' },\n  3101: { color: [50, 50, 50], opacity: 1, label: 'wm-lh-Corpus_callosum' },\n  3102: { color: [180, 20, 30], opacity: 1, label: 'wm-lh-G_and_S_Insula_ONLY_AVERAGE' },\n  3103: { color: [60, 25, 25], opacity: 1, label: 'wm-lh-G_cingulate-Isthmus' },\n  3104: { color: [25, 60, 60], opacity: 1, label: 'wm-lh-G_cingulate-Main_part' },\n  3105: { color: [180, 20, 20], opacity: 1, label: 'wm-lh-G_cuneus' },\n  3106: { color: [220, 20, 100], opacity: 1, label: 'wm-lh-G_frontal_inf-Opercular_part' },\n  3107: { color: [140, 60, 60], opacity: 1, label: 'wm-lh-G_frontal_inf-Orbital_part' },\n  3108: { color: [180, 220, 140], opacity: 1, label: 'wm-lh-G_frontal_inf-Triangular_part' },\n  3109: { color: [140, 100, 180], opacity: 1, label: 'wm-lh-G_frontal_middle' },\n  3110: { color: [180, 20, 140], opacity: 1, label: 'wm-lh-G_frontal_superior' },\n  3111: { color: [140, 20, 140], opacity: 1, label: 'wm-lh-G_frontomarginal' },\n  3112: { color: [21, 10, 10], opacity: 1, label: 'wm-lh-G_insular_long' },\n  3113: { color: [225, 140, 140], opacity: 1, label: 'wm-lh-G_insular_short' },\n  3114: { color: [23, 60, 180], opacity: 1, label: 'wm-lh-G_and_S_occipital_inferior' },\n  3115: { color: [180, 60, 180], opacity: 1, label: 'wm-lh-G_occipital_middle' },\n  3116: { color: [20, 220, 60], opacity: 1, label: 'wm-lh-G_occipital_superior' },\n  3117: { color: [60, 20, 140], opacity: 1, label: 'wm-lh-G_occipit-temp_lat-Or_fusiform' },\n  3118: { color: [220, 180, 140], opacity: 1, label: 'wm-lh-G_occipit-temp_med-Lingual_part' },\n  3119: {\n    color: [65, 100, 20],\n    opacity: 1,\n    label: 'wm-lh-G_occipit-temp_med-Parahippocampal_part',\n  },\n  3120: { color: [220, 60, 20], opacity: 1, label: 'wm-lh-G_orbital' },\n  3121: { color: [60, 100, 60], opacity: 1, label: 'wm-lh-G_paracentral' },\n  3122: { color: [20, 60, 220], opacity: 1, label: 'wm-lh-G_parietal_inferior-Angular_part' },\n  3123: {\n    color: [100, 100, 60],\n    opacity: 1,\n    label: 'wm-lh-G_parietal_inferior-Supramarginal_part',\n  },\n  3124: { color: [220, 180, 220], opacity: 1, label: 'wm-lh-G_parietal_superior' },\n  3125: { color: [20, 180, 140], opacity: 1, label: 'wm-lh-G_postcentral' },\n  3126: { color: [60, 140, 180], opacity: 1, label: 'wm-lh-G_precentral' },\n  3127: { color: [25, 20, 140], opacity: 1, label: 'wm-lh-G_precuneus' },\n  3128: { color: [20, 60, 100], opacity: 1, label: 'wm-lh-G_rectus' },\n  3129: { color: [60, 220, 20], opacity: 1, label: 'wm-lh-G_subcallosal' },\n  3130: { color: [60, 20, 220], opacity: 1, label: 'wm-lh-G_subcentral' },\n  3131: { color: [220, 220, 100], opacity: 1, label: 'wm-lh-G_temporal_inferior' },\n  3132: { color: [180, 60, 60], opacity: 1, label: 'wm-lh-G_temporal_middle' },\n  3133: { color: [60, 60, 220], opacity: 1, label: 'wm-lh-G_temp_sup-G_temp_transv_and_interm_S' },\n  3134: { color: [220, 60, 220], opacity: 1, label: 'wm-lh-G_temp_sup-Lateral_aspect' },\n  3135: { color: [65, 220, 60], opacity: 1, label: 'wm-lh-G_temp_sup-Planum_polare' },\n  3136: { color: [25, 140, 20], opacity: 1, label: 'wm-lh-G_temp_sup-Planum_tempolare' },\n  3137: { color: [13, 0, 250], opacity: 1, label: 'wm-lh-G_and_S_transverse_frontopolar' },\n  3138: { color: [61, 20, 220], opacity: 1, label: 'wm-lh-Lat_Fissure-ant_sgt-ramus_horizontal' },\n  3139: { color: [61, 20, 60], opacity: 1, label: 'wm-lh-Lat_Fissure-ant_sgt-ramus_vertical' },\n  3140: { color: [61, 60, 100], opacity: 1, label: 'wm-lh-Lat_Fissure-post_sgt' },\n  3141: { color: [25, 25, 25], opacity: 1, label: 'wm-lh-Medial_wall' },\n  3142: { color: [140, 20, 60], opacity: 1, label: 'wm-lh-Pole_occipital' },\n  3143: { color: [220, 180, 20], opacity: 1, label: 'wm-lh-Pole_temporal' },\n  3144: { color: [63, 180, 180], opacity: 1, label: 'wm-lh-S_calcarine' },\n  3145: { color: [221, 20, 10], opacity: 1, label: 'wm-lh-S_central' },\n  3146: { color: [21, 220, 20], opacity: 1, label: 'wm-lh-S_central_insula' },\n  3147: {\n    color: [183, 100, 20],\n    opacity: 1,\n    label: 'wm-lh-S_cingulate-Main_part_and_Intracingulate',\n  },\n  3148: { color: [221, 20, 100], opacity: 1, label: 'wm-lh-S_cingulate-Marginalis_part' },\n  3149: { color: [221, 60, 140], opacity: 1, label: 'wm-lh-S_circular_insula_anterior' },\n  3150: { color: [221, 20, 220], opacity: 1, label: 'wm-lh-S_circular_insula_inferior' },\n  3151: { color: [61, 220, 220], opacity: 1, label: 'wm-lh-S_circular_insula_superior' },\n  3152: { color: [100, 200, 200], opacity: 1, label: 'wm-lh-S_collateral_transverse_ant' },\n  3153: { color: [10, 200, 200], opacity: 1, label: 'wm-lh-S_collateral_transverse_post' },\n  3154: { color: [221, 220, 20], opacity: 1, label: 'wm-lh-S_frontal_inferior' },\n  3155: { color: [141, 20, 100], opacity: 1, label: 'wm-lh-S_frontal_middle' },\n  3156: { color: [61, 220, 100], opacity: 1, label: 'wm-lh-S_frontal_superior' },\n  3157: { color: [21, 220, 60], opacity: 1, label: 'wm-lh-S_frontomarginal' },\n  3158: { color: [141, 60, 20], opacity: 1, label: 'wm-lh-S_intermedius_primus-Jensen' },\n  3159: {\n    color: [143, 20, 220],\n    opacity: 1,\n    label: 'wm-lh-S_intraparietal-and_Parietal_transverse',\n  },\n  3160: { color: [61, 20, 180], opacity: 1, label: 'wm-lh-S_occipital_anterior' },\n  3161: { color: [101, 60, 220], opacity: 1, label: 'wm-lh-S_occipital_middle_and_Lunatus' },\n  3162: { color: [21, 20, 140], opacity: 1, label: 'wm-lh-S_occipital_superior_and_transversalis' },\n  3163: { color: [221, 140, 20], opacity: 1, label: 'wm-lh-S_occipito-temporal_lateral' },\n  3164: {\n    color: [141, 100, 220],\n    opacity: 1,\n    label: 'wm-lh-S_occipito-temporal_medial_and_S_Lingual',\n  },\n  3165: { color: [101, 20, 20], opacity: 1, label: 'wm-lh-S_orbital-H_shapped' },\n  3166: { color: [221, 100, 20], opacity: 1, label: 'wm-lh-S_orbital_lateral' },\n  3167: { color: [181, 200, 20], opacity: 1, label: 'wm-lh-S_orbital_medial-Or_olfactory' },\n  3168: { color: [21, 180, 140], opacity: 1, label: 'wm-lh-S_paracentral' },\n  3169: { color: [101, 100, 180], opacity: 1, label: 'wm-lh-S_parieto_occipital' },\n  3170: { color: [181, 220, 20], opacity: 1, label: 'wm-lh-S_pericallosal' },\n  3171: { color: [21, 140, 200], opacity: 1, label: 'wm-lh-S_postcentral' },\n  3172: { color: [21, 20, 240], opacity: 1, label: 'wm-lh-S_precentral-Inferior-part' },\n  3173: { color: [21, 20, 200], opacity: 1, label: 'wm-lh-S_precentral-Superior-part' },\n  3174: { color: [61, 180, 60], opacity: 1, label: 'wm-lh-S_subcentral_ant' },\n  3175: { color: [61, 180, 250], opacity: 1, label: 'wm-lh-S_subcentral_post' },\n  3176: { color: [21, 20, 60], opacity: 1, label: 'wm-lh-S_suborbital' },\n  3177: { color: [101, 60, 60], opacity: 1, label: 'wm-lh-S_subparietal' },\n  3178: { color: [21, 220, 220], opacity: 1, label: 'wm-lh-S_supracingulate' },\n  3179: { color: [21, 180, 180], opacity: 1, label: 'wm-lh-S_temporal_inferior' },\n  3180: { color: [223, 220, 60], opacity: 1, label: 'wm-lh-S_temporal_superior' },\n  3181: { color: [221, 60, 60], opacity: 1, label: 'wm-lh-S_temporal_transverse' },\n  4100: { color: [0, 0, 0], opacity: 1, label: 'wm-rh-Unknown' },\n  4101: { color: [50, 50, 50], opacity: 1, label: 'wm-rh-Corpus_callosum' },\n  4102: { color: [180, 20, 30], opacity: 1, label: 'wm-rh-G_and_S_Insula_ONLY_AVERAGE' },\n  4103: { color: [60, 25, 25], opacity: 1, label: 'wm-rh-G_cingulate-Isthmus' },\n  4104: { color: [25, 60, 60], opacity: 1, label: 'wm-rh-G_cingulate-Main_part' },\n  4105: { color: [180, 20, 20], opacity: 1, label: 'wm-rh-G_cuneus' },\n  4106: { color: [220, 20, 100], opacity: 1, label: 'wm-rh-G_frontal_inf-Opercular_part' },\n  4107: { color: [140, 60, 60], opacity: 1, label: 'wm-rh-G_frontal_inf-Orbital_part' },\n  4108: { color: [180, 220, 140], opacity: 1, label: 'wm-rh-G_frontal_inf-Triangular_part' },\n  4109: { color: [140, 100, 180], opacity: 1, label: 'wm-rh-G_frontal_middle' },\n  4110: { color: [180, 20, 140], opacity: 1, label: 'wm-rh-G_frontal_superior' },\n  4111: { color: [140, 20, 140], opacity: 1, label: 'wm-rh-G_frontomarginal' },\n  4112: { color: [21, 10, 10], opacity: 1, label: 'wm-rh-G_insular_long' },\n  4113: { color: [225, 140, 140], opacity: 1, label: 'wm-rh-G_insular_short' },\n  4114: { color: [23, 60, 180], opacity: 1, label: 'wm-rh-G_and_S_occipital_inferior' },\n  4115: { color: [180, 60, 180], opacity: 1, label: 'wm-rh-G_occipital_middle' },\n  4116: { color: [20, 220, 60], opacity: 1, label: 'wm-rh-G_occipital_superior' },\n  4117: { color: [60, 20, 140], opacity: 1, label: 'wm-rh-G_occipit-temp_lat-Or_fusiform' },\n  4118: { color: [220, 180, 140], opacity: 1, label: 'wm-rh-G_occipit-temp_med-Lingual_part' },\n  4119: {\n    color: [65, 100, 20],\n    opacity: 1,\n    label: 'wm-rh-G_occipit-temp_med-Parahippocampal_part',\n  },\n  4120: { color: [220, 60, 20], opacity: 1, label: 'wm-rh-G_orbital' },\n  4121: { color: [60, 100, 60], opacity: 1, label: 'wm-rh-G_paracentral' },\n  4122: { color: [20, 60, 220], opacity: 1, label: 'wm-rh-G_parietal_inferior-Angular_part' },\n  4123: {\n    color: [100, 100, 60],\n    opacity: 1,\n    label: 'wm-rh-G_parietal_inferior-Supramarginal_part',\n  },\n  4124: { color: [220, 180, 220], opacity: 1, label: 'wm-rh-G_parietal_superior' },\n  4125: { color: [20, 180, 140], opacity: 1, label: 'wm-rh-G_postcentral' },\n  4126: { color: [60, 140, 180], opacity: 1, label: 'wm-rh-G_precentral' },\n  4127: { color: [25, 20, 140], opacity: 1, label: 'wm-rh-G_precuneus' },\n  4128: { color: [20, 60, 100], opacity: 1, label: 'wm-rh-G_rectus' },\n  4129: { color: [60, 220, 20], opacity: 1, label: 'wm-rh-G_subcallosal' },\n  4130: { color: [60, 20, 220], opacity: 1, label: 'wm-rh-G_subcentral' },\n  4131: { color: [220, 220, 100], opacity: 1, label: 'wm-rh-G_temporal_inferior' },\n  4132: { color: [180, 60, 60], opacity: 1, label: 'wm-rh-G_temporal_middle' },\n  4133: { color: [60, 60, 220], opacity: 1, label: 'wm-rh-G_temp_sup-G_temp_transv_and_interm_S' },\n  4134: { color: [220, 60, 220], opacity: 1, label: 'wm-rh-G_temp_sup-Lateral_aspect' },\n  4135: { color: [65, 220, 60], opacity: 1, label: 'wm-rh-G_temp_sup-Planum_polare' },\n  4136: { color: [25, 140, 20], opacity: 1, label: 'wm-rh-G_temp_sup-Planum_tempolare' },\n  4137: { color: [13, 0, 250], opacity: 1, label: 'wm-rh-G_and_S_transverse_frontopolar' },\n  4138: { color: [61, 20, 220], opacity: 1, label: 'wm-rh-Lat_Fissure-ant_sgt-ramus_horizontal' },\n  4139: { color: [61, 20, 60], opacity: 1, label: 'wm-rh-Lat_Fissure-ant_sgt-ramus_vertical' },\n  4140: { color: [61, 60, 100], opacity: 1, label: 'wm-rh-Lat_Fissure-post_sgt' },\n  4141: { color: [25, 25, 25], opacity: 1, label: 'wm-rh-Medial_wall' },\n  4142: { color: [140, 20, 60], opacity: 1, label: 'wm-rh-Pole_occipital' },\n  4143: { color: [220, 180, 20], opacity: 1, label: 'wm-rh-Pole_temporal' },\n  4144: { color: [63, 180, 180], opacity: 1, label: 'wm-rh-S_calcarine' },\n  4145: { color: [221, 20, 10], opacity: 1, label: 'wm-rh-S_central' },\n  4146: { color: [21, 220, 20], opacity: 1, label: 'wm-rh-S_central_insula' },\n  4147: {\n    color: [183, 100, 20],\n    opacity: 1,\n    label: 'wm-rh-S_cingulate-Main_part_and_Intracingulate',\n  },\n  4148: { color: [221, 20, 100], opacity: 1, label: 'wm-rh-S_cingulate-Marginalis_part' },\n  4149: { color: [221, 60, 140], opacity: 1, label: 'wm-rh-S_circular_insula_anterior' },\n  4150: { color: [221, 20, 220], opacity: 1, label: 'wm-rh-S_circular_insula_inferior' },\n  4151: { color: [61, 220, 220], opacity: 1, label: 'wm-rh-S_circular_insula_superior' },\n  4152: { color: [100, 200, 200], opacity: 1, label: 'wm-rh-S_collateral_transverse_ant' },\n  4153: { color: [10, 200, 200], opacity: 1, label: 'wm-rh-S_collateral_transverse_post' },\n  4154: { color: [221, 220, 20], opacity: 1, label: 'wm-rh-S_frontal_inferior' },\n  4155: { color: [141, 20, 100], opacity: 1, label: 'wm-rh-S_frontal_middle' },\n  4156: { color: [61, 220, 100], opacity: 1, label: 'wm-rh-S_frontal_superior' },\n  4157: { color: [21, 220, 60], opacity: 1, label: 'wm-rh-S_frontomarginal' },\n  4158: { color: [141, 60, 20], opacity: 1, label: 'wm-rh-S_intermedius_primus-Jensen' },\n  4159: {\n    color: [143, 20, 220],\n    opacity: 1,\n    label: 'wm-rh-S_intraparietal-and_Parietal_transverse',\n  },\n  4160: { color: [61, 20, 180], opacity: 1, label: 'wm-rh-S_occipital_anterior' },\n  4161: { color: [101, 60, 220], opacity: 1, label: 'wm-rh-S_occipital_middle_and_Lunatus' },\n  4162: { color: [21, 20, 140], opacity: 1, label: 'wm-rh-S_occipital_superior_and_transversalis' },\n  4163: { color: [221, 140, 20], opacity: 1, label: 'wm-rh-S_occipito-temporal_lateral' },\n  4164: {\n    color: [141, 100, 220],\n    opacity: 1,\n    label: 'wm-rh-S_occipito-temporal_medial_and_S_Lingual',\n  },\n  4165: { color: [101, 20, 20], opacity: 1, label: 'wm-rh-S_orbital-H_shapped' },\n  4166: { color: [221, 100, 20], opacity: 1, label: 'wm-rh-S_orbital_lateral' },\n  4167: { color: [181, 200, 20], opacity: 1, label: 'wm-rh-S_orbital_medial-Or_olfactory' },\n  4168: { color: [21, 180, 140], opacity: 1, label: 'wm-rh-S_paracentral' },\n  4169: { color: [101, 100, 180], opacity: 1, label: 'wm-rh-S_parieto_occipital' },\n  4170: { color: [181, 220, 20], opacity: 1, label: 'wm-rh-S_pericallosal' },\n  4171: { color: [21, 140, 200], opacity: 1, label: 'wm-rh-S_postcentral' },\n  4172: { color: [21, 20, 240], opacity: 1, label: 'wm-rh-S_precentral-Inferior-part' },\n  4173: { color: [21, 20, 200], opacity: 1, label: 'wm-rh-S_precentral-Superior-part' },\n  4174: { color: [61, 180, 60], opacity: 1, label: 'wm-rh-S_subcentral_ant' },\n  4175: { color: [61, 180, 250], opacity: 1, label: 'wm-rh-S_subcentral_post' },\n  4176: { color: [21, 20, 60], opacity: 1, label: 'wm-rh-S_suborbital' },\n  4177: { color: [101, 60, 60], opacity: 1, label: 'wm-rh-S_subparietal' },\n  4178: { color: [21, 220, 220], opacity: 1, label: 'wm-rh-S_supracingulate' },\n  4179: { color: [21, 180, 180], opacity: 1, label: 'wm-rh-S_temporal_inferior' },\n  4180: { color: [223, 220, 60], opacity: 1, label: 'wm-rh-S_temporal_superior' },\n  4181: { color: [221, 60, 60], opacity: 1, label: 'wm-rh-S_temporal_transverse' },\n  5001: { color: [20, 30, 40], opacity: 1, label: 'Left-UnsegmentedWhiteMatter' },\n  5002: { color: [20, 30, 40], opacity: 1, label: 'Right-UnsegmentedWhiteMatter' },\n  5100: { color: [204, 102, 102], opacity: 1, label: 'fmajor' },\n  5101: { color: [204, 102, 102], opacity: 1, label: 'fminor' },\n  5102: { color: [255, 255, 102], opacity: 1, label: 'lh.atr' },\n  5103: { color: [153, 204, 0], opacity: 1, label: 'lh.cab' },\n  5104: { color: [0, 153, 153], opacity: 1, label: 'lh.ccg' },\n  5105: { color: [204, 153, 255], opacity: 1, label: 'lh.cst' },\n  5106: { color: [255, 153, 51], opacity: 1, label: 'lh.ilf' },\n  5107: { color: [204, 204, 204], opacity: 1, label: 'lh.slfp' },\n  5108: { color: [153, 255, 255], opacity: 1, label: 'lh.slft' },\n  5109: { color: [102, 153, 255], opacity: 1, label: 'lh.unc' },\n  5110: { color: [255, 255, 102], opacity: 1, label: 'rh.atr' },\n  5111: { color: [153, 204, 0], opacity: 1, label: 'rh.cab' },\n  5112: { color: [0, 153, 153], opacity: 1, label: 'rh.ccg' },\n  5113: { color: [204, 153, 255], opacity: 1, label: 'rh.cst' },\n  5114: { color: [255, 153, 51], opacity: 1, label: 'rh.ilf' },\n  5115: { color: [204, 204, 204], opacity: 1, label: 'rh.slfp' },\n  5116: { color: [153, 255, 255], opacity: 1, label: 'rh.slft' },\n  5117: { color: [102, 153, 255], opacity: 1, label: 'rh.unc' },\n  5200: { color: [204, 102, 102], opacity: 1, label: 'CC-ForcepsMajor' },\n  5201: { color: [204, 102, 102], opacity: 1, label: 'CC-ForcepsMinor' },\n  5202: { color: [255, 255, 102], opacity: 1, label: 'LAntThalRadiation' },\n  5203: { color: [153, 204, 0], opacity: 1, label: 'LCingulumAngBundle' },\n  5204: { color: [0, 153, 153], opacity: 1, label: 'LCingulumCingGyrus' },\n  5205: { color: [204, 153, 255], opacity: 1, label: 'LCorticospinalTract' },\n  5206: { color: [255, 153, 51], opacity: 1, label: 'LInfLongFas' },\n  5207: { color: [204, 204, 204], opacity: 1, label: 'LSupLongFasParietal' },\n  5208: { color: [153, 255, 255], opacity: 1, label: 'LSupLongFasTemporal' },\n  5209: { color: [102, 153, 255], opacity: 1, label: 'LUncinateFas' },\n  5210: { color: [255, 255, 102], opacity: 1, label: 'RAntThalRadiation' },\n  5211: { color: [153, 204, 0], opacity: 1, label: 'RCingulumAngBundle' },\n  5212: { color: [0, 153, 153], opacity: 1, label: 'RCingulumCingGyrus' },\n  5213: { color: [204, 153, 255], opacity: 1, label: 'RCorticospinalTract' },\n  5214: { color: [255, 153, 51], opacity: 1, label: 'RInfLongFas' },\n  5215: { color: [204, 204, 204], opacity: 1, label: 'RSupLongFasParietal' },\n  5216: { color: [153, 255, 255], opacity: 1, label: 'RSupLongFasTemporal' },\n  5217: { color: [102, 153, 255], opacity: 1, label: 'RUncinateFas' },\n  6000: { color: [0, 255, 0], opacity: 1, label: 'CST-orig' },\n  6001: { color: [255, 255, 0], opacity: 1, label: 'CST-hammer' },\n  6002: { color: [0, 255, 255], opacity: 1, label: 'CST-CVS' },\n  6003: { color: [0, 0, 255], opacity: 1, label: 'CST-flirt' },\n  6010: { color: [236, 16, 231], opacity: 1, label: 'Left-SLF1' },\n  6020: { color: [237, 18, 232], opacity: 1, label: 'Right-SLF1' },\n  6030: { color: [236, 13, 227], opacity: 1, label: 'Left-SLF3' },\n  6040: { color: [236, 17, 228], opacity: 1, label: 'Right-SLF3' },\n  6050: { color: [1, 255, 1], opacity: 1, label: 'Left-CST' },\n  6060: { color: [2, 255, 1], opacity: 1, label: 'Right-CST' },\n  6070: { color: [236, 14, 230], opacity: 1, label: 'Left-SLF2' },\n  6080: { color: [237, 14, 230], opacity: 1, label: 'Right-SLF2' },\n  7001: { color: [72, 132, 181], opacity: 1, label: 'Lateral-nucleus' },\n  7002: { color: [243, 243, 243], opacity: 1, label: 'Basolateral-nucleus' },\n  7003: { color: [207, 63, 79], opacity: 1, label: 'Basal-nucleus' },\n  7004: { color: [121, 20, 135], opacity: 1, label: 'Centromedial-nucleus' },\n  7005: { color: [197, 60, 248], opacity: 1, label: 'Central-nucleus' },\n  7006: { color: [2, 149, 2], opacity: 1, label: 'Medial-nucleus' },\n  7007: { color: [221, 249, 166], opacity: 1, label: 'Cortical-nucleus' },\n  7008: { color: [232, 146, 35], opacity: 1, label: 'Accessory-Basal-nucleus' },\n  7009: { color: [20, 60, 120], opacity: 1, label: 'Corticoamygdaloid-transitio' },\n  7010: { color: [250, 250, 0], opacity: 1, label: 'Anterior-amygdaloid-area-AAA' },\n  7011: { color: [122, 187, 222], opacity: 1, label: 'Fusion-amygdala-HP-FAH' },\n  7012: { color: [237, 12, 177], opacity: 1, label: 'Hippocampal-amygdala-transition-HATA' },\n  7013: { color: [10, 49, 255], opacity: 1, label: 'Endopiriform-nucleus' },\n  7014: { color: [205, 184, 144], opacity: 1, label: 'Lateral-nucleus-olfactory-tract' },\n  7015: { color: [45, 205, 165], opacity: 1, label: 'Paralaminar-nucleus' },\n  7016: { color: [117, 160, 175], opacity: 1, label: 'Intercalated-nucleus' },\n  7017: { color: [221, 217, 21], opacity: 1, label: 'Prepiriform-cortex' },\n  7018: { color: [20, 60, 120], opacity: 1, label: 'Periamygdaloid-cortex' },\n  7019: { color: [141, 21, 100], opacity: 1, label: 'Envelope-Amygdala' },\n  7020: { color: [225, 140, 141], opacity: 1, label: 'Extranuclear-Amydala' },\n  7100: { color: [42, 201, 168], opacity: 1, label: 'Brainstem-inferior-colliculus' },\n  7101: { color: [168, 104, 162], opacity: 1, label: 'Brainstem-cochlear-nucleus' },\n  8001: { color: [74, 130, 181], opacity: 1, label: 'Thalamus-Anterior' },\n  8002: { color: [242, 241, 240], opacity: 1, label: 'Thalamus-Ventral-anterior' },\n  8003: { color: [206, 65, 78], opacity: 1, label: 'Thalamus-Lateral-dorsal' },\n  8004: { color: [120, 21, 133], opacity: 1, label: 'Thalamus-Lateral-posterior' },\n  8005: { color: [195, 61, 246], opacity: 1, label: 'Thalamus-Ventral-lateral' },\n  8006: { color: [3, 147, 6], opacity: 1, label: 'Thalamus-Ventral-posterior-medial' },\n  8007: { color: [220, 251, 163], opacity: 1, label: 'Thalamus-Ventral-posterior-lateral' },\n  8008: { color: [232, 146, 33], opacity: 1, label: 'Thalamus-intralaminar' },\n  8009: { color: [4, 114, 14], opacity: 1, label: 'Thalamus-centromedian' },\n  8010: { color: [121, 184, 220], opacity: 1, label: 'Thalamus-mediodorsal' },\n  8011: { color: [235, 11, 175], opacity: 1, label: 'Thalamus-medial' },\n  8012: { color: [12, 46, 250], opacity: 1, label: 'Thalamus-pulvinar' },\n  8013: { color: [203, 182, 143], opacity: 1, label: 'Thalamus-lateral-geniculate' },\n  8014: { color: [42, 204, 167], opacity: 1, label: 'Thalamus-medial-geniculate' },\n  9000: { color: [50, 100, 30], opacity: 1, label: 'ctx-lh-prefrontal' },\n  9001: { color: [30, 100, 45], opacity: 1, label: 'ctx-lh-primary-motor' },\n  9002: { color: [130, 100, 165], opacity: 1, label: 'ctx-lh-premotor' },\n  9003: { color: [105, 25, 5], opacity: 1, label: 'ctx-lh-temporal' },\n  9004: { color: [125, 70, 55], opacity: 1, label: 'ctx-lh-posterior-parietal' },\n  9005: { color: [225, 20, 105], opacity: 1, label: 'ctx-lh-prim-sec-somatosensory' },\n  9006: { color: [225, 20, 15], opacity: 1, label: 'ctx-lh-occipital' },\n  9500: { color: [50, 200, 30], opacity: 1, label: 'ctx-rh-prefrontal' },\n  9501: { color: [30, 150, 45], opacity: 1, label: 'ctx-rh-primary-motor' },\n  9502: { color: [130, 150, 165], opacity: 1, label: 'ctx-rh-premotor' },\n  9503: { color: [105, 75, 5], opacity: 1, label: 'ctx-rh-temporal' },\n  9504: { color: [125, 120, 55], opacity: 1, label: 'ctx-rh-posterior-parietal' },\n  9505: { color: [225, 70, 105], opacity: 1, label: 'ctx-rh-prim-sec-somatosensory' },\n  9506: { color: [225, 70, 15], opacity: 1, label: 'ctx-rh-occipital' },\n  11100: { color: [0, 0, 0], opacity: 1, label: 'ctx_lh_Unknown' },\n  11101: { color: [23, 220, 60], opacity: 1, label: 'ctx_lh_G_and_S_frontomargin' },\n  11102: { color: [23, 60, 180], opacity: 1, label: 'ctx_lh_G_and_S_occipital_inf' },\n  11103: { color: [63, 100, 60], opacity: 1, label: 'ctx_lh_G_and_S_paracentral' },\n  11104: { color: [63, 20, 220], opacity: 1, label: 'ctx_lh_G_and_S_subcentral' },\n  11105: { color: [13, 0, 250], opacity: 1, label: 'ctx_lh_G_and_S_transv_frontopol' },\n  11106: { color: [26, 60, 0], opacity: 1, label: 'ctx_lh_G_and_S_cingul-Ant' },\n  11107: { color: [26, 60, 75], opacity: 1, label: 'ctx_lh_G_and_S_cingul-Mid-Ant' },\n  11108: { color: [26, 60, 150], opacity: 1, label: 'ctx_lh_G_and_S_cingul-Mid-Post' },\n  11109: { color: [25, 60, 250], opacity: 1, label: 'ctx_lh_G_cingul-Post-dorsal' },\n  11110: { color: [60, 25, 25], opacity: 1, label: 'ctx_lh_G_cingul-Post-ventral' },\n  11111: { color: [180, 20, 20], opacity: 1, label: 'ctx_lh_G_cuneus' },\n  11112: { color: [220, 20, 100], opacity: 1, label: 'ctx_lh_G_front_inf-Opercular' },\n  11113: { color: [140, 60, 60], opacity: 1, label: 'ctx_lh_G_front_inf-Orbital' },\n  11114: { color: [180, 220, 140], opacity: 1, label: 'ctx_lh_G_front_inf-Triangul' },\n  11115: { color: [140, 100, 180], opacity: 1, label: 'ctx_lh_G_front_middle' },\n  11116: { color: [180, 20, 140], opacity: 1, label: 'ctx_lh_G_front_sup' },\n  11117: { color: [23, 10, 10], opacity: 1, label: 'ctx_lh_G_Ins_lg_and_S_cent_ins' },\n  11118: { color: [225, 140, 140], opacity: 1, label: 'ctx_lh_G_insular_short' },\n  11119: { color: [180, 60, 180], opacity: 1, label: 'ctx_lh_G_occipital_middle' },\n  11120: { color: [20, 220, 60], opacity: 1, label: 'ctx_lh_G_occipital_sup' },\n  11121: { color: [60, 20, 140], opacity: 1, label: 'ctx_lh_G_oc-temp_lat-fusifor' },\n  11122: { color: [220, 180, 140], opacity: 1, label: 'ctx_lh_G_oc-temp_med-Lingual' },\n  11123: { color: [65, 100, 20], opacity: 1, label: 'ctx_lh_G_oc-temp_med-Parahip' },\n  11124: { color: [220, 60, 20], opacity: 1, label: 'ctx_lh_G_orbital' },\n  11125: { color: [20, 60, 220], opacity: 1, label: 'ctx_lh_G_pariet_inf-Angular' },\n  11126: { color: [100, 100, 60], opacity: 1, label: 'ctx_lh_G_pariet_inf-Supramar' },\n  11127: { color: [220, 180, 220], opacity: 1, label: 'ctx_lh_G_parietal_sup' },\n  11128: { color: [20, 180, 140], opacity: 1, label: 'ctx_lh_G_postcentral' },\n  11129: { color: [60, 140, 180], opacity: 1, label: 'ctx_lh_G_precentral' },\n  11130: { color: [25, 20, 140], opacity: 1, label: 'ctx_lh_G_precuneus' },\n  11131: { color: [20, 60, 100], opacity: 1, label: 'ctx_lh_G_rectus' },\n  11132: { color: [60, 220, 20], opacity: 1, label: 'ctx_lh_G_subcallosal' },\n  11133: { color: [60, 60, 220], opacity: 1, label: 'ctx_lh_G_temp_sup-G_T_transv' },\n  11134: { color: [220, 60, 220], opacity: 1, label: 'ctx_lh_G_temp_sup-Lateral' },\n  11135: { color: [65, 220, 60], opacity: 1, label: 'ctx_lh_G_temp_sup-Plan_polar' },\n  11136: { color: [25, 140, 20], opacity: 1, label: 'ctx_lh_G_temp_sup-Plan_tempo' },\n  11137: { color: [220, 220, 100], opacity: 1, label: 'ctx_lh_G_temporal_inf' },\n  11138: { color: [180, 60, 60], opacity: 1, label: 'ctx_lh_G_temporal_middle' },\n  11139: { color: [61, 20, 220], opacity: 1, label: 'ctx_lh_Lat_Fis-ant-Horizont' },\n  11140: { color: [61, 20, 60], opacity: 1, label: 'ctx_lh_Lat_Fis-ant-Vertical' },\n  11141: { color: [61, 60, 100], opacity: 1, label: 'ctx_lh_Lat_Fis-post' },\n  11142: { color: [25, 25, 25], opacity: 1, label: 'ctx_lh_Medial_wall' },\n  11143: { color: [140, 20, 60], opacity: 1, label: 'ctx_lh_Pole_occipital' },\n  11144: { color: [220, 180, 20], opacity: 1, label: 'ctx_lh_Pole_temporal' },\n  11145: { color: [63, 180, 180], opacity: 1, label: 'ctx_lh_S_calcarine' },\n  11146: { color: [221, 20, 10], opacity: 1, label: 'ctx_lh_S_central' },\n  11147: { color: [221, 20, 100], opacity: 1, label: 'ctx_lh_S_cingul-Marginalis' },\n  11148: { color: [221, 60, 140], opacity: 1, label: 'ctx_lh_S_circular_insula_ant' },\n  11149: { color: [221, 20, 220], opacity: 1, label: 'ctx_lh_S_circular_insula_inf' },\n  11150: { color: [61, 220, 220], opacity: 1, label: 'ctx_lh_S_circular_insula_sup' },\n  11151: { color: [100, 200, 200], opacity: 1, label: 'ctx_lh_S_collat_transv_ant' },\n  11152: { color: [10, 200, 200], opacity: 1, label: 'ctx_lh_S_collat_transv_post' },\n  11153: { color: [221, 220, 20], opacity: 1, label: 'ctx_lh_S_front_inf' },\n  11154: { color: [141, 20, 100], opacity: 1, label: 'ctx_lh_S_front_middle' },\n  11155: { color: [61, 220, 100], opacity: 1, label: 'ctx_lh_S_front_sup' },\n  11156: { color: [141, 60, 20], opacity: 1, label: 'ctx_lh_S_interm_prim-Jensen' },\n  11157: { color: [143, 20, 220], opacity: 1, label: 'ctx_lh_S_intrapariet_and_P_trans' },\n  11158: { color: [101, 60, 220], opacity: 1, label: 'ctx_lh_S_oc_middle_and_Lunatus' },\n  11159: { color: [21, 20, 140], opacity: 1, label: 'ctx_lh_S_oc_sup_and_transversal' },\n  11160: { color: [61, 20, 180], opacity: 1, label: 'ctx_lh_S_occipital_ant' },\n  11161: { color: [221, 140, 20], opacity: 1, label: 'ctx_lh_S_oc-temp_lat' },\n  11162: { color: [141, 100, 220], opacity: 1, label: 'ctx_lh_S_oc-temp_med_and_Lingual' },\n  11163: { color: [221, 100, 20], opacity: 1, label: 'ctx_lh_S_orbital_lateral' },\n  11164: { color: [181, 200, 20], opacity: 1, label: 'ctx_lh_S_orbital_med-olfact' },\n  11165: { color: [101, 20, 20], opacity: 1, label: 'ctx_lh_S_orbital-H_Shaped' },\n  11166: { color: [101, 100, 180], opacity: 1, label: 'ctx_lh_S_parieto_occipital' },\n  11167: { color: [181, 220, 20], opacity: 1, label: 'ctx_lh_S_pericallosal' },\n  11168: { color: [21, 140, 200], opacity: 1, label: 'ctx_lh_S_postcentral' },\n  11169: { color: [21, 20, 240], opacity: 1, label: 'ctx_lh_S_precentral-inf-part' },\n  11170: { color: [21, 20, 200], opacity: 1, label: 'ctx_lh_S_precentral-sup-part' },\n  11171: { color: [21, 20, 60], opacity: 1, label: 'ctx_lh_S_suborbital' },\n  11172: { color: [101, 60, 60], opacity: 1, label: 'ctx_lh_S_subparietal' },\n  11173: { color: [21, 180, 180], opacity: 1, label: 'ctx_lh_S_temporal_inf' },\n  11174: { color: [223, 220, 60], opacity: 1, label: 'ctx_lh_S_temporal_sup' },\n  11175: { color: [221, 60, 60], opacity: 1, label: 'ctx_lh_S_temporal_transverse' },\n  12100: { color: [0, 0, 0], opacity: 1, label: 'ctx_rh_Unknown' },\n  12101: { color: [23, 220, 60], opacity: 1, label: 'ctx_rh_G_and_S_frontomargin' },\n  12102: { color: [23, 60, 180], opacity: 1, label: 'ctx_rh_G_and_S_occipital_inf' },\n  12103: { color: [63, 100, 60], opacity: 1, label: 'ctx_rh_G_and_S_paracentral' },\n  12104: { color: [63, 20, 220], opacity: 1, label: 'ctx_rh_G_and_S_subcentral' },\n  12105: { color: [13, 0, 250], opacity: 1, label: 'ctx_rh_G_and_S_transv_frontopol' },\n  12106: { color: [26, 60, 0], opacity: 1, label: 'ctx_rh_G_and_S_cingul-Ant' },\n  12107: { color: [26, 60, 75], opacity: 1, label: 'ctx_rh_G_and_S_cingul-Mid-Ant' },\n  12108: { color: [26, 60, 150], opacity: 1, label: 'ctx_rh_G_and_S_cingul-Mid-Post' },\n  12109: { color: [25, 60, 250], opacity: 1, label: 'ctx_rh_G_cingul-Post-dorsal' },\n  12110: { color: [60, 25, 25], opacity: 1, label: 'ctx_rh_G_cingul-Post-ventral' },\n  12111: { color: [180, 20, 20], opacity: 1, label: 'ctx_rh_G_cuneus' },\n  12112: { color: [220, 20, 100], opacity: 1, label: 'ctx_rh_G_front_inf-Opercular' },\n  12113: { color: [140, 60, 60], opacity: 1, label: 'ctx_rh_G_front_inf-Orbital' },\n  12114: { color: [180, 220, 140], opacity: 1, label: 'ctx_rh_G_front_inf-Triangul' },\n  12115: { color: [140, 100, 180], opacity: 1, label: 'ctx_rh_G_front_middle' },\n  12116: { color: [180, 20, 140], opacity: 1, label: 'ctx_rh_G_front_sup' },\n  12117: { color: [23, 10, 10], opacity: 1, label: 'ctx_rh_G_Ins_lg_and_S_cent_ins' },\n  12118: { color: [225, 140, 140], opacity: 1, label: 'ctx_rh_G_insular_short' },\n  12119: { color: [180, 60, 180], opacity: 1, label: 'ctx_rh_G_occipital_middle' },\n  12120: { color: [20, 220, 60], opacity: 1, label: 'ctx_rh_G_occipital_sup' },\n  12121: { color: [60, 20, 140], opacity: 1, label: 'ctx_rh_G_oc-temp_lat-fusifor' },\n  12122: { color: [220, 180, 140], opacity: 1, label: 'ctx_rh_G_oc-temp_med-Lingual' },\n  12123: { color: [65, 100, 20], opacity: 1, label: 'ctx_rh_G_oc-temp_med-Parahip' },\n  12124: { color: [220, 60, 20], opacity: 1, label: 'ctx_rh_G_orbital' },\n  12125: { color: [20, 60, 220], opacity: 1, label: 'ctx_rh_G_pariet_inf-Angular' },\n  12126: { color: [100, 100, 60], opacity: 1, label: 'ctx_rh_G_pariet_inf-Supramar' },\n  12127: { color: [220, 180, 220], opacity: 1, label: 'ctx_rh_G_parietal_sup' },\n  12128: { color: [20, 180, 140], opacity: 1, label: 'ctx_rh_G_postcentral' },\n  12129: { color: [60, 140, 180], opacity: 1, label: 'ctx_rh_G_precentral' },\n  12130: { color: [25, 20, 140], opacity: 1, label: 'ctx_rh_G_precuneus' },\n  12131: { color: [20, 60, 100], opacity: 1, label: 'ctx_rh_G_rectus' },\n  12132: { color: [60, 220, 20], opacity: 1, label: 'ctx_rh_G_subcallosal' },\n  12133: { color: [60, 60, 220], opacity: 1, label: 'ctx_rh_G_temp_sup-G_T_transv' },\n  12134: { color: [220, 60, 220], opacity: 1, label: 'ctx_rh_G_temp_sup-Lateral' },\n  12135: { color: [65, 220, 60], opacity: 1, label: 'ctx_rh_G_temp_sup-Plan_polar' },\n  12136: { color: [25, 140, 20], opacity: 1, label: 'ctx_rh_G_temp_sup-Plan_tempo' },\n  12137: { color: [220, 220, 100], opacity: 1, label: 'ctx_rh_G_temporal_inf' },\n  12138: { color: [180, 60, 60], opacity: 1, label: 'ctx_rh_G_temporal_middle' },\n  12139: { color: [61, 20, 220], opacity: 1, label: 'ctx_rh_Lat_Fis-ant-Horizont' },\n  12140: { color: [61, 20, 60], opacity: 1, label: 'ctx_rh_Lat_Fis-ant-Vertical' },\n  12141: { color: [61, 60, 100], opacity: 1, label: 'ctx_rh_Lat_Fis-post' },\n  12142: { color: [25, 25, 25], opacity: 1, label: 'ctx_rh_Medial_wall' },\n  12143: { color: [140, 20, 60], opacity: 1, label: 'ctx_rh_Pole_occipital' },\n  12144: { color: [220, 180, 20], opacity: 1, label: 'ctx_rh_Pole_temporal' },\n  12145: { color: [63, 180, 180], opacity: 1, label: 'ctx_rh_S_calcarine' },\n  12146: { color: [221, 20, 10], opacity: 1, label: 'ctx_rh_S_central' },\n  12147: { color: [221, 20, 100], opacity: 1, label: 'ctx_rh_S_cingul-Marginalis' },\n  12148: { color: [221, 60, 140], opacity: 1, label: 'ctx_rh_S_circular_insula_ant' },\n  12149: { color: [221, 20, 220], opacity: 1, label: 'ctx_rh_S_circular_insula_inf' },\n  12150: { color: [61, 220, 220], opacity: 1, label: 'ctx_rh_S_circular_insula_sup' },\n  12151: { color: [100, 200, 200], opacity: 1, label: 'ctx_rh_S_collat_transv_ant' },\n  12152: { color: [10, 200, 200], opacity: 1, label: 'ctx_rh_S_collat_transv_post' },\n  12153: { color: [221, 220, 20], opacity: 1, label: 'ctx_rh_S_front_inf' },\n  12154: { color: [141, 20, 100], opacity: 1, label: 'ctx_rh_S_front_middle' },\n  12155: { color: [61, 220, 100], opacity: 1, label: 'ctx_rh_S_front_sup' },\n  12156: { color: [141, 60, 20], opacity: 1, label: 'ctx_rh_S_interm_prim-Jensen' },\n  12157: { color: [143, 20, 220], opacity: 1, label: 'ctx_rh_S_intrapariet_and_P_trans' },\n  12158: { color: [101, 60, 220], opacity: 1, label: 'ctx_rh_S_oc_middle_and_Lunatus' },\n  12159: { color: [21, 20, 140], opacity: 1, label: 'ctx_rh_S_oc_sup_and_transversal' },\n  12160: { color: [61, 20, 180], opacity: 1, label: 'ctx_rh_S_occipital_ant' },\n  12161: { color: [221, 140, 20], opacity: 1, label: 'ctx_rh_S_oc-temp_lat' },\n  12162: { color: [141, 100, 220], opacity: 1, label: 'ctx_rh_S_oc-temp_med_and_Lingual' },\n  12163: { color: [221, 100, 20], opacity: 1, label: 'ctx_rh_S_orbital_lateral' },\n  12164: { color: [181, 200, 20], opacity: 1, label: 'ctx_rh_S_orbital_med-olfact' },\n  12165: { color: [101, 20, 20], opacity: 1, label: 'ctx_rh_S_orbital-H_Shaped' },\n  12166: { color: [101, 100, 180], opacity: 1, label: 'ctx_rh_S_parieto_occipital' },\n  12167: { color: [181, 220, 20], opacity: 1, label: 'ctx_rh_S_pericallosal' },\n  12168: { color: [21, 140, 200], opacity: 1, label: 'ctx_rh_S_postcentral' },\n  12169: { color: [21, 20, 240], opacity: 1, label: 'ctx_rh_S_precentral-inf-part' },\n  12170: { color: [21, 20, 200], opacity: 1, label: 'ctx_rh_S_precentral-sup-part' },\n  12171: { color: [21, 20, 60], opacity: 1, label: 'ctx_rh_S_suborbital' },\n  12172: { color: [101, 60, 60], opacity: 1, label: 'ctx_rh_S_subparietal' },\n  12173: { color: [21, 180, 180], opacity: 1, label: 'ctx_rh_S_temporal_inf' },\n  12174: { color: [223, 220, 60], opacity: 1, label: 'ctx_rh_S_temporal_sup' },\n  12175: { color: [221, 60, 60], opacity: 1, label: 'ctx_rh_S_temporal_transverse' },\n  13100: { color: [0, 0, 0], opacity: 1, label: 'wm_lh_Unknown' },\n  13101: { color: [23, 220, 60], opacity: 1, label: 'wm_lh_G_and_S_frontomargin' },\n  13102: { color: [23, 60, 180], opacity: 1, label: 'wm_lh_G_and_S_occipital_inf' },\n  13103: { color: [63, 100, 60], opacity: 1, label: 'wm_lh_G_and_S_paracentral' },\n  13104: { color: [63, 20, 220], opacity: 1, label: 'wm_lh_G_and_S_subcentral' },\n  13105: { color: [13, 0, 250], opacity: 1, label: 'wm_lh_G_and_S_transv_frontopol' },\n  13106: { color: [26, 60, 0], opacity: 1, label: 'wm_lh_G_and_S_cingul-Ant' },\n  13107: { color: [26, 60, 75], opacity: 1, label: 'wm_lh_G_and_S_cingul-Mid-Ant' },\n  13108: { color: [26, 60, 150], opacity: 1, label: 'wm_lh_G_and_S_cingul-Mid-Post' },\n  13109: { color: [25, 60, 250], opacity: 1, label: 'wm_lh_G_cingul-Post-dorsal' },\n  13110: { color: [60, 25, 25], opacity: 1, label: 'wm_lh_G_cingul-Post-ventral' },\n  13111: { color: [180, 20, 20], opacity: 1, label: 'wm_lh_G_cuneus' },\n  13112: { color: [220, 20, 100], opacity: 1, label: 'wm_lh_G_front_inf-Opercular' },\n  13113: { color: [140, 60, 60], opacity: 1, label: 'wm_lh_G_front_inf-Orbital' },\n  13114: { color: [180, 220, 140], opacity: 1, label: 'wm_lh_G_front_inf-Triangul' },\n  13115: { color: [140, 100, 180], opacity: 1, label: 'wm_lh_G_front_middle' },\n  13116: { color: [180, 20, 140], opacity: 1, label: 'wm_lh_G_front_sup' },\n  13117: { color: [23, 10, 10], opacity: 1, label: 'wm_lh_G_Ins_lg_and_S_cent_ins' },\n  13118: { color: [225, 140, 140], opacity: 1, label: 'wm_lh_G_insular_short' },\n  13119: { color: [180, 60, 180], opacity: 1, label: 'wm_lh_G_occipital_middle' },\n  13120: { color: [20, 220, 60], opacity: 1, label: 'wm_lh_G_occipital_sup' },\n  13121: { color: [60, 20, 140], opacity: 1, label: 'wm_lh_G_oc-temp_lat-fusifor' },\n  13122: { color: [220, 180, 140], opacity: 1, label: 'wm_lh_G_oc-temp_med-Lingual' },\n  13123: { color: [65, 100, 20], opacity: 1, label: 'wm_lh_G_oc-temp_med-Parahip' },\n  13124: { color: [220, 60, 20], opacity: 1, label: 'wm_lh_G_orbital' },\n  13125: { color: [20, 60, 220], opacity: 1, label: 'wm_lh_G_pariet_inf-Angular' },\n  13126: { color: [100, 100, 60], opacity: 1, label: 'wm_lh_G_pariet_inf-Supramar' },\n  13127: { color: [220, 180, 220], opacity: 1, label: 'wm_lh_G_parietal_sup' },\n  13128: { color: [20, 180, 140], opacity: 1, label: 'wm_lh_G_postcentral' },\n  13129: { color: [60, 140, 180], opacity: 1, label: 'wm_lh_G_precentral' },\n  13130: { color: [25, 20, 140], opacity: 1, label: 'wm_lh_G_precuneus' },\n  13131: { color: [20, 60, 100], opacity: 1, label: 'wm_lh_G_rectus' },\n  13132: { color: [60, 220, 20], opacity: 1, label: 'wm_lh_G_subcallosal' },\n  13133: { color: [60, 60, 220], opacity: 1, label: 'wm_lh_G_temp_sup-G_T_transv' },\n  13134: { color: [220, 60, 220], opacity: 1, label: 'wm_lh_G_temp_sup-Lateral' },\n  13135: { color: [65, 220, 60], opacity: 1, label: 'wm_lh_G_temp_sup-Plan_polar' },\n  13136: { color: [25, 140, 20], opacity: 1, label: 'wm_lh_G_temp_sup-Plan_tempo' },\n  13137: { color: [220, 220, 100], opacity: 1, label: 'wm_lh_G_temporal_inf' },\n  13138: { color: [180, 60, 60], opacity: 1, label: 'wm_lh_G_temporal_middle' },\n  13139: { color: [61, 20, 220], opacity: 1, label: 'wm_lh_Lat_Fis-ant-Horizont' },\n  13140: { color: [61, 20, 60], opacity: 1, label: 'wm_lh_Lat_Fis-ant-Vertical' },\n  13141: { color: [61, 60, 100], opacity: 1, label: 'wm_lh_Lat_Fis-post' },\n  13142: { color: [25, 25, 25], opacity: 1, label: 'wm_lh_Medial_wall' },\n  13143: { color: [140, 20, 60], opacity: 1, label: 'wm_lh_Pole_occipital' },\n  13144: { color: [220, 180, 20], opacity: 1, label: 'wm_lh_Pole_temporal' },\n  13145: { color: [63, 180, 180], opacity: 1, label: 'wm_lh_S_calcarine' },\n  13146: { color: [221, 20, 10], opacity: 1, label: 'wm_lh_S_central' },\n  13147: { color: [221, 20, 100], opacity: 1, label: 'wm_lh_S_cingul-Marginalis' },\n  13148: { color: [221, 60, 140], opacity: 1, label: 'wm_lh_S_circular_insula_ant' },\n  13149: { color: [221, 20, 220], opacity: 1, label: 'wm_lh_S_circular_insula_inf' },\n  13150: { color: [61, 220, 220], opacity: 1, label: 'wm_lh_S_circular_insula_sup' },\n  13151: { color: [100, 200, 200], opacity: 1, label: 'wm_lh_S_collat_transv_ant' },\n  13152: { color: [10, 200, 200], opacity: 1, label: 'wm_lh_S_collat_transv_post' },\n  13153: { color: [221, 220, 20], opacity: 1, label: 'wm_lh_S_front_inf' },\n  13154: { color: [141, 20, 100], opacity: 1, label: 'wm_lh_S_front_middle' },\n  13155: { color: [61, 220, 100], opacity: 1, label: 'wm_lh_S_front_sup' },\n  13156: { color: [141, 60, 20], opacity: 1, label: 'wm_lh_S_interm_prim-Jensen' },\n  13157: { color: [143, 20, 220], opacity: 1, label: 'wm_lh_S_intrapariet_and_P_trans' },\n  13158: { color: [101, 60, 220], opacity: 1, label: 'wm_lh_S_oc_middle_and_Lunatus' },\n  13159: { color: [21, 20, 140], opacity: 1, label: 'wm_lh_S_oc_sup_and_transversal' },\n  13160: { color: [61, 20, 180], opacity: 1, label: 'wm_lh_S_occipital_ant' },\n  13161: { color: [221, 140, 20], opacity: 1, label: 'wm_lh_S_oc-temp_lat' },\n  13162: { color: [141, 100, 220], opacity: 1, label: 'wm_lh_S_oc-temp_med_and_Lingual' },\n  13163: { color: [221, 100, 20], opacity: 1, label: 'wm_lh_S_orbital_lateral' },\n  13164: { color: [181, 200, 20], opacity: 1, label: 'wm_lh_S_orbital_med-olfact' },\n  13165: { color: [101, 20, 20], opacity: 1, label: 'wm_lh_S_orbital-H_Shaped' },\n  13166: { color: [101, 100, 180], opacity: 1, label: 'wm_lh_S_parieto_occipital' },\n  13167: { color: [181, 220, 20], opacity: 1, label: 'wm_lh_S_pericallosal' },\n  13168: { color: [21, 140, 200], opacity: 1, label: 'wm_lh_S_postcentral' },\n  13169: { color: [21, 20, 240], opacity: 1, label: 'wm_lh_S_precentral-inf-part' },\n  13170: { color: [21, 20, 200], opacity: 1, label: 'wm_lh_S_precentral-sup-part' },\n  13171: { color: [21, 20, 60], opacity: 1, label: 'wm_lh_S_suborbital' },\n  13172: { color: [101, 60, 60], opacity: 1, label: 'wm_lh_S_subparietal' },\n  13173: { color: [21, 180, 180], opacity: 1, label: 'wm_lh_S_temporal_inf' },\n  13174: { color: [223, 220, 60], opacity: 1, label: 'wm_lh_S_temporal_sup' },\n  13175: { color: [221, 60, 60], opacity: 1, label: 'wm_lh_S_temporal_transverse' },\n  14100: { color: [0, 0, 0], opacity: 1, label: 'wm_rh_Unknown' },\n  14101: { color: [23, 220, 60], opacity: 1, label: 'wm_rh_G_and_S_frontomargin' },\n  14102: { color: [23, 60, 180], opacity: 1, label: 'wm_rh_G_and_S_occipital_inf' },\n  14103: { color: [63, 100, 60], opacity: 1, label: 'wm_rh_G_and_S_paracentral' },\n  14104: { color: [63, 20, 220], opacity: 1, label: 'wm_rh_G_and_S_subcentral' },\n  14105: { color: [13, 0, 250], opacity: 1, label: 'wm_rh_G_and_S_transv_frontopol' },\n  14106: { color: [26, 60, 0], opacity: 1, label: 'wm_rh_G_and_S_cingul-Ant' },\n  14107: { color: [26, 60, 75], opacity: 1, label: 'wm_rh_G_and_S_cingul-Mid-Ant' },\n  14108: { color: [26, 60, 150], opacity: 1, label: 'wm_rh_G_and_S_cingul-Mid-Post' },\n  14109: { color: [25, 60, 250], opacity: 1, label: 'wm_rh_G_cingul-Post-dorsal' },\n  14110: { color: [60, 25, 25], opacity: 1, label: 'wm_rh_G_cingul-Post-ventral' },\n  14111: { color: [180, 20, 20], opacity: 1, label: 'wm_rh_G_cuneus' },\n  14112: { color: [220, 20, 100], opacity: 1, label: 'wm_rh_G_front_inf-Opercular' },\n  14113: { color: [140, 60, 60], opacity: 1, label: 'wm_rh_G_front_inf-Orbital' },\n  14114: { color: [180, 220, 140], opacity: 1, label: 'wm_rh_G_front_inf-Triangul' },\n  14115: { color: [140, 100, 180], opacity: 1, label: 'wm_rh_G_front_middle' },\n  14116: { color: [180, 20, 140], opacity: 1, label: 'wm_rh_G_front_sup' },\n  14117: { color: [23, 10, 10], opacity: 1, label: 'wm_rh_G_Ins_lg_and_S_cent_ins' },\n  14118: { color: [225, 140, 140], opacity: 1, label: 'wm_rh_G_insular_short' },\n  14119: { color: [180, 60, 180], opacity: 1, label: 'wm_rh_G_occipital_middle' },\n  14120: { color: [20, 220, 60], opacity: 1, label: 'wm_rh_G_occipital_sup' },\n  14121: { color: [60, 20, 140], opacity: 1, label: 'wm_rh_G_oc-temp_lat-fusifor' },\n  14122: { color: [220, 180, 140], opacity: 1, label: 'wm_rh_G_oc-temp_med-Lingual' },\n  14123: { color: [65, 100, 20], opacity: 1, label: 'wm_rh_G_oc-temp_med-Parahip' },\n  14124: { color: [220, 60, 20], opacity: 1, label: 'wm_rh_G_orbital' },\n  14125: { color: [20, 60, 220], opacity: 1, label: 'wm_rh_G_pariet_inf-Angular' },\n  14126: { color: [100, 100, 60], opacity: 1, label: 'wm_rh_G_pariet_inf-Supramar' },\n  14127: { color: [220, 180, 220], opacity: 1, label: 'wm_rh_G_parietal_sup' },\n  14128: { color: [20, 180, 140], opacity: 1, label: 'wm_rh_G_postcentral' },\n  14129: { color: [60, 140, 180], opacity: 1, label: 'wm_rh_G_precentral' },\n  14130: { color: [25, 20, 140], opacity: 1, label: 'wm_rh_G_precuneus' },\n  14131: { color: [20, 60, 100], opacity: 1, label: 'wm_rh_G_rectus' },\n  14132: { color: [60, 220, 20], opacity: 1, label: 'wm_rh_G_subcallosal' },\n  14133: { color: [60, 60, 220], opacity: 1, label: 'wm_rh_G_temp_sup-G_T_transv' },\n  14134: { color: [220, 60, 220], opacity: 1, label: 'wm_rh_G_temp_sup-Lateral' },\n  14135: { color: [65, 220, 60], opacity: 1, label: 'wm_rh_G_temp_sup-Plan_polar' },\n  14136: { color: [25, 140, 20], opacity: 1, label: 'wm_rh_G_temp_sup-Plan_tempo' },\n  14137: { color: [220, 220, 100], opacity: 1, label: 'wm_rh_G_temporal_inf' },\n  14138: { color: [180, 60, 60], opacity: 1, label: 'wm_rh_G_temporal_middle' },\n  14139: { color: [61, 20, 220], opacity: 1, label: 'wm_rh_Lat_Fis-ant-Horizont' },\n  14140: { color: [61, 20, 60], opacity: 1, label: 'wm_rh_Lat_Fis-ant-Vertical' },\n  14141: { color: [61, 60, 100], opacity: 1, label: 'wm_rh_Lat_Fis-post' },\n  14142: { color: [25, 25, 25], opacity: 1, label: 'wm_rh_Medial_wall' },\n  14143: { color: [140, 20, 60], opacity: 1, label: 'wm_rh_Pole_occipital' },\n  14144: { color: [220, 180, 20], opacity: 1, label: 'wm_rh_Pole_temporal' },\n  14145: { color: [63, 180, 180], opacity: 1, label: 'wm_rh_S_calcarine' },\n  14146: { color: [221, 20, 10], opacity: 1, label: 'wm_rh_S_central' },\n  14147: { color: [221, 20, 100], opacity: 1, label: 'wm_rh_S_cingul-Marginalis' },\n  14148: { color: [221, 60, 140], opacity: 1, label: 'wm_rh_S_circular_insula_ant' },\n  14149: { color: [221, 20, 220], opacity: 1, label: 'wm_rh_S_circular_insula_inf' },\n  14150: { color: [61, 220, 220], opacity: 1, label: 'wm_rh_S_circular_insula_sup' },\n  14151: { color: [100, 200, 200], opacity: 1, label: 'wm_rh_S_collat_transv_ant' },\n  14152: { color: [10, 200, 200], opacity: 1, label: 'wm_rh_S_collat_transv_post' },\n  14153: { color: [221, 220, 20], opacity: 1, label: 'wm_rh_S_front_inf' },\n  14154: { color: [141, 20, 100], opacity: 1, label: 'wm_rh_S_front_middle' },\n  14155: { color: [61, 220, 100], opacity: 1, label: 'wm_rh_S_front_sup' },\n  14156: { color: [141, 60, 20], opacity: 1, label: 'wm_rh_S_interm_prim-Jensen' },\n  14157: { color: [143, 20, 220], opacity: 1, label: 'wm_rh_S_intrapariet_and_P_trans' },\n  14158: { color: [101, 60, 220], opacity: 1, label: 'wm_rh_S_oc_middle_and_Lunatus' },\n  14159: { color: [21, 20, 140], opacity: 1, label: 'wm_rh_S_oc_sup_and_transversal' },\n  14160: { color: [61, 20, 180], opacity: 1, label: 'wm_rh_S_occipital_ant' },\n  14161: { color: [221, 140, 20], opacity: 1, label: 'wm_rh_S_oc-temp_lat' },\n  14162: { color: [141, 100, 220], opacity: 1, label: 'wm_rh_S_oc-temp_med_and_Lingual' },\n  14163: { color: [221, 100, 20], opacity: 1, label: 'wm_rh_S_orbital_lateral' },\n  14164: { color: [181, 200, 20], opacity: 1, label: 'wm_rh_S_orbital_med-olfact' },\n  14165: { color: [101, 20, 20], opacity: 1, label: 'wm_rh_S_orbital-H_Shaped' },\n  14166: { color: [101, 100, 180], opacity: 1, label: 'wm_rh_S_parieto_occipital' },\n  14167: { color: [181, 220, 20], opacity: 1, label: 'wm_rh_S_pericallosal' },\n  14168: { color: [21, 140, 200], opacity: 1, label: 'wm_rh_S_postcentral' },\n  14169: { color: [21, 20, 240], opacity: 1, label: 'wm_rh_S_precentral-inf-part' },\n  14170: { color: [21, 20, 200], opacity: 1, label: 'wm_rh_S_precentral-sup-part' },\n  14171: { color: [21, 20, 60], opacity: 1, label: 'wm_rh_S_suborbital' },\n  14172: { color: [101, 60, 60], opacity: 1, label: 'wm_rh_S_subparietal' },\n  14173: { color: [21, 180, 180], opacity: 1, label: 'wm_rh_S_temporal_inf' },\n  14174: { color: [223, 220, 60], opacity: 1, label: 'wm_rh_S_temporal_sup' },\n  14175: { color: [221, 60, 60], opacity: 1, label: 'wm_rh_S_temporal_transverse' },\n};\n\nexport default segmentationFs;\n","/**\n * @module presets/segmentation\n */\n\nimport freesurferSegmentation from './presets.segmentation.freesurfer';\n\nexport default class PresetsSegmentation {\n  constructor(presetID = 'Freesurfer') {\n    this._presetID = presetID;\n    this._presets = this.presetSegs();\n  }\n\n  set preset(targetPreset) {\n    this._presetID = targetPreset;\n  }\n\n  get preset() {\n    return this.fetchPreset(this._presetID);\n  }\n\n  fetchPreset(presetID) {\n    let presets = this._presets;\n    return presets[presetID];\n  }\n\n  addPreset(presetObj) {\n    this._presets.push(presetObj);\n  }\n\n  presetsAvailable(type = 'segmentation') {\n    let available = [];\n    let presets = this._presets;\n\n    for (let i in presets) {\n      available.push(i);\n    }\n\n    return available;\n  }\n\n  presetSegs() {\n    return {\n      Freesurfer: freesurferSegmentation,\n    };\n  }\n}\n","import ShadersBase from '../shaders.base';\n\n/**\n * Set of methods to unpack values from [r][b][g][a] -> float\n */\nclass Unpack extends ShadersBase {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n    this.name = 'unpack';\n\n    // default properties names\n    this._packedData = 'packedData';\n    this._offset = 'offset';\n    this._unpackedData = 'unpackedData';\n\n    this._base._uniforms = {\n      uNumberOfChannels: {\n        value: 1,\n      },\n      uBitsAllocated: {\n        value: 16,\n      },\n      uPixelType: {\n        value: 0,\n      },\n    };\n  }\n\n  api(\n    baseFragment = this._base,\n    packedData = this._packedData,\n    offset = this._offset,\n    unpackedData = this._unpackedData\n  ) {\n    this._base = baseFragment;\n    return this.compute(packedData, offset, unpackedData);\n  }\n\n  compute(packedData, offset, unpackedData) {\n    this.computeDefinition();\n    this._base._functions[this._name] = this._definition;\n    return `${this._name}(${packedData}, ${offset}, ${unpackedData});`;\n  }\n\n  computeDefinition() {\n    // fun stuff\n    let content = '';\n    if (this._base._uniforms.uNumberOfChannels.value === 1) {\n      switch (this._base._uniforms.uBitsAllocated.value) {\n        case 1:\n        case 8:\n          content = this.upack8();\n          break;\n\n        case 16:\n          content = this.upack16();\n          break;\n\n        case 32:\n          content = this.upack32();\n          break;\n\n        default:\n          content = this.upackIdentity();\n          break;\n      }\n    } else {\n      content = this.upackIdentity();\n    }\n\n    this._definition = `\nvoid ${this._name}(in vec4 packedData, in int offset, out vec4 unpackedData){\n\n${content}\n\n}  \n    `;\n  }\n\n  upack8() {\n    this._base._functions['uInt8'] = this.uInt8();\n\n    return `\nfloat floatedOffset = float(offset);\nfloat floatedOffsetSquared = floatedOffset * floatedOffset;\nuInt8(\n  step( floatedOffsetSquared , 0.0 ) * packedData.r +\n  step( floatedOffsetSquared - 2. * floatedOffset + 1., 0.0 ) * packedData.g +\n  step( floatedOffsetSquared - 2. * 2. *  floatedOffset + 4., 0.0 ) * packedData.b +\n  step( floatedOffsetSquared - 2. * 3. *  floatedOffset + 9., 0.0 ) * packedData.a\n  ,\n  unpackedData.x);\n    `;\n  }\n\n  upack16() {\n    this._base._functions['uInt16'] = this.uInt16();\n\n    return `\nfloat floatedOffset = float(offset);\nuInt16(\n  packedData.r * (1. - floatedOffset) + packedData.b * floatedOffset,\n  packedData.g * (1. - floatedOffset) + packedData.a * floatedOffset,\n  unpackedData.x);\n    `;\n  }\n\n  upack32() {\n    if (this._base._uniforms.uPixelType.value === 0) {\n      this._base._functions['uInt32'] = this.uInt32();\n\n      return `\nuInt32(\n  packedData.r,\n  packedData.g,\n  packedData.b,\n  packedData.a,\n  unpackedData.x);\n      `;\n    } else {\n      this._base._functions['uFloat32'] = this.uFloat32();\n\n      return `\nuFloat32(\n  packedData.r,\n  packedData.g,\n  packedData.b,\n  packedData.a,\n  unpackedData.x);\n      `;\n    }\n  }\n\n  upackIdentity() {\n    return `\nunpackedData = packedData;\n      `;\n  }\n\n  uInt8() {\n    return `\nvoid uInt8(in float r, out float value){\n  value = r * 255.;\n}\n    `;\n  }\n\n  uInt16() {\n    return `\nvoid uInt16(in float r, in float a, out float value){\n  value = r * 255. + a * 255. * 256.;\n}\n    `;\n  }\n\n  uInt32() {\n    return `\nvoid uInt32(in float r, in float g, in float b, in float a, out float value){\n  value = r * 255. + g * 255. * 256. + b * 255. * 256. * 256. + a * 255. * 256. * 256. * 256.;\n  // value = r * 255. + g * 65025. + b * 16581375. + a * 4228250625.;\n}\n    `;\n  }\n\n  uFloat32() {\n    return `\nvoid uFloat32(in float r, in float g, in float b, in float a, out float value){\n\n  // create arrays containing bits for rgba values\n  // value between 0 and 255\n  value = r * 255.;\n  int bytemeR[8];\n  bytemeR[0] = int(floor(value / 128.));\n  value -= float(bytemeR[0] * 128);\n  bytemeR[1] = int(floor(value / 64.));\n  value -= float(bytemeR[1] * 64);\n  bytemeR[2] = int(floor(value / 32.));\n  value -= float(bytemeR[2] * 32);\n  bytemeR[3] = int(floor(value / 16.));\n  value -= float(bytemeR[3] * 16);\n  bytemeR[4] = int(floor(value / 8.));\n  value -= float(bytemeR[4] * 8);\n  bytemeR[5] = int(floor(value / 4.));\n  value -= float(bytemeR[5] * 4);\n  bytemeR[6] = int(floor(value / 2.));\n  value -= float(bytemeR[6] * 2);\n  bytemeR[7] = int(floor(value));\n\n  value = g * 255.;\n  int bytemeG[8];\n  bytemeG[0] = int(floor(value / 128.));\n  value -= float(bytemeG[0] * 128);\n  bytemeG[1] = int(floor(value / 64.));\n  value -= float(bytemeG[1] * 64);\n  bytemeG[2] = int(floor(value / 32.));\n  value -= float(bytemeG[2] * 32);\n  bytemeG[3] = int(floor(value / 16.));\n  value -= float(bytemeG[3] * 16);\n  bytemeG[4] = int(floor(value / 8.));\n  value -= float(bytemeG[4] * 8);\n  bytemeG[5] = int(floor(value / 4.));\n  value -= float(bytemeG[5] * 4);\n  bytemeG[6] = int(floor(value / 2.));\n  value -= float(bytemeG[6] * 2);\n  bytemeG[7] = int(floor(value));\n\n  value = b * 255.;\n  int bytemeB[8];\n  bytemeB[0] = int(floor(value / 128.));\n  value -= float(bytemeB[0] * 128);\n  bytemeB[1] = int(floor(value / 64.));\n  value -= float(bytemeB[1] * 64);\n  bytemeB[2] = int(floor(value / 32.));\n  value -= float(bytemeB[2] * 32);\n  bytemeB[3] = int(floor(value / 16.));\n  value -= float(bytemeB[3] * 16);\n  bytemeB[4] = int(floor(value / 8.));\n  value -= float(bytemeB[4] * 8);\n  bytemeB[5] = int(floor(value / 4.));\n  value -= float(bytemeB[5] * 4);\n  bytemeB[6] = int(floor(value / 2.));\n  value -= float(bytemeB[6] * 2);\n  bytemeB[7] = int(floor(value));\n\n  value = a * 255.;\n  int bytemeA[8];\n  bytemeA[0] = int(floor(value / 128.));\n  value -= float(bytemeA[0] * 128);\n  bytemeA[1] = int(floor(value / 64.));\n  value -= float(bytemeA[1] * 64);\n  bytemeA[2] = int(floor(value / 32.));\n  value -= float(bytemeA[2] * 32);\n  bytemeA[3] = int(floor(value / 16.));\n  value -= float(bytemeA[3] * 16);\n  bytemeA[4] = int(floor(value / 8.));\n  value -= float(bytemeA[4] * 8);\n  bytemeA[5] = int(floor(value / 4.));\n  value -= float(bytemeA[5] * 4);\n  bytemeA[6] = int(floor(value / 2.));\n  value -= float(bytemeA[6] * 2);\n  bytemeA[7] = int(floor(value));\n\n  // compute float32 value from bit arrays\n\n  // sign\n  int issigned = 1 - 2 * bytemeR[0];\n  //   issigned = int(pow(-1., float(bytemeR[0])));\n\n  // exponent\n  int exponent = 0;\n\n  exponent += bytemeR[1] * int(pow(2., 7.));\n  exponent += bytemeR[2] * int(pow(2., 6.));\n  exponent += bytemeR[3] * int(pow(2., 5.));\n  exponent += bytemeR[4] * int(pow(2., 4.));\n  exponent += bytemeR[5] * int(pow(2., 3.));\n  exponent += bytemeR[6] * int(pow(2., 2.));\n  exponent += bytemeR[7] * int(pow(2., 1.));\n\n  exponent += bytemeG[0];\n\n\n  // fraction\n  float fraction = 0.;\n\n  fraction = float(bytemeG[1]) * pow(2., -1.);\n  fraction += float(bytemeG[2]) * pow(2., -2.);\n  fraction += float(bytemeG[3]) * pow(2., -3.);\n  fraction += float(bytemeG[4]) * pow(2., -4.);\n  fraction += float(bytemeG[5]) * pow(2., -5.);\n  fraction += float(bytemeG[6]) * pow(2., -6.);\n  fraction += float(bytemeG[7]) * pow(2., -7.);\n\n  fraction += float(bytemeB[0]) * pow(2., -8.);\n  fraction += float(bytemeB[1]) * pow(2., -9.);\n  fraction += float(bytemeB[2]) * pow(2., -10.);\n  fraction += float(bytemeB[3]) * pow(2., -11.);\n  fraction += float(bytemeB[4]) * pow(2., -12.);\n  fraction += float(bytemeB[5]) * pow(2., -13.);\n  fraction += float(bytemeB[6]) * pow(2., -14.);\n  fraction += float(bytemeB[7]) * pow(2., -15.);\n\n  fraction += float(bytemeA[0]) * pow(2., -16.);\n  fraction += float(bytemeA[1]) * pow(2., -17.);\n  fraction += float(bytemeA[2]) * pow(2., -18.);\n  fraction += float(bytemeA[3]) * pow(2., -19.);\n  fraction += float(bytemeA[4]) * pow(2., -20.);\n  fraction += float(bytemeA[5]) * pow(2., -21.);\n  fraction += float(bytemeA[6]) * pow(2., -22.);\n  fraction += float(bytemeA[7]) * pow(2., -23.);\n\n  value = float(issigned) * pow( 2., float(exponent - 127)) * (1. + fraction);\n}\n    `;\n  }\n}\n\nexport default new Unpack();\n","import ShadersBase from '../shaders.base';\n\nclass Texture3d extends ShadersBase {\n  constructor() {\n    super();\n    this.name = 'texture3d';\n\n    // default properties names\n    this._dataCoordinates = 'dataCoordinates';\n    this._dataValue = 'dataValue';\n    this._offset = 'offset';\n  }\n\n  api(\n    baseFragment = this._base,\n    dataCoordinates = this._dataCoordinates,\n    dataValue = this._dataValue,\n    offset = this._offset\n  ) {\n    this._base = baseFragment;\n    return this.compute(dataCoordinates, dataValue, offset);\n  }\n\n  compute(dataCoordinates, dataValue, offset) {\n    this.computeDefinition();\n    this._base._functions[this._name] = this._definition;\n    return `${this._name}(${dataCoordinates}, ${dataValue}, ${offset});`;\n  }\n\n  computeDefinition() {\n    let content = `\n      step( abs( textureIndexF - 0.0 ), 0.0 ) * texture2D(uTextureContainer[0], uv) +\n      step( abs( textureIndexF - 1.0 ), 0.0 ) * texture2D(uTextureContainer[1], uv) +\n      step( abs( textureIndexF - 2.0 ), 0.0 ) * texture2D(uTextureContainer[2], uv) +\n      step( abs( textureIndexF - 3.0 ), 0.0 ) * texture2D(uTextureContainer[3], uv) +\n      step( abs( textureIndexF - 4.0 ), 0.0 ) * texture2D(uTextureContainer[4], uv) +\n      step( abs( textureIndexF - 5.0 ), 0.0 ) * texture2D(uTextureContainer[5], uv) +\n      step( abs( textureIndexF - 6.0 ), 0.0 ) * texture2D(uTextureContainer[6], uv)`;\n\n    if (this._base._uniforms.uTextureContainer.length === 14) {\n      content += ` +\n      step( abs( textureIndexF - 7.0 ), 0.0 ) * texture2D(uTextureContainer[7], uv) +\n      step( abs( textureIndexF - 8.0 ), 0.0 ) * texture2D(uTextureContainer[8], uv) +\n      step( abs( textureIndexF - 9.0 ), 0.0 ) * texture2D(uTextureContainer[9], uv) +\n      step( abs( textureIndexF - 10.0 ), 0.0 ) * texture2D(uTextureContainer[10], uv) +\n      step( abs( textureIndexF - 11.0 ), 0.0 ) * texture2D(uTextureContainer[11], uv) +\n      step( abs( textureIndexF - 12.0 ), 0.0 ) * texture2D(uTextureContainer[12], uv) +\n      step( abs( textureIndexF - 13.0 ), 0.0 ) * texture2D(uTextureContainer[13], uv)`;\n    }\n\n    this._definition = `\nvoid ${this._name}(in ivec3 dataCoordinates, out vec4 dataValue, out int offset){\n  float textureSizeF = float(uTextureSize);\n  int voxelsPerTexture = uTextureSize*uTextureSize;\n\n  int index = dataCoordinates.x\n            + dataCoordinates.y * uDataDimensions.x\n            + dataCoordinates.z * uDataDimensions.y * uDataDimensions.x;\n  \n  // dividing an integer by an integer will give you an integer result, rounded down\n  // can not get float numbers to work :(\n  int packedIndex = index/uPackedPerPixel;\n  offset = index - uPackedPerPixel*packedIndex;\n\n  // Map data index to right sampler2D texture\n  int textureIndex = packedIndex/voxelsPerTexture;\n  int inTextureIndex = packedIndex - voxelsPerTexture*textureIndex;\n\n  // Get row and column in the texture\n  int rowIndex = inTextureIndex/uTextureSize;\n  float rowIndexF = float(rowIndex);\n  float colIndex = float(inTextureIndex - uTextureSize * rowIndex);\n\n  // Map row and column to uv\n  vec2 uv = vec2(0,0);\n  uv.x = (0.5 + colIndex) / textureSizeF;\n  uv.y = 1. - (0.5 + rowIndexF) / textureSizeF;\n\n  float textureIndexF = float(textureIndex);\n  dataValue = vec4(0.) + ${content};\n}\n    `;\n  }\n}\n\nexport default new Texture3d();\n","import ShadersBase from '../shaders.base';\nimport Unpack from '../helpers/shaders.helpers.unpack';\nimport Texture3d from '../helpers/shaders.helpers.texture3d';\n\nclass InterpolationIdentity extends ShadersBase {\n  constructor() {\n    super();\n    this.name = 'interpolationIdentity';\n\n    // default properties names\n    this._currentVoxel = 'currentVoxel';\n    this._dataValue = 'dataValue';\n  }\n\n  api(baseFragment = this._base, currentVoxel = this._currentVoxel, dataValue = this._dataValue) {\n    this._base = baseFragment;\n    return this.compute(currentVoxel, dataValue);\n  }\n\n  compute(currentVoxel, dataValue) {\n    this.computeDefinition();\n    this._base._functions[this._name] = this._definition;\n    return `${this._name}(${currentVoxel}, ${dataValue});`;\n  }\n\n  computeDefinition() {\n    this._definition = `\nvoid ${this._name}(in vec3 currentVoxel, out vec4 dataValue){\n  // lower bound\n  vec3 rcurrentVoxel = vec3(floor(currentVoxel.x + 0.5 ), floor(currentVoxel.y + 0.5 ), floor(currentVoxel.z + 0.5 ));\n  ivec3 voxel = ivec3(int(rcurrentVoxel.x), int(rcurrentVoxel.y), int(rcurrentVoxel.z));\n\n  vec4 tmp = vec4(0., 0., 0., 0.);\n  int offset = 0;\n\n  ${Texture3d.api(this._base, 'voxel', 'tmp', 'offset')}\n  ${Unpack.api(this._base, 'tmp', 'offset', 'dataValue')}\n}\n    `;\n  }\n}\n\nexport default new InterpolationIdentity();\n","import ShadersBase from '../shaders.base';\nimport InterpolationIdentity from './shaders.interpolation.identity';\n\nclass InterpolationTrilinear extends ShadersBase {\n  constructor() {\n    super();\n    this.name = 'interpolationTrilinear';\n\n    // default properties names\n    this._currentVoxel = 'currentVoxel';\n    this._dataValue = 'dataValue';\n    this._gradient = 'gradient';\n  }\n\n  api(\n    baseFragment = this._base,\n    currentVoxel = this._currentVoxel,\n    dataValue = this._dataValue,\n    gradient = this._gradient\n  ) {\n    this._base = baseFragment;\n    return this.compute(currentVoxel, dataValue, gradient);\n  }\n\n  compute(currentVoxel, dataValue, gradient) {\n    this.computeDefinition();\n    this._base._functions[this._name] = this._definition;\n    return `${this._name}(${currentVoxel}, ${dataValue}, ${gradient});`;\n  }\n\n  computeDefinition() {\n    this._definition = `\nvoid trilinearInterpolation(\n  in vec3 normalizedPosition,\n  out vec4 interpolatedValue,\n  in vec4 v000, in vec4 v100,\n  in vec4 v001, in vec4 v101,\n  in vec4 v010, in vec4 v110,\n  in vec4 v011, in vec4 v111) {\n  // https://en.wikipedia.org/wiki/Trilinear_interpolation\n  vec4 c00 = v000 * ( 1.0 - normalizedPosition.x ) + v100 * normalizedPosition.x;\n  vec4 c01 = v001 * ( 1.0 - normalizedPosition.x ) + v101 * normalizedPosition.x;\n  vec4 c10 = v010 * ( 1.0 - normalizedPosition.x ) + v110 * normalizedPosition.x;\n  vec4 c11 = v011 * ( 1.0 - normalizedPosition.x ) + v111 * normalizedPosition.x;\n\n  // c0 and c1\n  vec4 c0 = c00 * ( 1.0 - normalizedPosition.y) + c10 * normalizedPosition.y;\n  vec4 c1 = c01 * ( 1.0 - normalizedPosition.y) + c11 * normalizedPosition.y;\n\n  // c\n  vec4 c = c0 * ( 1.0 - normalizedPosition.z) + c1 * normalizedPosition.z;\n  interpolatedValue = c;\n}\n\nvoid ${this._name}(in vec3 currentVoxel, out vec4 dataValue, out vec3 gradient){\n\n  vec3 lower_bound = floor(currentVoxel);\n  lower_bound = max(vec3(0.), lower_bound);\n  \n  vec3 higher_bound = lower_bound + vec3(1.);\n\n  vec3 normalizedPosition = (currentVoxel - lower_bound);\n  normalizedPosition =  max(vec3(0.), normalizedPosition);\n\n  vec4 interpolatedValue = vec4(0.);\n\n  //\n  // fetch values required for interpolation\n  //\n  vec4 v000 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec3 c000 = vec3(lower_bound.x, lower_bound.y, lower_bound.z);\n  ${InterpolationIdentity.api(this._base, 'c000', 'v000')}\n\n  //\n  vec4 v100 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec3 c100 = vec3(higher_bound.x, lower_bound.y, lower_bound.z);\n  ${InterpolationIdentity.api(this._base, 'c100', 'v100')}\n\n  //\n  vec4 v001 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec3 c001 = vec3(lower_bound.x, lower_bound.y, higher_bound.z);\n  ${InterpolationIdentity.api(this._base, 'c001', 'v001')}\n\n  //\n  vec4 v101 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec3 c101 = vec3(higher_bound.x, lower_bound.y, higher_bound.z);\n  ${InterpolationIdentity.api(this._base, 'c101', 'v101')}\n  \n  //\n  vec4 v010 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec3 c010 = vec3(lower_bound.x, higher_bound.y, lower_bound.z);\n  ${InterpolationIdentity.api(this._base, 'c010', 'v010')}\n\n  vec4 v110 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec3 c110 = vec3(higher_bound.x, higher_bound.y, lower_bound.z);\n  ${InterpolationIdentity.api(this._base, 'c110', 'v110')}\n\n  //\n  vec4 v011 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec3 c011 = vec3(lower_bound.x, higher_bound.y, higher_bound.z);\n  ${InterpolationIdentity.api(this._base, 'c011', 'v011')}\n\n  vec4 v111 = vec4(0.0, 0.0, 0.0, 0.0);\n  vec3 c111 = vec3(higher_bound.x, higher_bound.y, higher_bound.z);\n  ${InterpolationIdentity.api(this._base, 'c111', 'v111')}\n\n  // compute interpolation at position\n  trilinearInterpolation(normalizedPosition, interpolatedValue ,v000, v100, v001, v101, v010,v110, v011,v111);\n  dataValue = interpolatedValue;\n\n  // That breaks shading in volume rendering\n  // if (gradient.x == 1.) { // skip gradient calculation for slice helper\n  //  return;\n  // }\n\n  // compute gradient\n  float gradientStep = 0.005;\n\n  // x axis\n  vec3 g100 = vec3(1., 0., 0.);\n  vec3 ng100 = normalizedPosition + g100 * gradientStep;\n  ng100.x = min(1., ng100.x);\n\n  vec4 vg100 = vec4(0.);\n  trilinearInterpolation(ng100, vg100 ,v000, v100, v001, v101, v010,v110, v011,v111);\n\n  vec3 go100 = -g100;\n  vec3 ngo100 = normalizedPosition + go100 * gradientStep;\n  ngo100.x = max(0., ngo100.x);\n\n  vec4 vgo100 = vec4(0.);\n  trilinearInterpolation(ngo100, vgo100 ,v000, v100, v001, v101, v010,v110, v011,v111);\n\n  gradient.x = (g100.x * vg100.x + go100.x * vgo100.x);\n\n  // y axis\n  vec3 g010 = vec3(0., 1., 0.);\n  vec3 ng010 = normalizedPosition + g010 * gradientStep;\n  ng010.y = min(1., ng010.y);\n\n  vec4 vg010 = vec4(0.);\n  trilinearInterpolation(ng010, vg010 ,v000, v100, v001, v101, v010,v110, v011,v111);\n\n  vec3 go010 = -g010;\n  vec3 ngo010 = normalizedPosition + go010 * gradientStep;\n  ngo010.y = max(0., ngo010.y);\n\n  vec4 vgo010 = vec4(0.);\n  trilinearInterpolation(ngo010, vgo010 ,v000, v100, v001, v101, v010,v110, v011,v111);\n\n  gradient.y = (g010.y * vg010.x + go010.y * vgo010.x);\n\n  // z axis\n  vec3 g001 = vec3(0., 0., 1.);\n  vec3 ng001 = normalizedPosition + g001 * gradientStep;\n  ng001.z = min(1., ng001.z);\n\n  vec4 vg001 = vec4(0.);\n  trilinearInterpolation(ng001, vg001 ,v000, v100, v001, v101, v010,v110, v011,v111);\n\n  vec3 go001 = -g001;\n  vec3 ngo001 = normalizedPosition + go001 * gradientStep;\n  ngo001.z = max(0., ngo001.z);\n\n  vec4 vgo001 = vec4(0.);\n  trilinearInterpolation(ngo001, vgo001 ,v000, v100, v001, v101, v010,v110, v011,v111);\n\n  gradient.z = (g001.z * vg001.x + go001.z * vgo001.x);\n\n  // normalize gradient\n  // +0.0001  instead of if?\n  float gradientMagnitude = length(gradient);\n  if (gradientMagnitude > 0.0) {\n    gradient = -(1. / gradientMagnitude) * gradient;\n  }\n}\n    `;\n  }\n}\n\nexport default new InterpolationTrilinear();\n","import InterpolationIdentity from './shaders.interpolation.identity';\nimport InterpolationTrilinear from './shaders.interpolation.trilinear';\n\nfunction shadersInterpolation(baseFragment, currentVoxel, dataValue, gradient) {\n  switch (baseFragment._uniforms.uInterpolation.value) {\n    case 0:\n      // no interpolation\n      return InterpolationIdentity.api(baseFragment, currentVoxel, dataValue);\n\n    case 1:\n      // trilinear interpolation\n      return InterpolationTrilinear.api(baseFragment, currentVoxel, dataValue, gradient);\n\n    default:\n      return InterpolationIdentity.api(baseFragment, currentVoxel, dataValue);\n  }\n}\n\nexport default shadersInterpolation;\n","export default class ShadersBase {\n  constructor() {\n    this._name = 'shadersBase';\n    this._base = {\n      _functions: {},\n      _uniforms: {},\n    };\n    this._definition = '';\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  set name(name) {\n    this._name = name;\n  }\n}\n","export default class ShadersFragment {\n  // pass uniforms object\n  constructor(uniforms) {\n    this._uniforms = uniforms;\n    this._functions = {};\n    this._main = '';\n  }\n\n  functions() {\n    if (this._main === '') {\n      // if main is empty, functions can not have been computed\n      this.main();\n    }\n\n    let content = '';\n    for (let property in this._functions) {\n      content += this._functions[property] + '\\n';\n    }\n\n    return content;\n  }\n\n  uniforms() {\n    let content = '';\n    for (let property in this._uniforms) {\n      let uniform = this._uniforms[property];\n      content += `uniform ${uniform.typeGLSL} ${property}`;\n\n      if (uniform && uniform.length) {\n        content += `[${uniform.length}]`;\n      }\n\n      content += ';\\n';\n    }\n\n    return content;\n  }\n\n  main() {\n    // need to pre-call main to fill up the functions list\n    this._main = `\n\nfloat luma (vec3 rgb) {\n  return (rgb.r + rgb.g + rgb.b)/3.0;\n}\n\nconst float T = 0.04;\nconst float M = 1.0;\nconst float L = 0.002;\n\nvoid main(void) {\n\n  vec2 texCoord = vec2(((vProjectedCoords.x / vProjectedCoords.w) + 1.0 ) / 2.0,\n                ((vProjectedCoords.y / vProjectedCoords.w) + 1.0 ) / 2.0 );\n\n  float borderWidth = uWidth; // in px\n  float step_u = borderWidth * 1.0 / uCanvasWidth;\n  float step_v = borderWidth * 1.0 / uCanvasHeight;\n  vec4 centerPixel = texture2D(uTextureFilled, texCoord);\n\n  vec4 rightPixel  = texture2D(uTextureFilled, texCoord + vec2(step_u, 0.0));\n  vec4 bottomPixel = texture2D(uTextureFilled, texCoord + vec2(0.0, step_v));\n\n  // now manually compute the derivatives\n  float _dFdX = length(rightPixel - centerPixel) / step_u;\n  float _dFdY = length(bottomPixel - centerPixel) / step_v;\n\n  // gl_FragColor.r = _dFdX;\n  // gl_FragColor.g = _dFdY;\n  gl_FragColor.r = max(max(centerPixel.r, rightPixel.r), bottomPixel.r);\n  gl_FragColor.g = max(max(centerPixel.g, rightPixel.g), bottomPixel.g);\n  gl_FragColor.b = max(max(centerPixel.b, rightPixel.b), bottomPixel.b);\n  float maxDerivative = max(_dFdX, _dFdY);\n  float clampedDerivative = clamp(maxDerivative, 0., 1.);\n  gl_FragColor.a = uOpacity * clampedDerivative;\n\n  return;\n  // float h = 1./uCanvasHeight;\n  // float w = 1./uCanvasWidth;\n  // vec4 n[9];\n  // n[0] = texture2D(uTextureFilled, vProjectedTextCoords + vec2( -w, -h));\n  // n[1] = texture2D(uTextureFilled, vProjectedTextCoords + vec2(0.0, -h));\n  // n[2] = texture2D(uTextureFilled, vProjectedTextCoords + vec2(  w, -h));\n  // n[3] = texture2D(uTextureFilled, vProjectedTextCoords + vec2( -w, 0.0));\n  // n[4] = texture2D(uTextureFilled, vProjectedTextCoords);\n  // n[5] = texture2D(uTextureFilled, texCoord + vec2(  w, 0.0));\n  // n[6] = texture2D(uTextureFilled, texCoord + vec2( -w, h));\n  // n[7] = texture2D(uTextureFilled, texCoord + vec2(0.0, h));\n  // n[8] = texture2D(uTextureFilled, texCoord + vec2(  w, h));\n  // vec4 sobel_horizEdge = n[2] + (2.0*n[5]) + n[8] - (n[0] + (2.0*n[3]) + n[6]);\n  // vec4 sobel_vertEdge  = n[0] + (2.0*n[1]) + n[2] - (n[6] + (2.0*n[7]) + n[8]);\n  // vec3 sobel = sqrt((sobel_horizEdge.rgb * sobel_horizEdge.rgb) + (sobel_vertEdge.rgb * sobel_vertEdge.rgb));\n  // gl_FragColor = vec4( sobel, max(max(sobel.r, sobel.g), sobel.b) );\n\n  // return;\n}\n   `;\n  }\n\n  compute() {\n    let shaderInterpolation = '';\n    // shaderInterpolation.inline(args) //true/false\n    // shaderInterpolation.functions(args)\n\n    return `\n// uniforms\n${this.uniforms()}\n\n// varying (should fetch it from vertex directly)\nvarying vec4      vProjectedCoords;\n\n// tailored functions\n${this.functions()}\n\n// main loop\n${this._main}\n      `;\n  }\n}\n","/**\n * @module shaders/data\n */\nexport default class ShadersUniform {\n  static uniforms() {\n    return {\n      uCanvasWidth: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uCanvasHeight: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uWidth: {\n        type: 'f',\n        value: 1,\n        typeGLSL: 'float',\n      },\n      uOpacity: {\n        type: 'f',\n        value: 1,\n        typeGLSL: 'float',\n      },\n      uTextureFilled: {\n        type: 't',\n        value: [],\n        typeGLSL: 'sampler2D',\n      },\n    };\n  }\n}\n","export default class ShadersVertex {\n  compute() {\n    return `\nvarying vec4 vProjectedCoords;\n\n//\n// main\n//\nvoid main() {\n\n  vec4 vPos = modelMatrix * vec4(position, 1.0 );\n  mat4 vProjectionViewMatrix = projectionMatrix * viewMatrix;\n  vProjectedCoords =  projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );\n\n}\n        `;\n  }\n}\n","import shadersInterpolation from './interpolation/shaders.interpolation';\n\nexport default class ShadersFragment {\n  // pass uniforms object\n  constructor(uniforms) {\n    this._uniforms = uniforms;\n    this._functions = {};\n    this._main = '';\n  }\n\n  functions() {\n    if (this._main === '') {\n      // if main is empty, functions can not have been computed\n      this.main();\n    }\n\n    let content = '';\n    for (let property in this._functions) {\n      content += this._functions[property] + '\\n';\n    }\n\n    return content;\n  }\n\n  uniforms() {\n    let content = '';\n    for (let property in this._uniforms) {\n      let uniform = this._uniforms[property];\n      content += `uniform ${uniform.typeGLSL} ${property}`;\n\n      if (uniform && uniform.length) {\n        content += `[${uniform.length}]`;\n      }\n\n      content += ';\\n';\n    }\n\n    return content;\n  }\n\n  main() {\n    // need to pre-call main to fill up the functions list\n    this._main = `\nvoid main(void) {\n\n  // draw border if slice is cropped\n  // float uBorderDashLength = 10.;\n\n  if( uCanvasWidth > 0. &&\n      ((gl_FragCoord.x > uBorderMargin && (gl_FragCoord.x - uBorderMargin) < uBorderWidth) ||\n       (gl_FragCoord.x < (uCanvasWidth - uBorderMargin) && (gl_FragCoord.x + uBorderMargin) > (uCanvasWidth - uBorderWidth) ))){\n    float valueY = mod(gl_FragCoord.y, 2. * uBorderDashLength);\n    if( valueY < uBorderDashLength && gl_FragCoord.y > uBorderMargin && gl_FragCoord.y < (uCanvasHeight - uBorderMargin) ){\n      gl_FragColor = vec4(uBorderColor, 1.);\n      return;\n    }\n  }\n\n  if( uCanvasHeight > 0. &&\n      ((gl_FragCoord.y > uBorderMargin && (gl_FragCoord.y - uBorderMargin) < uBorderWidth) ||\n       (gl_FragCoord.y < (uCanvasHeight - uBorderMargin) && (gl_FragCoord.y + uBorderMargin) > (uCanvasHeight - uBorderWidth) ))){\n    float valueX = mod(gl_FragCoord.x, 2. * uBorderDashLength);\n    if( valueX < uBorderDashLength && gl_FragCoord.x > uBorderMargin && gl_FragCoord.x < (uCanvasWidth - uBorderMargin) ){\n      gl_FragColor = vec4(uBorderColor, 1.);\n      return;\n    }\n  }\n\n  // get texture coordinates of current pixel\n  vec4 dataValue = vec4(0.);\n  vec3 gradient = vec3(1.); // gradient calculations will be skipped if it is equal to vec3(1.) \n  float steps = floor(uThickness / uSpacing + 0.5);\n\n  if (steps > 1.) {\n    vec3 origin = vPos - uThickness * 0.5 * vNormal;\n    vec4 dataValueAcc = vec4(0.);\n    for (float step = 0.; step < 128.; step++) {\n      if (step >= steps) {\n        break;\n      }\n\n      vec4 dataCoordinates = uWorldToData * vec4(origin + step * uSpacing * vNormal, 1.);\n      vec3 currentVoxel = dataCoordinates.xyz;\n      ${shadersInterpolation(this, 'currentVoxel', 'dataValueAcc', 'gradient')};\n\n      if (step == 0.) {\n        dataValue.r = dataValueAcc.r;\n        continue;\n      }\n\n      if (uThicknessMethod == 0) {\n        dataValue.r = max(dataValueAcc.r, dataValue.r);\n      }\n      if (uThicknessMethod == 1) {\n        dataValue.r += dataValueAcc.r;\n      }\n      if (uThicknessMethod == 2) {\n        dataValue.r = min(dataValueAcc.r, dataValue.r);\n      }\n    }\n\n    if (uThicknessMethod == 1) {\n      dataValue.r /= steps;\n    }\n  } else {\n    vec4 dataCoordinates = uWorldToData * vec4(vPos, 1.);\n    vec3 currentVoxel = dataCoordinates.xyz;\n    ${shadersInterpolation(this, 'currentVoxel', 'dataValue', 'gradient')}\n  }\n\n  if(uNumberOfChannels == 1){\n    // rescale/slope\n    float realIntensity = dataValue.r * uRescaleSlopeIntercept[0] + uRescaleSlopeIntercept[1];\n  \n    // threshold\n    if (realIntensity < uLowerUpperThreshold[0] || realIntensity > uLowerUpperThreshold[1]) {\n      discard;\n    }\n  \n    // normalize\n    float windowMin = uWindowCenterWidth[0] - uWindowCenterWidth[1] * 0.5;\n    float normalizedIntensity =\n      ( realIntensity - windowMin ) / uWindowCenterWidth[1];\n    dataValue.r = dataValue.g = dataValue.b = normalizedIntensity;\n    dataValue.a = 1.;\n\n    // apply LUT\n    if(uLut == 1){\n      // should opacity be grabbed there?\n      dataValue = texture2D( uTextureLUT, vec2( normalizedIntensity , 1.0) );\n    }\n  \n    // apply segmentation\n    if(uLutSegmentation == 1){\n      // should opacity be grabbed there?\n      //\n      float textureWidth = 256.;\n      float textureHeight = 128.;\n      float min = 0.;\n      // start at 0!\n      int adjustedIntensity = int(floor(realIntensity + 0.5));\n  \n      // Get row and column in the texture\n      int colIndex = int(mod(float(adjustedIntensity), textureWidth));\n      int rowIndex = int(floor(float(adjustedIntensity)/textureWidth));\n  \n      float texWidth = 1./textureWidth;\n      float texHeight = 1./textureHeight;\n    \n      // Map row and column to uv\n      vec2 uv = vec2(0,0);\n      uv.x = 0.5 * texWidth + (texWidth * float(colIndex));\n      uv.y = 1. - (0.5 * texHeight + float(rowIndex) * texHeight);\n  \n      dataValue = texture2D( uTextureLUTSegmentation, uv );\n    }\n  }\n\n  if(uInvert == 1){\n    dataValue.xyz = vec3(1.) - dataValue.xyz;\n  }\n\n  dataValue.a = dataValue.a*uOpacity;\n\n  gl_FragColor = dataValue;\n}\n   `;\n  }\n\n  compute() {\n    return `\n// uniforms\n${this.uniforms()}\n\n// varying (should fetch it from vertex directly)\nvarying vec3 vPos;\nvarying vec3 vNormal;\n\n// tailored functions\n${this.functions()}\n\n// main loop\n${this._main}\n      `;\n  }\n}\n","import { Matrix4 } from 'three/src/math/Matrix4';\n\n/**\n * @module shaders/data\n */\nexport default class ShadersUniform {\n  /**\n   * Shaders data uniforms\n   */\n  static uniforms() {\n    return {\n      uTextureSize: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uTextureContainer: {\n        type: 'tv',\n        value: [],\n        typeGLSL: 'sampler2D',\n        length: 7,\n      },\n      uDataDimensions: {\n        type: 'iv',\n        value: [0, 0, 0],\n        typeGLSL: 'ivec3',\n      },\n      uWorldToData: {\n        type: 'm4',\n        value: new Matrix4(),\n        typeGLSL: 'mat4',\n      },\n      uWindowCenterWidth: {\n        type: 'fv1',\n        value: [0.0, 0.0],\n        typeGLSL: 'float',\n        length: 2,\n      },\n      uLowerUpperThreshold: {\n        type: 'fv1',\n        value: [0.0, 0.0],\n        typeGLSL: 'float',\n        length: 2,\n      },\n      uRescaleSlopeIntercept: {\n        type: 'fv1',\n        value: [0.0, 0.0],\n        typeGLSL: 'float',\n        length: 2,\n      },\n      uNumberOfChannels: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uBitsAllocated: {\n        type: 'i',\n        value: 8,\n        typeGLSL: 'int',\n      },\n      uInvert: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uLut: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uTextureLUT: {\n        type: 't',\n        value: [],\n        typeGLSL: 'sampler2D',\n      },\n      uLutSegmentation: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uTextureLUTSegmentation: {\n        type: 't',\n        value: [],\n        typeGLSL: 'sampler2D',\n      },\n      uPixelType: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uPackedPerPixel: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uInterpolation: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uCanvasWidth: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uCanvasHeight: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uBorderColor: {\n        type: 'v3',\n        value: [1.0, 0.0, 0.5],\n        typeGLSL: 'vec3',\n      },\n      uBorderWidth: {\n        type: 'f',\n        value: 2,\n        typeGLSL: 'float',\n      },\n      uBorderMargin: {\n        type: 'f',\n        value: 2,\n        typeGLSL: 'float',\n      },\n      uBorderDashLength: {\n        type: 'f',\n        value: 10,\n        typeGLSL: 'float',\n      },\n      uOpacity: {\n        type: 'f',\n        value: 1.0,\n        typeGLSL: 'float',\n      },\n      uSpacing: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uThickness: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uThicknessMethod: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n    };\n  }\n}\n","export default class ShadersVertex {\n  compute() {\n    return `\nvarying vec3 vPos;\nvarying vec3 vNormal;\n\nvoid main() {\n  vNormal = normal;\n  vPos = (modelMatrix * vec4(position, 1.0 )).xyz;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );\n\n}\n        `;\n  }\n}\n","class Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nexport { Vector2 };\n","import { Vector2 } from 'three/src/math/Vector2';\n\n/**\n * @module shaders/data\n */\nexport default class ShadersUniform {\n  static uniforms() {\n    return {\n      uTextureBackTest0: {\n        type: 't',\n        value: [],\n        typeGLSL: 'sampler2D',\n      },\n      uTextureBackTest1: {\n        type: 't',\n        value: [],\n        typeGLSL: 'sampler2D',\n      },\n      uOpacity0: {\n        type: 'f',\n        value: 1.0,\n        typeGLSL: 'float',\n      },\n      uOpacity1: {\n        type: 'f',\n        value: 1.0,\n        typeGLSL: 'float',\n      },\n      uType0: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uType1: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uTrackMouse: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uMouse: {\n        type: 'v2',\n        value: new Vector2(),\n        typeGLSL: 'vec2',\n      },\n    };\n  }\n}\n","export default class ShadersFragment {\n  // pass uniforms object\n  constructor(uniforms) {\n    this._uniforms = uniforms;\n    this._functions = {};\n    this._main = '';\n  }\n\n  functions() {\n    if (this._main === '') {\n      // if main is empty, functions can not have been computed\n      this.main();\n    }\n\n    let content = '';\n    for (let property in this._functions) {\n      content += this._functions[property] + '\\n';\n    }\n\n    return content;\n  }\n\n  uniforms() {\n    let content = '';\n    for (let property in this._uniforms) {\n      let uniform = this._uniforms[property];\n      content += `uniform ${uniform.typeGLSL} ${property}`;\n\n      if (uniform && uniform.length) {\n        content += `[${uniform.length}]`;\n      }\n\n      content += ';\\n';\n    }\n\n    return content;\n  }\n\n  main() {\n    // need to pre-call main to fill up the functions list\n    this._main = `\nvoid main(void) {\n\n  vec2 texc = vec2(((vProjectedCoords.x / vProjectedCoords.w) + 1.0 ) / 2.0,\n                ((vProjectedCoords.y / vProjectedCoords.w) + 1.0 ) / 2.0 );\n\n  // just silence warning for\n  // vec4 dummy = vPos;\n\n  //The back position is the world space position stored in the texture.\n  vec4 baseColor0 = texture2D(uTextureBackTest0, texc);\n  vec4 baseColor1 = texture2D(uTextureBackTest1, texc);\n\n  if( uTrackMouse == 1 ){\n\n      if( vProjectedCoords.x < uMouse.x ){\n\n        gl_FragColor = baseColor0;\n\n      }\n      else{\n\n        gl_FragColor = mix( baseColor0, baseColor1, uOpacity1 );\n\n      }\n\n  }\n  else{\n\n    if( uType1 == 0 ){\n\n      //merge an image into\n      gl_FragColor = mix( baseColor0, baseColor1, uOpacity1 );\n\n    }\n    else{\n\n      float opacity = baseColor1.a;\n      gl_FragColor = mix( baseColor0, baseColor1, opacity * uOpacity1 );\n\n    }\n\n  }\n\n  return;\n}\n   `;\n  }\n\n  compute() {\n    let shaderInterpolation = '';\n    // shaderInterpolation.inline(args) //true/false\n    // shaderInterpolation.functions(args)\n\n    return `\n// uniforms\n${this.uniforms()}\n\n// varying (should fetch it from vertex directly)\n// varying vec4      vPos;\nvarying vec4      vProjectedCoords;\n\n// tailored functions\n${this.functions()}\n\n// main loop\n${this._main}\n      `;\n  }\n}\n","export default class ShadersVertex {\n  compute() {\n    return `\n// varying vec4 vPos;\nvarying vec4 vProjectedCoords;\n\n//\n// main\n//\nvoid main() {\n\n  vec4 vPos = modelMatrix * vec4(position, 1.0 );\n  vProjectedCoords =  projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );\n\n}\n        `;\n  }\n}\n","/**\n * Localizer fragment shader\n */\nexport default class {\n  /**\n   *\n   */\n  constructor(uniforms) {\n    this._uniforms = uniforms;\n    this._functions = {};\n    this._main = '';\n  }\n\n  /**\n   *\n   */\n  functions() {\n    if (this._main === '') {\n      // if main is empty, functions can not have been computed\n      this.main();\n    }\n\n    let content = '';\n    for (let property in this._functions) {\n      content += this._functions[property] + '\\n';\n    }\n\n    return content;\n  }\n\n  /**\n   *\n   */\n  uniforms() {\n    let content = '';\n    for (let property in this._uniforms) {\n      let uniform = this._uniforms[property];\n      content += `uniform ${uniform.typeGLSL} ${property}`;\n\n      if (uniform && uniform.length) {\n        content += `[${uniform.length}]`;\n      }\n\n      content += ';\\n';\n    }\n\n    return content;\n  }\n\n  /**\n   *\n   */\n  main() {\n    // need to pre-call main to fill up the functions list\n    this._main = `\nvoid intersectionProjection(\n  in vec4 plane,\n  in vec4 slice,\n  out vec3 intersectionProjection){\n\n      vec3 intersectionDirection = normalize(cross(plane.xyz, slice.xyz));\n      vec3 intersectionPoint = \n        cross(intersectionDirection,slice.xyz) * plane.w +\n        cross(plane.xyz, intersectionDirection) * slice.w;\n\n      intersectionProjection =\n        intersectionPoint.xyz +\n        (dot(vPos.xyz - intersectionPoint, intersectionDirection)\n          * intersectionDirection);\n\n}\n\nvoid main(void) {\n      vec4 c1 = vec4(0., 0., 0., 0.);\n      vec4 c2 = vec4(0., 0., 0., 0.);\n      vec4 c3 = vec4(0., 0., 0., 0.);\n\n      // localizer #1\n      // must be normalized!\n      if(length(uPlane1.xyz) > 0.5) {\n        vec3 projection1 = vec3(1.);\n        intersectionProjection(\n          uPlane1,\n          uSlice,\n          projection1\n        );\n\n        vec4 projInter1 = (vProjectionViewMatrix * vec4(projection1, 1.));\n        vec3 ndc1 = projInter1.xyz / projInter1.w;\n        vec2 screenSpace1 = (ndc1.xy * .5 + .5) * vec2(uCanvasWidth, uCanvasHeight);\n\n        float d1 = distance(gl_FragCoord.xy, screenSpace1.xy);\n        c1 = vec4(uPlaneColor1, 1. - smoothstep(.5, .7, d1));\n      }\n\n      // localizer #2\n      if(length(uPlane2.xyz) > 0.5) {\n        vec3 projection2 = vec3(1.);\n        intersectionProjection(\n          uPlane2,\n          uSlice,\n          projection2\n        );\n\n        vec4 projInter2 = (vProjectionViewMatrix * vec4(projection2, 1.));\n        vec3 ndc2 = projInter2.xyz / projInter2.w;\n        vec2 screenSpace2 = (ndc2.xy * .5 + .5) * vec2(uCanvasWidth, uCanvasHeight);\n\n        float d2 = distance(gl_FragCoord.xy, screenSpace2.xy);\n        c2 = vec4(uPlaneColor2, 1. - smoothstep(.5, .7, d2));\n      }\n\n      // localizer #3\n      if(length(uPlane3.xyz) > 0.5) {\n        vec3 projection3 = vec3(1.);\n        intersectionProjection(\n          uPlane3,\n          uSlice,\n          projection3\n        );\n\n        vec4 projInter3 = (vProjectionViewMatrix * vec4(projection3, 1.));\n        vec3 ndc3 = projInter3.xyz / projInter3.w;\n        vec2 screenSpace3 = (ndc3.xy * .5 + .5) * vec2(uCanvasWidth, uCanvasHeight);\n\n        float d3 = distance(gl_FragCoord.xy, screenSpace3.xy);\n        c3 = vec4(uPlaneColor3, 1. - smoothstep(.5, .7, d3));\n      }\n\n      // float uBorderDashLength = 10.0;\n      // float uBorderWidth = 2.0;\n      // float valueX = mod(gl_FragCoord.x, 2. * uBorderDashLength);\n      // float valueY = mod(gl_FragCoord.y, 2. * uBorderDashLength);\n      // if( valueX < uBorderDashLength || valueY < uBorderDashLength ){\n        vec3 colorMix = c1.xyz*c1.w + c2.xyz*c2.w + c3.xyz*c3.w;\n        gl_FragColor = vec4(colorMix, max(max(c1.w, c2.w),c3.w)*0.5);\n        return;\n      // }\n      \n      // gl_FragColor = vec4(0., 0., 0., 0.);\n      // return;\n}\n   `;\n  }\n\n  /**\n   *\n   */\n  compute() {\n    return `\n// uniforms\n${this.uniforms()}\n\n// varying (should fetch it from vertex directly)\nvarying vec4 vPos;\nvarying mat4 vProjectionViewMatrix;\n\n// tailored functions\n${this.functions()}\n\n// main loop\n${this._main}\n      `;\n  }\n}\n","/**\n * @module shaders/localizer/uniforms\n */\n\nexport default class {\n  /**\n   * Shaders data uniforms\n   */\n  static uniforms() {\n    return {\n      uCanvasWidth: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uCanvasHeight: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uSlice: {\n        type: 'v4',\n        value: [0.0, 0.0, 0.0, 0.0],\n        typeGLSL: 'vec4',\n      },\n      uPlane1: {\n        type: 'v4',\n        value: [0.0, 0.0, 0.0, 0.0],\n        typeGLSL: 'vec4',\n      },\n      uPlaneColor1: {\n        type: 'v3',\n        value: [1.0, 1.0, 0.0],\n        typeGLSL: 'vec3',\n      },\n      uPlane2: {\n        type: 'v4',\n        value: [0.0, 0.0, 0.0, 0.0],\n        typeGLSL: 'vec4',\n      },\n      uPlaneColor2: {\n        type: 'v3',\n        value: [1.0, 1.0, 0.0],\n        typeGLSL: 'vec3',\n      },\n      uPlane3: {\n        type: 'v4',\n        value: [0.0, 0.0, 0.0, 0.0],\n        typeGLSL: 'vec4',\n      },\n      uPlaneColor3: {\n        type: 'v3',\n        value: [1.0, 1.0, 0.0],\n        typeGLSL: 'vec3',\n      },\n    };\n  }\n}\n","/**\n *\n */\nexport default class {\n  /**\n   *\n   */\n  compute() {\n    return `\nvarying vec4 vPos;\nvarying mat4 vProjectionViewMatrix;\n\n//\n// main\n//\nvoid main() {\n\n  vPos = modelMatrix * vec4(position, 1.0 );\n  vProjectionViewMatrix = projectionMatrix * viewMatrix;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );\n\n}\n        `;\n  }\n}\n","import ShadersBase from '../shaders.base';\n\nclass IntersectBox extends ShadersBase {\n  constructor() {\n    super();\n    this.name = 'intersectBox';\n\n    // default properties names\n    this._rayOrigin = 'rayOrigin';\n    this._rayDirection = 'rayDirection';\n    this._aabbMin = 'aabbMin';\n    this._aabbMax = 'aabbMax';\n    this._tNear = 'tNear';\n    this._tFar = 'tFar';\n    this._intersect = 'intersect';\n  }\n\n  api(\n    baseFragment = this._base,\n    rayOrigin = this._rayOrigin,\n    rayDirection = this._rayDirection,\n    aabbMin = this._aabbMin,\n    aabbMax = this._aabbMax,\n    tNear = this._tNear,\n    tFar = this._tFar,\n    intersect = this._intersect\n  ) {\n    this._base = baseFragment;\n    return this.compute(rayOrigin, rayDirection, aabbMin, aabbMax, tNear, tFar, intersect);\n  }\n\n  compute(rayOrigin, rayDirection, aabbMin, aabbMax, tNear, tFar, intersect) {\n    this.computeDefinition();\n    this._base._functions[this._name] = this._definition;\n    return `${\n      this._name\n    }(${rayOrigin}, ${rayDirection}, ${aabbMin}, ${aabbMax}, ${tNear}, ${tFar}, ${intersect});`;\n  }\n\n  computeDefinition() {\n    this._definition = `\nvoid ${\n      this._name\n    }(vec3 rayOrigin, vec3 rayDirection, vec3 boxMin, vec3 boxMax, out float tNear, out float tFar, out bool intersect){\n  // compute intersection of ray with all six bbox planes\n  vec3 invRay = vec3(1.) / rayDirection;\n  vec3 tBot = invRay * (boxMin - rayOrigin);\n  vec3 tTop = invRay * (boxMax - rayOrigin);\n  // re-order intersections to find smallest and largest on each axis\n  vec3 tMin = min(tTop, tBot);\n  vec3 tMax = max(tTop, tBot);\n  // find the largest tMin and the smallest tMax\n  float largest_tMin = max(max(tMin.x, tMin.y), max(tMin.x, tMin.z));\n  float smallest_tMax = min(min(tMax.x, tMax.y), min(tMax.x, tMax.z));\n  tNear = largest_tMin;\n  tFar = smallest_tMax;\n  intersect = smallest_tMax > largest_tMin;\n}\n\n    `;\n  }\n}\n\nexport default new IntersectBox();\n","import shadersInterpolation from './interpolation/shaders.interpolation';\nimport shadersIntersectBox from './helpers/shaders.helpers.intersectBox';\n\nexport default class ShadersFragment {\n  // pass uniforms object\n  constructor(uniforms) {\n    this._uniforms = uniforms;\n    this._functions = {};\n    this._main = '';\n  }\n\n  functions() {\n    if (this._main === '') {\n      // if main is empty, functions can not have been computed\n      this.main();\n    }\n\n    let content = '';\n    for (let property in this._functions) {\n      content += this._functions[property] + '\\n';\n    }\n\n    return content;\n  }\n\n  uniforms() {\n    let content = '';\n    for (let property in this._uniforms) {\n      let uniform = this._uniforms[property];\n      content += `uniform ${uniform.typeGLSL} ${property}`;\n\n      if (uniform && uniform.length) {\n        content += `[${uniform.length}]`;\n      }\n\n      content += ';\\n';\n    }\n\n    return content;\n  }\n\n  main() {\n    // need to pre-call main to fill up the functions list\n    this._main = `\nvoid getIntensity(in vec3 dataCoordinates, out float intensity, out vec3 gradient){\n\n  vec4 dataValue = vec4(0., 0., 0., 0.);\n  ${shadersInterpolation(this, 'dataCoordinates', 'dataValue', 'gradient')}\n\n  intensity = dataValue.r;\n\n  // rescale/slope\n  intensity = intensity*uRescaleSlopeIntercept[0] + uRescaleSlopeIntercept[1];\n  // window level\n  float windowMin = uWindowCenterWidth[0] - uWindowCenterWidth[1] * 0.5;\n  intensity = ( intensity - windowMin ) / uWindowCenterWidth[1];\n}\n\nmat4 inverse(mat4 m) {\n  float\n    a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n    a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n    a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n    a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\n\n    b00 = a00 * a11 - a01 * a10,\n    b01 = a00 * a12 - a02 * a10,\n    b02 = a00 * a13 - a03 * a10,\n    b03 = a01 * a12 - a02 * a11,\n    b04 = a01 * a13 - a03 * a11,\n    b05 = a02 * a13 - a03 * a12,\n    b06 = a20 * a31 - a21 * a30,\n    b07 = a20 * a32 - a22 * a30,\n    b08 = a20 * a33 - a23 * a30,\n    b09 = a21 * a32 - a22 * a31,\n    b10 = a21 * a33 - a23 * a31,\n    b11 = a22 * a33 - a23 * a32,\n\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  return mat4(\n    a11 * b11 - a12 * b10 + a13 * b09,\n    a02 * b10 - a01 * b11 - a03 * b09,\n    a31 * b05 - a32 * b04 + a33 * b03,\n    a22 * b04 - a21 * b05 - a23 * b03,\n    a12 * b08 - a10 * b11 - a13 * b07,\n    a00 * b11 - a02 * b08 + a03 * b07,\n    a32 * b02 - a30 * b05 - a33 * b01,\n    a20 * b05 - a22 * b02 + a23 * b01,\n    a10 * b10 - a11 * b08 + a13 * b06,\n    a01 * b08 - a00 * b10 - a03 * b06,\n    a30 * b04 - a31 * b02 + a33 * b00,\n    a21 * b02 - a20 * b04 - a23 * b00,\n    a11 * b07 - a10 * b09 - a12 * b06,\n    a00 * b09 - a01 * b07 + a02 * b06,\n    a31 * b01 - a30 * b03 - a32 * b00,\n    a20 * b03 - a21 * b01 + a22 * b00) / det;\n}\n\n/**\n * Adapted from original sources\n * \n * Original code: \n * http://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/\n * https://www.shadertoy.com/view/lt33z7\n * \n * The vec3 returned is the RGB color of the light's contribution.\n *\n * k_a: Ambient color\n * k_d: Diffuse color\n * k_s: Specular color\n * alpha: Shininess coefficient\n * p: position of point being lit\n * eye: the position of the camera\n * lightPos: the position of the light\n * lightIntensity: color/intensity of the light\n *\n * See https://en.wikipedia.org/wiki/Phong_reflection_model#Description\n */\nvec3 phongShading(vec3 k_a, vec3 k_d, vec3 k_s, float shininess, vec3 p, vec3 eye,\n  vec3 lightPos, vec3 lightIntensity, vec3 normal) {\n  vec3 N = normal;\n  vec3 L = lightPos - p;\n  if (length(L) > 0.) {\n    L = L / length(L);\n  }\n  vec3 V = eye - p;\n  if (length(V) > 0.) {\n    V = V / length(V);\n  }\n  vec3 R = reflect(-L, N);\n  if (length(R) > 0.) {\n    R = R / length(R);\n  }\n\n  // https://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_shading_model\n  vec3 h = L + V;\n  vec3 H = h;\n  if (length(h) > 0.) {\n    H = H / length(h);\n  }\n\n  float dotLN = dot(L, N);\n  float dotRV = dot(R, V);\n\n  if (dotLN < 0.) {\n    // Light not visible from this point on the surface\n    return k_a;\n  } \n\n  if (dotRV < 0.) {\n    // Light reflection in opposite direction as viewer, apply only diffuse\n    // component\n    return k_a + lightIntensity * (k_d * dotLN);\n  }\n\n  float specAngle = max(dot(H, normal), 0.0);\n  float specular = pow(dotRV, shininess); //pow(specAngle, shininess); // \n  return k_a + lightIntensity * (k_d * dotLN  + k_s * specular);\n}\n\nfloat PI = 3.14159265358979323846264 * 00000.1; // PI\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv) {\n  const highp float a = 12.9898;\n  const highp float b = 78.233;\n  const highp float c = 43758.5453;\n  highp float dt = dot(uv.xy, vec2(a, b)), sn = mod(dt, PI);\n  return fract(sin(sn) * c);\n}\n\nvoid main(void) {\n  const int maxSteps = 1024;\n\n  // the ray\n  vec3 rayOrigin = cameraPosition;\n  vec3 rayDirection = normalize(vPos.xyz - rayOrigin);\n\n  vec3 lightOrigin = uLightPositionInCamera == 1 ? cameraPosition : uLightPosition;\n\n  // the Axe-Aligned B-Box\n  vec3 AABBMin = vec3(uWorldBBox[0], uWorldBBox[2], uWorldBBox[4]);\n  vec3 AABBMax = vec3(uWorldBBox[1], uWorldBBox[3], uWorldBBox[5]);\n\n  // Intersection ray/bbox\n  float tNear, tFar;\n  bool intersect = false;\n  ${shadersIntersectBox.api(\n    this,\n    'rayOrigin',\n    'rayDirection',\n    'AABBMin',\n    'AABBMax',\n    'tNear',\n    'tFar',\n    'intersect'\n  )}\n  if (tNear < 0.0) tNear = 0.0;\n\n  // x / y should be within o-1\n  // should\n  float offset = rand(gl_FragCoord.xy);\n\n  // init the ray marching\n  float tStep = (tFar - tNear) / float(uSteps);\n  float tCurrent = tNear + offset * tStep;\n  vec4 accumulatedColor = vec4(0.0);\n  float accumulatedAlpha = 0.0;\n\n  // MIP volume rendering\n  float maxIntensity = 0.0;\n\n  mat4 dataToWorld = inverse(uWorldToData);\n\n  // rayOrigin -= rayDirection * 0.1; // gold_noise(vPos.xz, vPos.y) / 100.;  \n\n  for(int rayStep = 0; rayStep < maxSteps; rayStep++){\n    vec3 currentPosition = rayOrigin + rayDirection * tCurrent;\n    // some non-linear FUN\n    // some occlusion issue to be fixed\n    vec3 transformedPosition = currentPosition; //transformPoint(currentPosition, uAmplitude, uFrequence);\n    // world to data coordinates\n    // rounding trick\n    // first center of first voxel in data space is CENTERED on (0,0,0)\n    vec4 dataCoordinatesRaw = uWorldToData * vec4(transformedPosition, 1.0);\n    vec3 currentVoxel = vec3(dataCoordinatesRaw.x, dataCoordinatesRaw.y, dataCoordinatesRaw.z);\n    float intensity = 0.0;\n    vec3 gradient = vec3(0., 0., 0.);\n    getIntensity(currentVoxel, intensity, gradient);\n    // map gradient to world space and normalize before using\n    // we avoid to call \"normalize\" as it may be undefined if vector length == 0.\n    gradient = (vec3(dataToWorld * vec4(gradient, 0.)));\n    if (length(gradient) > 0.0) {\n      gradient = normalize(gradient);\n    }\n\n    vec4 colorSample;\n    float alphaSample;\n    if(uLut == 1){\n      vec4 colorFromLUT = texture2D( uTextureLUT, vec2( intensity, 1.0) );\n      // 256 colors\n      colorSample = colorFromLUT;\n      alphaSample = colorFromLUT.a;\n    }\n    else{\n      alphaSample = intensity;\n      colorSample.r = colorSample.g = colorSample.b = intensity;\n    }\n\n    // ray marching algorithm\n    // shading on\n    // interpolation on\n    if (uAlgorithm == 0 && uShading == 1 && uInterpolation != 0) {\n      //  && alphaSample > .3\n      vec3 ambientComponent = uSampleColorToAmbient == 1 ? colorSample.xyz : uAmbientColor;\n      ambientComponent *= uAmbient;\n      vec3 diffuseComponent = uSampleColorToDiffuse == 1 ? colorSample.xyz : uDiffuseColor;\n      diffuseComponent *= uDiffuse;\n      vec3 specularComponent = uSpecular * uSpecularColor;\n      float shininess = uShininess;\n      vec3 vIntensity = uIntensity;\n\n      colorSample.xyz += phongShading(\n        ambientComponent,\n        diffuseComponent,\n        specularComponent,\n        shininess,\n        currentPosition.xyz,\n        rayOrigin.xyz,\n        lightOrigin.xyz,\n        vIntensity,\n        gradient);\n    }\n\n    alphaSample = 1.0 - pow((1.0- alphaSample),tStep*uAlphaCorrection);\n    alphaSample *= (1.0 - accumulatedAlpha);\n\n    accumulatedColor += alphaSample * colorSample;\n    accumulatedAlpha += alphaSample;\n\n    tCurrent += tStep;\n\n    if (tCurrent > tFar || (uAlgorithm == 0 && accumulatedAlpha >= 1.0)) break;\n\n    if (uAlgorithm == 1 && (intensity >= maxIntensity)) {\n      maxIntensity = intensity;\n      accumulatedColor = colorSample;\n      accumulatedAlpha = 1.;\n    }\n  }\n\n  gl_FragColor = vec4(accumulatedColor.xyz, accumulatedAlpha);\n}\n   `;\n  }\n\n  compute() {\n    let shaderInterpolation = '';\n    // shaderInterpolation.inline(args) //true/false\n    // shaderInterpolation.functions(args)\n\n    return `\n// uniforms\n${this.uniforms()}\n\n// varying (should fetch it from vertex directly)\nvarying vec4      vPos;\n\n// tailored functions\n${this.functions()}\n\n// main loop\n${this._main}\n      `;\n  }\n}\n","import { Matrix4 } from 'three/src/math/Matrix4';\n\n/**\n * @module shaders/data\n */\nexport default class ShadersUniform {\n  static uniforms() {\n    return {\n      uTextureSize: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uTextureContainer: {\n        type: 'tv',\n        value: [],\n        typeGLSL: 'sampler2D',\n        length: 7,\n      },\n      uDataDimensions: {\n        type: 'iv',\n        value: [0, 0, 0],\n        typeGLSL: 'ivec3',\n      },\n      uWorldToData: {\n        type: 'm4',\n        value: new Matrix4(),\n        typeGLSL: 'mat4',\n      },\n      uWindowCenterWidth: {\n        type: 'fv1',\n        value: [0.0, 0.0],\n        typeGLSL: 'float',\n        length: 2,\n      },\n      uRescaleSlopeIntercept: {\n        type: 'fv1',\n        value: [0.0, 0.0],\n        typeGLSL: 'float',\n        length: 2,\n      },\n      uNumberOfChannels: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uBitsAllocated: {\n        type: 'i',\n        value: 8,\n        typeGLSL: 'int',\n      },\n      uInvert: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uLut: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uTextureLUT: {\n        type: 't',\n        value: [],\n        typeGLSL: 'sampler2D',\n      },\n      uPixelType: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n      uPackedPerPixel: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uInterpolation: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uWorldBBox: {\n        type: 'fv1',\n        value: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n        typeGLSL: 'float',\n        length: 6,\n      },\n      uSteps: {\n        type: 'i',\n        value: 256,\n        typeGLSL: 'int',\n      },\n      uAlphaCorrection: {\n        type: 'f',\n        value: 0.5,\n        typeGLSL: 'float',\n      },\n      uFrequence: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uAmplitude: {\n        type: 'f',\n        value: 0,\n        typeGLSL: 'float',\n      },\n      uShading: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uAmbient: {\n        type: 'f',\n        value: 0.1,\n        typeGLSL: 'float',\n      },\n      uAmbientColor: {\n        type: 'v3',\n        value: [1.0, 1.0, 0.0],\n        typeGLSL: 'vec3',\n      },\n      uSampleColorToAmbient: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uSpecular: {\n        type: 'f',\n        value: 1,\n        typeGLSL: 'float',\n      },\n      uSpecularColor: {\n        type: 'v3',\n        value: [1.0, 1.0, 1.0],\n        typeGLSL: 'vec3',\n      },\n      uDiffuse: {\n        type: 'f',\n        value: 0.3,\n        typeGLSL: 'float',\n      },\n      uDiffuseColor: {\n        type: 'v3',\n        value: [1.0, 1.0, 0.0],\n        typeGLSL: 'vec3',\n      },\n      uSampleColorToDiffuse: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uShininess: {\n        type: 'f',\n        value: 5,\n        typeGLSL: 'float',\n      },\n      uLightPosition: {\n        type: 'v3',\n        value: [0.0, 0.0, 0.0],\n        typeGLSL: 'vec3',\n      },\n      uLightPositionInCamera: {\n        type: 'i',\n        value: 1,\n        typeGLSL: 'int',\n      },\n      uIntensity: {\n        type: 'v3',\n        value: [0.8, 0.8, 0.8],\n        typeGLSL: 'vec3',\n      },\n      uAlgorithm: {\n        type: 'i',\n        value: 0,\n        typeGLSL: 'int',\n      },\n    };\n  }\n}\n","export default class ShadersVertex {\n  compute() {\n    return `\nvarying vec4 vPos;\n\n//\n// main\n//\nvoid main() {\n\n  vPos = modelMatrix * vec4(position, 1.0 );\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );\n\n}\n        `;\n  }\n}\n","'use strict';\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT32_VIEW.buffer );\n\n// 1 11111111 00000000000000000000000 => 4286578688 => 0xff800000 (see IEEE 754-2008)\nvar NINF = 0xff800000;\n\n// Set the ArrayBuffer bit sequence:\nUINT32_VIEW[ 0 ] = NINF;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT32_VIEW[ 0 ];\n","'use strict';\n\n// VARIABLES //\n\nvar FLOAT32_VIEW = new Float32Array( 1 );\nvar UINT32_VIEW = new Uint32Array( FLOAT32_VIEW.buffer );\n\n// 0 11111111 00000000000000000000000 => 2139095040 => 0x7f800000 (see IEEE 754-2008)\nvar PINF = 0x7f800000;\n\n// Set the ArrayBuffer bit sequence:\nUINT32_VIEW[ 0 ] = PINF;\n\n\n// EXPORTS //\n\nmodule.exports = FLOAT32_VIEW[ 0 ];\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\n/**\n* FUNCTION: abs( x )\n*\tComputes the absolute value of `x`.\n*\n* @param {Number} x - input value\n* @returns {Number} absolute value\n*/\nfunction abs( x ) {\n\tif ( x < 0 ) {\n\t\treturn -x;\n\t}\n\tif ( x === 0 ) {\n\t\treturn 0; // handle negative zero\n\t}\n\treturn x;\n} // end FUNCTION abs()\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","'use strict';\n\n// EXPORTS //\n\nmodule.exports = Math.ceil;\n","'use strict';\n\n// MODULES //\n\nvar floor = require( 'math-floor' );\n\n\n// DIV2 //\n\n/**\n* FUNCTION: div2( x )\n*\tConverts a nonnegative integer to a literal bit representation using the divide-by-2 algorithm.\n*\n* @param {Number} x - nonnegative integer\n* @returns {String} bit representation\n*/\nfunction div2( x ) {\n\tvar str = '';\n\tvar y;\n\n\t// We repeatedly divide by 2 and check for a remainder. If a remainder exists, the number is odd and we add a '1' bit...\n\twhile ( x > 0 ) {\n\t\ty = x / 2;\n\t\tx = floor( y );\n\t\tif ( y === x ) {\n\t\t\tstr = '0' + str;\n\t\t} else {\n\t\t\tstr = '1' + str;\n\t\t}\n\t}\n\treturn str;\n} // end FUNCTION div2()\n\n\n// EXPORTS //\n\nmodule.exports = div2;\n","'use strict';\n\n// MODULES //\n\nvar pinf = require( 'const-pinf-float32' );\nvar ninf = require( 'const-ninf-float32' );\nvar abs = require( 'math-abs' );\nvar floor = require( 'math-floor' );\nvar rpad = require( 'utils-right-pad-string' );\nvar lpad = require( 'utils-left-pad-string' );\nvar repeat = require( 'utils-repeat-string' );\nvar div2 = require( './div2.js' );\nvar mult2 = require( './mult2.js' );\n\n\n// CONSTANTS //\n\nvar BIAS = 127; // exponent bias => (2**8)/2 - 1\n\n\n// BINARY STRING //\n\n/**\n* FUNCTION: binaryString( x )\n*\tReturns a string giving the literal bit representation of a single-precision floating-point number.\n*\n* @param {Number} x - input value\n* @returns {String} bit representation\n*/\nfunction binaryString( x ) {\n\tvar nbits;\n\tvar sign;\n\tvar str;\n\tvar exp;\n\tvar n;\n\tvar f;\n\tvar i;\n\n\t// Check for a negative value or negative zero...\n\tif ( x < 0 || 1/x === ninf ) {\n\t\tsign = '1';\n\t} else {\n\t\tsign = '0';\n\t}\n\t// Special case: +-infinity\n\tif ( x === pinf || x === ninf ) {\n\t\t// Based on IEEE 754-2008...\n\t\texp = repeat( '1', 8 ); // all 1s\n\t\tstr = repeat( '0', 23 ); // all 0s\n\t\treturn sign + exp + str;\n\t}\n\t// Special case: NaN\n\tif ( x !== x ) {\n\t\t// Based on IEEE 754-2008...\n\t\texp = repeat( '1', 8 ); // all 1s\n\t\tstr = '1' + repeat( '0', 22 ); // can't be all 0s\n\t\treturn sign + exp + str;\n\t}\n\t// Special case: +-0\n\tif ( x === 0 ) {\n\t\t// Based on IEEE 754-2008...\n\t\texp = repeat( '0', 8 ); // all 0s\n\t\tstr = repeat( '0', 23 ); // all 0s\n\t\treturn sign + exp + str;\n\t}\n\tx = abs( x );\n\n\t// Isolate the integer part (digits before the decimal):\n\tn = floor( x );\n\n\t// Isolate the fractional part (digits after the decimal):\n\tf = x - n;\n\n\t// Convert the integer and fractional parts to bit strings:\n\tn = div2( n );\n\tf = mult2( f );\n\n\t// Determine the exponent needed to normalize the integer+fractional parts...\n\tif ( n ) {\n\t\t// Move the decimal `d` digits to the left:\n\t\texp = n.length - 1;\n\t} else {\n\t\t// Find the first '1' bit...\n\t\tfor ( i = 0; i < f.length; i++ ) {\n\t\t\tif ( f[ i ] === '1' ) {\n\t\t\t\tnbits = i + 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Move the decimal `d` digits to the right:\n\t\texp = -nbits;\n\t}\n\t// Normalize the combined integer+fractional string...\n\tstr = n + f;\n\tif ( exp < 0 ) {\n\t\t// Handle subnormals...\n\t\tif ( exp <= -BIAS ) {\n\t\t\t// Cap the number of bits removed:\n\t\t\tnbits = BIAS - 1;\n\t\t}\n\t\t// Remove all leading zeros and the first '1' for normal values, and, for subnormals, remove at most BIAS-1 leading bits:\n\t\tstr = str.substring( nbits );\n\t} else {\n\t\t// Remove the leading '1' (implicit/hidden bit):\n\t\tstr = str.substring( 1 );\n\t}\n\t// Convert the exponent to a bit string:\n\texp = div2( exp + BIAS );\n\texp = lpad( exp, 8, '0' );\n\n\t// Fill in any trailing zeros and ensure we have only 23 fraction bits:\n\tstr = rpad( str, 23, '0' ).substring( 0, 23 );\n\n\t// Return a bit representation:\n\treturn sign + exp + str;\n} // end FUNCTION binaryString()\n\n\n// EXPORTS //\n\nmodule.exports = binaryString;\n","'use strict';\n\n// VARIABLES //\n\nvar MAX_ITER = 149; // 127+22 (subnormals)\nvar MAX_BITS = 24; // only 23 bits for fraction\n\n\n// MULT2 //\n\n/**\n* FUNCTION: mult2( x )\n*\tConverts a fraction to a literal bit representation using the multiply-by-2 algorithm.\n*\n* @param {Number} x - number less than 1\n* @returns {String} bit representation\n*/\nfunction mult2( x ) {\n\tvar str;\n\tvar y;\n\tvar i;\n\tvar j;\n\n\tstr = '';\n\tif ( x === 0 ) {\n\t\treturn str;\n\t}\n\tj = MAX_ITER;\n\n\t// Each time we multiply by 2 and find a ones digit, add a '1'; otherwise, add a '0'..\n\tfor ( i = 0; i < MAX_ITER; i++ ) {\n\t\ty = x * 2;\n\t\tif ( y >= 1 ) {\n\t\t\tx = y - 1;\n\t\t\tstr += '1';\n\t\t\tif ( j === MAX_ITER ) {\n\t\t\t\tj = i; // first '1'\n\t\t\t}\n\t\t} else {\n\t\t\tx = y;\n\t\t\tstr += '0';\n\t\t}\n\t\t// Stop when we have no more decimals to process or in the event we found a fraction which cannot be represented in a finite number of bits...\n\t\tif ( y === 1 || i-j > MAX_BITS ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn str;\n} // end FUNCTION mult2()\n\n\n// EXPORTS //\n\nmodule.exports = mult2;\n","'use strict';\n\n// EXPORTS //\n\nmodule.exports = Math.floor;\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\n/**\n * nifti\n * @type {*|{}}\n */\nvar nifti = nifti || {};\nnifti.NIFTI1 = nifti.NIFTI1 || ((typeof require !== 'undefined') ? require('./nifti1.js') : null);\nnifti.NIFTI2 = nifti.NIFTI2 || ((typeof require !== 'undefined') ? require('./nifti2.js') : null);\nnifti.Utils = nifti.Utils || ((typeof require !== 'undefined') ? require('./utilities.js') : null);\n\nvar pako = pako || ((typeof require !== 'undefined') ? require('pako') : null);\n\n\n\n/*** Static Methods ***/\n\n/**\n * Returns true if this data represents a NIFTI-1 header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nnifti.isNIFTI1 = function (data) {\n    var buf, mag1, mag2, mag3;\n\n    if (data.byteLength < nifti.NIFTI1.STANDARD_HEADER_SIZE) {\n        return false;\n    }\n\n    buf = new DataView(data);\n\n    if (buf)\n\n    mag1 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION);\n    mag2 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION + 1);\n    mag3 = buf.getUint8(nifti.NIFTI1.MAGIC_NUMBER_LOCATION + 2);\n\n    return !!((mag1 === nifti.NIFTI1.MAGIC_NUMBER[0]) && (mag2 === nifti.NIFTI1.MAGIC_NUMBER[1]) &&\n        (mag3 === nifti.NIFTI1.MAGIC_NUMBER[2]));\n};\n\n\n/**\n * Returns true if this data represents a NIFTI-2 header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nnifti.isNIFTI2 = function (data) {\n    var buf, mag1, mag2, mag3;\n\n    if (data.byteLength < nifti.NIFTI1.STANDARD_HEADER_SIZE) {\n        return false;\n    }\n\n    buf = new DataView(data);\n    mag1 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION);\n    mag2 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION + 1);\n    mag3 = buf.getUint8(nifti.NIFTI2.MAGIC_NUMBER_LOCATION + 2);\n\n    return !!((mag1 === nifti.NIFTI2.MAGIC_NUMBER[0]) && (mag2 === nifti.NIFTI2.MAGIC_NUMBER[1]) &&\n    (mag3 === nifti.NIFTI2.MAGIC_NUMBER[2]));\n};\n\n\n\n/**\n * Returns true if this data represents a NIFTI header.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nnifti.isNIFTI = function (data) {\n    return (nifti.isNIFTI1(data) || nifti.isNIFTI2(data));\n};\n\n\n\n/**\n * Returns true if this data is GZIP compressed.\n * @param {ArrayBuffer} data\n * @returns {boolean}\n */\nnifti.isCompressed = function (data) {\n    var buf, magicCookie1, magicCookie2;\n\n    if (data) {\n        buf = new DataView(data);\n\n        magicCookie1 = buf.getUint8(0);\n        magicCookie2 = buf.getUint8(1);\n\n        if (magicCookie1 === nifti.Utils.GUNZIP_MAGIC_COOKIE1) {\n            return true;\n        }\n\n        if (magicCookie2 === nifti.Utils.GUNZIP_MAGIC_COOKIE2) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n\n\n/**\n * Returns decompressed data.\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nnifti.decompress = function (data) {\n    return pako.inflate(data).buffer;\n};\n\n\n\n/**\n * Reads and returns the header object.\n * @param {ArrayBuffer} data\n * @returns {nifti.NIFTI1|nifti.NIFTI2|null}\n */\nnifti.readHeader = function (data) {\n    var header = null;\n\n    if (nifti.isCompressed(data)) {\n        data = nifti.decompress(data);\n    }\n\n    if (nifti.isNIFTI1(data)) {\n        header = new nifti.NIFTI1();\n    } else if (nifti.isNIFTI2(data)) {\n        header = new nifti.NIFTI2();\n    }\n\n    if (header) {\n        header.readHeader(data);\n    } else {\n        console.error(\"That file does not appear to be NIFTI!\");\n    }\n\n    return header;\n};\n\n\n\n/**\n * Returns true if this header contains an extension.\n * @param {nifti.NIFTI1|nifti.NIFTI2} header\n * @returns {boolean}\n */\nnifti.hasExtension = function (header) {\n    return (header.extensionFlag[0] != 0);\n};\n\n\n\n/**\n * Returns the image data.\n * @param {nifti.NIFTI1|nifti.NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nnifti.readImage = function (header, data) {\n    var imageOffset = header.vox_offset,\n        timeDim = 1,\n        statDim = 1;\n\n    if (header.dims[4]) {\n        timeDim = header.dims[4];\n    }\n\n    if (header.dims[5]) {\n        statDim = header.dims[5];\n    }\n\n    var imageSize = header.dims[1] * header.dims[2] * header.dims[3] * timeDim * statDim * (header.numBitsPerVoxel / 8);\n    return data.slice(imageOffset, imageOffset + imageSize);\n};\n\n\n\n/**\n * Returns the extension data (including extension header).\n * @param {nifti.NIFTI1|nifti.NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nnifti.readExtension = function (header, data) {\n    var loc = header.getExtensionLocation(),\n        size = header.extensionSize;\n\n    return data.slice(loc, loc + size);\n};\n\n\n\n/**\n * Returns the extension data.\n * @param {nifti.NIFTI1|nifti.NIFTI2} header\n * @param {ArrayBuffer} data\n * @returns {ArrayBuffer}\n */\nnifti.readExtensionData = function (header, data) {\n    var loc = header.getExtensionLocation(),\n        size = header.extensionSize;\n\n    return data.slice(loc + 8, loc + size - 8);\n};\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = nifti;\n}\n","\n/*jslint browser: true, node: true */\n/*global */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar nifti = nifti || {};\nnifti.Utils = nifti.Utils || ((typeof require !== 'undefined') ? require('./utilities.js') : null);\n\n\n\n/*** Constructor ***/\n\n/**\n * The NIFTI1 constructor.\n * @constructor\n * @property {boolean} littleEndian\n * @property {number} dim_info\n * @property {number[]} dims - image dimensions\n * @property {number} intent_p1\n * @property {number} intent_p2\n * @property {number} intent_p3\n * @property {number} intent_code\n * @property {number} datatypeCode\n * @property {number} numBitsPerVoxel\n * @property {number} slice_start\n * @property {number} slice_end\n * @property {number} slice_code\n * @property {number[]} pixDims - voxel dimensions\n * @property {number} vox_offset\n * @property {number} scl_slope\n * @property {number} scl_inter\n * @property {number} xyzt_units\n * @property {number} cal_max\n * @property {number} cal_min\n * @property {number} slice_duration\n * @property {number} toffset\n * @property {string} description\n * @property {string} aux_file\n * @property {string} intent_name\n * @property {number} qform_code\n * @property {number} sform_code\n * @property {number} quatern_b\n * @property {number} quatern_c\n * @property {number} quatern_d\n * @property {number} quatern_x\n * @property {number} quatern_y\n * @property {number} quatern_z\n * @property {Array.<Array.<number>>} affine\n * @property {string} magic\n * @property {boolean} isHDR - if hdr/img format\n * @property {number[]} extensionFlag\n * @property {number} extensionSize\n * @property {number} extensionCode\n * @type {Function}\n */\nnifti.NIFTI1 = nifti.NIFTI1 || function () {\n    this.littleEndian = false;\n    this.dim_info = 0;\n    this.dims = [];\n    this.intent_p1 = 0;\n    this.intent_p2 = 0;\n    this.intent_p3 = 0;\n    this.intent_code = 0;\n    this.datatypeCode = 0;\n    this.numBitsPerVoxel = 0;\n    this.slice_start = 0;\n    this.slice_end = 0;\n    this.slice_code = 0;\n    this.pixDims = [];\n    this.vox_offset = 0;\n    this.scl_slope = 1;\n    this.scl_inter = 0;\n    this.xyzt_units = 0;\n    this.cal_max = 0;\n    this.cal_min = 0;\n    this.slice_duration = 0;\n    this.toffset = 0;\n    this.description = \"\";\n    this.aux_file = \"\";\n    this.intent_name = \"\";\n    this.qform_code = 0;\n    this.sform_code = 0;\n    this.quatern_b = 0;\n    this.quatern_c = 0;\n    this.quatern_d = 0;\n    this.qoffset_x = 0;\n    this.qoffset_y = 0;\n    this.qoffset_z = 0;\n    this.affine = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n    this.magic = 0;\n    this.isHDR = false;\n    this.extensionFlag = [0, 0, 0, 0];\n    this.extensionSize = 0;\n    this.extensionCode = 0;\n};\n\n\n\n/*** Static Pseudo-constants ***/\n\n// datatype codes\nnifti.NIFTI1.TYPE_NONE            = 0;\nnifti.NIFTI1.TYPE_BINARY          = 1;\nnifti.NIFTI1.TYPE_UINT8           = 2;\nnifti.NIFTI1.TYPE_INT16           = 4;\nnifti.NIFTI1.TYPE_INT32           = 8;\nnifti.NIFTI1.TYPE_FLOAT32        = 16;\nnifti.NIFTI1.TYPE_COMPLEX64      = 32;\nnifti.NIFTI1.TYPE_FLOAT64        = 64;\nnifti.NIFTI1.TYPE_RGB24         = 128;\nnifti.NIFTI1.TYPE_INT8          = 256;\nnifti.NIFTI1.TYPE_UINT16        = 512;\nnifti.NIFTI1.TYPE_UINT32        = 768;\nnifti.NIFTI1.TYPE_INT64        = 1024;\nnifti.NIFTI1.TYPE_UINT64       = 1280;\nnifti.NIFTI1.TYPE_FLOAT128     = 1536;\nnifti.NIFTI1.TYPE_COMPLEX128   = 1792;\nnifti.NIFTI1.TYPE_COMPLEX256   = 2048;\n\n// transform codes\nnifti.NIFTI1.XFORM_UNKNOWN        = 0;\nnifti.NIFTI1.XFORM_SCANNER_ANAT   = 1;\nnifti.NIFTI1.XFORM_ALIGNED_ANAT   = 2;\nnifti.NIFTI1.XFORM_TALAIRACH      = 3;\nnifti.NIFTI1.XFORM_MNI_152        = 4;\n\n// unit codes\nnifti.NIFTI1.SPATIAL_UNITS_MASK = 0x07;\nnifti.NIFTI1.TEMPORAL_UNITS_MASK = 0x38;\nnifti.NIFTI1.UNITS_UNKNOWN        = 0;\nnifti.NIFTI1.UNITS_METER          = 1;\nnifti.NIFTI1.UNITS_MM             = 2;\nnifti.NIFTI1.UNITS_MICRON         = 3;\nnifti.NIFTI1.UNITS_SEC            = 8;\nnifti.NIFTI1.UNITS_MSEC          = 16;\nnifti.NIFTI1.UNITS_USEC          = 24;\nnifti.NIFTI1.UNITS_HZ            = 32;\nnifti.NIFTI1.UNITS_PPM           = 40;\nnifti.NIFTI1.UNITS_RADS          = 48;\n\n// nifti1 codes\nnifti.NIFTI1.MAGIC_COOKIE = 348;\nnifti.NIFTI1.STANDARD_HEADER_SIZE = 348;\nnifti.NIFTI1.MAGIC_NUMBER_LOCATION = 344;\nnifti.NIFTI1.MAGIC_NUMBER = [0x6E, 0x2B, 0x31];  // n+1 (.nii)\nnifti.NIFTI1.MAGIC_NUMBER2 = [0x6E, 0x69, 0x31];  // ni1 (.hdr/.img)\nnifti.NIFTI1.EXTENSION_HEADER_SIZE = 8;\n\n\n/*** Prototype Methods ***/\n\n/**\n * Reads the header data.\n * @param {ArrayBuffer} data\n */\nnifti.NIFTI1.prototype.readHeader = function (data) {\n    var rawData = new DataView(data),\n        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian),\n        ctr,\n        ctrOut,\n        ctrIn,\n        index;\n\n    if (magicCookieVal !== nifti.NIFTI1.MAGIC_COOKIE) {  // try as little endian\n        this.littleEndian = true;\n        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian);\n    }\n\n    if (magicCookieVal !== nifti.NIFTI1.MAGIC_COOKIE) {\n        throw new Error(\"This does not appear to be a NIFTI file!\");\n    }\n\n    this.dim_info = nifti.Utils.getByteAt(rawData, 39);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        index = 40 + (ctr * 2);\n        this.dims[ctr] = nifti.Utils.getShortAt(rawData, index, this.littleEndian);\n    }\n\n    this.intent_p1 = nifti.Utils.getFloatAt(rawData, 56, this.littleEndian);\n    this.intent_p2 = nifti.Utils.getFloatAt(rawData, 60, this.littleEndian);\n    this.intent_p3 = nifti.Utils.getFloatAt(rawData, 64, this.littleEndian);\n    this.intent_code = nifti.Utils.getShortAt(rawData, 68, this.littleEndian);\n\n    this.datatypeCode = nifti.Utils.getShortAt(rawData, 70, this.littleEndian);\n    this.numBitsPerVoxel = nifti.Utils.getShortAt(rawData, 72, this.littleEndian);\n\n    this.slice_start = nifti.Utils.getShortAt(rawData, 74, this.littleEndian);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        index = 76 + (ctr * 4);\n        this.pixDims[ctr] = nifti.Utils.getFloatAt(rawData, index, this.littleEndian);\n    }\n\n    this.vox_offset = nifti.Utils.getFloatAt(rawData, 108, this.littleEndian);\n\n    this.scl_slope = nifti.Utils.getFloatAt(rawData, 112, this.littleEndian);\n    this.scl_inter = nifti.Utils.getFloatAt(rawData, 116, this.littleEndian);\n\n    this.slice_end = nifti.Utils.getShortAt(rawData, 120, this.littleEndian);\n    this.slice_code = nifti.Utils.getByteAt(rawData, 122);\n\n    this.xyzt_units = nifti.Utils.getByteAt(rawData, 123);\n\n    this.cal_max = nifti.Utils.getFloatAt(rawData, 124, this.littleEndian);\n    this.cal_min = nifti.Utils.getFloatAt(rawData, 128, this.littleEndian);\n\n    this.slice_duration = nifti.Utils.getFloatAt(rawData, 132, this.littleEndian);\n    this.toffset = nifti.Utils.getFloatAt(rawData, 136, this.littleEndian);\n\n    this.description = nifti.Utils.getStringAt(rawData, 148, 228);\n    this.aux_file = nifti.Utils.getStringAt(rawData, 228, 252);\n\n    this.qform_code = nifti.Utils.getShortAt(rawData, 252, this.littleEndian);\n    this.sform_code = nifti.Utils.getShortAt(rawData, 254, this.littleEndian);\n\n    this.quatern_b = nifti.Utils.getFloatAt(rawData, 256, this.littleEndian);\n    this.quatern_c = nifti.Utils.getFloatAt(rawData, 260, this.littleEndian);\n    this.quatern_d = nifti.Utils.getFloatAt(rawData, 264, this.littleEndian);\n    this.qoffset_x = nifti.Utils.getFloatAt(rawData, 268, this.littleEndian);\n    this.qoffset_y = nifti.Utils.getFloatAt(rawData, 272, this.littleEndian);\n    this.qoffset_z = nifti.Utils.getFloatAt(rawData, 276, this.littleEndian);\n\n    for (ctrOut = 0; ctrOut < 3; ctrOut += 1) {\n        for (ctrIn = 0; ctrIn < 4; ctrIn += 1) {\n            index = 280 + (((ctrOut * 4) + ctrIn) * 4);\n            this.affine[ctrOut][ctrIn] = nifti.Utils.getFloatAt(rawData, index, this.littleEndian);\n        }\n    }\n\n    this.affine[3][0] = 0;\n    this.affine[3][1] = 0;\n    this.affine[3][2] = 0;\n    this.affine[3][3] = 1;\n\n    this.intent_name = nifti.Utils.getStringAt(rawData, 328, 344);\n    this.magic = nifti.Utils.getStringAt(rawData, 344, 348);\n\n    this.isHDR = (this.magic === nifti.NIFTI1.MAGIC_NUMBER2);\n\n    if (rawData.byteLength > nifti.NIFTI1.MAGIC_COOKIE) {\n        this.extensionFlag[0] = nifti.Utils.getByteAt(rawData, 348);\n        this.extensionFlag[1] = nifti.Utils.getByteAt(rawData, 348 + 1);\n        this.extensionFlag[2] = nifti.Utils.getByteAt(rawData, 348 + 2);\n        this.extensionFlag[3] = nifti.Utils.getByteAt(rawData, 348 + 3);\n\n        if (this.extensionFlag[0]) {\n            this.extensionSize = this.getExtensionSize(rawData);\n            this.extensionCode = this.getExtensionCode(rawData);\n        }\n    }\n};\n\n\n/**\n * Returns a formatted string of header fields.\n * @returns {string}\n */\nnifti.NIFTI1.prototype.toFormattedString = function () {\n    var fmt = nifti.Utils.formatNumber,\n        string = \"\";\n\n    string += (\"Dim Info = \" + this.dim_info + \"\\n\");\n\n    string += (\"Image Dimensions (1-8): \" +\n        this.dims[0] + \", \" +\n        this.dims[1] + \", \" +\n        this.dims[2] + \", \" +\n        this.dims[3] + \", \" +\n        this.dims[4] + \", \" +\n        this.dims[5] + \", \" +\n        this.dims[6] + \", \" +\n        this.dims[7] + \"\\n\");\n\n    string += (\"Intent Parameters (1-3): \" +\n        this.intent_p1 + \", \" +\n        this.intent_p2 + \", \" +\n        this.intent_p3) + \"\\n\";\n\n    string += (\"Intent Code = \" + this.intent_code + \"\\n\");\n    string += (\"Datatype = \" + this.datatypeCode +  \" (\" + this.getDatatypeCodeString(this.datatypeCode) + \")\\n\");\n    string += (\"Bits Per Voxel = \" + this.numBitsPerVoxel + \"\\n\");\n    string += (\"Slice Start = \" + this.slice_start + \"\\n\");\n    string += (\"Voxel Dimensions (1-8): \" +\n        fmt(this.pixDims[0]) + \", \" +\n        fmt(this.pixDims[1]) + \", \" +\n        fmt(this.pixDims[2]) + \", \" +\n        fmt(this.pixDims[3]) + \", \" +\n        fmt(this.pixDims[4]) + \", \" +\n        fmt(this.pixDims[5]) + \", \" +\n        fmt(this.pixDims[6]) + \", \" +\n        fmt(this.pixDims[7]) + \"\\n\");\n\n    string += (\"Image Offset = \" + this.vox_offset + \"\\n\");\n    string += (\"Data Scale:  Slope = \" + fmt(this.scl_slope) + \"  Intercept = \" + fmt(this.scl_inter) + \"\\n\");\n    string += (\"Slice End = \" + this.slice_end + \"\\n\");\n    string += (\"Slice Code = \" + this.slice_code + \"\\n\");\n    string += (\"Units Code = \" + this.xyzt_units + \" (\" + this.getUnitsCodeString(nifti.NIFTI1.SPATIAL_UNITS_MASK & this.xyzt_units) + \", \" + this.getUnitsCodeString(nifti.NIFTI1.TEMPORAL_UNITS_MASK & this.xyzt_units) + \")\\n\");\n    string += (\"Display Range:  Max = \" + fmt(this.cal_max) + \"  Min = \" + fmt(this.cal_min) + \"\\n\");\n    string += (\"Slice Duration = \" + this.slice_duration + \"\\n\");\n    string += (\"Time Axis Shift = \" + this.toffset + \"\\n\");\n    string += (\"Description: \\\"\" + this.description + \"\\\"\\n\");\n    string += (\"Auxiliary File: \\\"\" + this.aux_file + \"\\\"\\n\");\n    string += (\"Q-Form Code = \" + this.qform_code + \" (\" + this.getTransformCodeString(this.qform_code) + \")\\n\");\n    string += (\"S-Form Code = \" + this.sform_code + \" (\" + this.getTransformCodeString(this.sform_code) + \")\\n\");\n    string += (\"Quaternion Parameters:  \" +\n        \"b = \" + fmt(this.quatern_b) + \"  \" +\n        \"c = \" + fmt(this.quatern_c) + \"  \" +\n        \"d = \" + fmt(this.quatern_d) + \"\\n\");\n\n    string += (\"Quaternion Offsets:  \" +\n        \"x = \" + this.qoffset_x + \"  \" +\n        \"y = \" + this.qoffset_y + \"  \" +\n        \"z = \" + this.qoffset_z + \"\\n\");\n\n    string += (\"S-Form Parameters X: \" +\n        fmt(this.affine[0][0]) + \", \" +\n        fmt(this.affine[0][1]) + \", \" +\n        fmt(this.affine[0][2]) + \", \" +\n        fmt(this.affine[0][3]) + \"\\n\");\n\n    string += (\"S-Form Parameters Y: \" +\n        fmt(this.affine[1][0]) + \", \" +\n        fmt(this.affine[1][1]) + \", \" +\n        fmt(this.affine[1][2]) + \", \" +\n        fmt(this.affine[1][3]) + \"\\n\");\n\n    string += (\"S-Form Parameters Z: \" +\n        fmt(this.affine[2][0]) + \", \" +\n        fmt(this.affine[2][1]) + \", \" +\n        fmt(this.affine[2][2]) + \", \" +\n        fmt(this.affine[2][3]) + \"\\n\");\n\n    string += (\"Intent Name: \\\"\" + this.intent_name + \"\\\"\\n\");\n\n    if (this.extensionFlag[0]) {\n        string += (\"Extension: Size = \" + this.extensionSize + \"  Code = \" + this.extensionCode + \"\\n\");\n\n    }\n\n    return string;\n};\n\n\n/**\n * Returns a human-readable string of datatype.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI1.prototype.getDatatypeCodeString = function (code) {\n    if (code === nifti.NIFTI1.TYPE_UINT8) {\n        return \"1-Byte Unsigned Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_INT16) {\n        return \"2-Byte Signed Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_INT32) {\n        return \"4-Byte Signed Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_FLOAT32) {\n        return \"4-Byte Float\";\n    } else if (code === nifti.NIFTI1.TYPE_FLOAT64) {\n        return \"8-Byte Float\";\n    } else if (code === nifti.NIFTI1.TYPE_RGB24) {\n        return \"RGB\";\n    } else if (code === nifti.NIFTI1.TYPE_INT8) {\n        return \"1-Byte Signed Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_UINT16) {\n        return \"2-Byte Unsigned Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_UINT32) {\n        return \"4-Byte Unsigned Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_INT64) {\n        return \"8-Byte Signed Integer\";\n    } else if (code === nifti.NIFTI1.TYPE_UINT64) {\n        return \"8-Byte Unsigned Integer\";\n    } else {\n        return \"Unknown\";\n    }\n};\n\n\n/**\n * Returns a human-readable string of transform type.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI1.prototype.getTransformCodeString = function (code) {\n    if (code === nifti.NIFTI1.XFORM_SCANNER_ANAT) {\n        return \"Scanner\";\n    } else if (code === nifti.NIFTI1.XFORM_ALIGNED_ANAT) {\n        return \"Aligned\";\n    } else if (code === nifti.NIFTI1.XFORM_TALAIRACH) {\n        return \"Talairach\";\n    } else if (code === nifti.NIFTI1.XFORM_MNI_152) {\n        return \"MNI\";\n    } else {\n        return \"Unknown\";\n    }\n};\n\n\n/**\n * Returns a human-readable string of spatial and temporal units.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI1.prototype.getUnitsCodeString = function (code) {\n    if (code === nifti.NIFTI1.UNITS_METER) {\n        return \"Meters\";\n    } else if (code === nifti.NIFTI1.UNITS_MM) {\n        return \"Millimeters\";\n    } else if (code === nifti.NIFTI1.UNITS_MICRON) {\n        return \"Microns\";\n    } else if (code === nifti.NIFTI1.UNITS_SEC) {\n        return \"Seconds\";\n    } else if (code === nifti.NIFTI1.UNITS_MSEC) {\n        return \"Milliseconds\";\n    } else if (code === nifti.NIFTI1.UNITS_USEC) {\n        return \"Microseconds\";\n    } else if (code === nifti.NIFTI1.UNITS_HZ) {\n        return \"Hz\";\n    } else if (code === nifti.NIFTI1.UNITS_PPM) {\n        return \"PPM\";\n    } else if (code === nifti.NIFTI1.UNITS_RADS) {\n        return \"Rads\";\n    } else {\n        return \"Unknown\";\n    }\n};\n\n\n/**\n * Returns the qform matrix.\n * @returns {Array.<Array.<number>>}\n */\nnifti.NIFTI1.prototype.getQformMat = function () {\n    return this.convertNiftiQFormToNiftiSForm(this.quatern_b, this.quatern_c, this.quatern_d, this.qoffset_x,\n        this.qoffset_y, this.qoffset_z, this.pixDims[1], this.pixDims[2], this.pixDims[3], this.pixDims[0]);\n};\n\n\n\n/**\n * Converts qform to an affine.  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n * @param {number} qb\n * @param {number} qc\n * @param {number} qd\n * @param {number} qx\n * @param {number} qy\n * @param {number} qz\n * @param {number} dx\n * @param {number} dy\n * @param {number} dz\n * @param {number} qfac\n * @returns {Array.<Array.<number>>}\n */\nnifti.NIFTI1.prototype.convertNiftiQFormToNiftiSForm = function (qb, qc, qd, qx, qy, qz, dx, dy, dz,\n                                                qfac) {\n    var R = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n        a,\n        b = qb,\n        c = qc,\n        d = qd,\n        xd,\n        yd,\n        zd;\n\n    // last row is always [ 0 0 0 1 ]\n    R[3][0] = R[3][1] = R[3][2] = 0.0;\n    R[3][3] = 1.0;\n\n    // compute a parameter from b,c,d\n    a = 1.0 - (b * b + c * c + d * d);\n    if (a < 0.0000001) {                   /* special case */\n\n        a = 1.0 / Math.sqrt(b * b + c * c + d * d);\n        b *= a;\n        c *= a;\n        d *= a;        /* normalize (b,c,d) vector */\n        a = 0.0;                        /* a = 0 ==> 180 degree rotation */\n    } else {\n\n        a = Math.sqrt(a);                     /* angle = 2*arccos(a) */\n    }\n\n    // load rotation matrix, including scaling factors for voxel sizes\n    xd = (dx > 0.0) ? dx : 1.0;       /* make sure are positive */\n    yd = (dy > 0.0) ? dy : 1.0;\n    zd = (dz > 0.0) ? dz : 1.0;\n\n    if (qfac < 0.0) {\n        zd = -zd;         /* left handedness? */\n    }\n\n    R[0][0] =       (a * a + b * b - c * c - d * d) * xd;\n    R[0][1] = 2.0 * (b * c - a * d) * yd;\n    R[0][2] = 2.0 * (b * d + a * c) * zd;\n    R[1][0] = 2.0 * (b * c + a * d) * xd;\n    R[1][1] =       (a * a + c * c - b * b - d * d) * yd;\n    R[1][2] = 2.0 * (c * d - a * b) * zd;\n    R[2][0] = 2.0 * (b * d - a * c) * xd;\n    R[2][1] = 2.0 * (c * d + a * b) * yd;\n    R[2][2] =       (a * a + d * d - c * c - b * b) * zd;\n\n    // load offsets\n    R[0][3] = qx;\n    R[1][3] = qy;\n    R[2][3] = qz;\n\n    return R;\n};\n\n\n\n/**\n * Converts sform to an orientation string (e.g., XYZ+--).  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n * @param {Array.<Array.<number>>} R\n * @returns {string}\n */\nnifti.NIFTI1.prototype.convertNiftiSFormToNEMA = function (R) {\n    var xi, xj, xk, yi, yj, yk, zi, zj, zk, val, detQ, detP, i, j, k, p, q, r, ibest, jbest, kbest, pbest, qbest, rbest,\n        M, vbest, Q, P, iChar, jChar, kChar, iSense, jSense, kSense;\n    k = 0;\n\n    Q = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n    P = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n\n    //if( icod == NULL || jcod == NULL || kcod == NULL ) return ; /* bad */\n\n    //*icod = *jcod = *kcod = 0 ; /* this.errorMessage returns, if sh*t happens */\n\n    /* load column vectors for each (i,j,k) direction from matrix */\n\n    /*-- i axis --*/ /*-- j axis --*/ /*-- k axis --*/\n\n    xi = R[0][0];\n    xj = R[0][1];\n    xk = R[0][2];\n\n    yi = R[1][0];\n    yj = R[1][1];\n    yk = R[1][2];\n\n    zi = R[2][0];\n    zj = R[2][1];\n    zk = R[2][2];\n\n    /* normalize column vectors to get unit vectors along each ijk-axis */\n\n    /* normalize i axis */\n    val = Math.sqrt(xi * xi + yi * yi + zi * zi);\n    if (val === 0.0) {  /* stupid input */\n        return null;\n    }\n\n    xi /= val;\n    yi /= val;\n    zi /= val;\n\n    /* normalize j axis */\n    val = Math.sqrt(xj * xj + yj * yj + zj * zj);\n    if (val === 0.0) {  /* stupid input */\n        return null;\n    }\n\n    xj /= val;\n    yj /= val;\n    zj /= val;\n\n    /* orthogonalize j axis to i axis, if needed */\n    val = xi * xj + yi * yj + zi * zj;    /* dot product between i and j */\n    if (Math.abs(val) > 1.E-4) {\n        xj -= val * xi;\n        yj -= val * yi;\n        zj -= val * zi;\n        val = Math.sqrt(xj * xj + yj * yj + zj * zj);  /* must renormalize */\n        if (val === 0.0) {              /* j was parallel to i? */\n            return null;\n        }\n        xj /= val;\n        yj /= val;\n        zj /= val;\n    }\n\n    /* normalize k axis; if it is zero, make it the cross product i x j */\n    val = Math.sqrt(xk * xk + yk * yk + zk * zk);\n    if (val === 0.0) {\n        xk = yi * zj - zi * yj;\n        yk = zi * xj - zj * xi;\n        zk = xi * yj - yi * xj;\n    } else {\n        xk /= val;\n        yk /= val;\n        zk /= val;\n    }\n\n    /* orthogonalize k to i */\n    val = xi * xk + yi * yk + zi * zk;    /* dot product between i and k */\n    if (Math.abs(val) > 1.E-4) {\n        xk -= val * xi;\n        yk -= val * yi;\n        zk -= val * zi;\n        val = Math.sqrt(xk * xk + yk * yk + zk * zk);\n        if (val === 0.0) {    /* bad */\n            return null;\n        }\n        xk /= val;\n        yk /= val;\n        zk /= val;\n    }\n\n    /* orthogonalize k to j */\n    val = xj * xk + yj * yk + zj * zk;    /* dot product between j and k */\n    if (Math.abs(val) > 1.e-4) {\n        xk -= val * xj;\n        yk -= val * yj;\n        zk -= val * zj;\n        val = Math.sqrt(xk * xk + yk * yk + zk * zk);\n        if (val === 0.0) {     /* bad */\n            return null;\n        }\n        xk /= val;\n        yk /= val;\n        zk /= val;\n    }\n\n    Q[0][0] = xi;\n    Q[0][1] = xj;\n    Q[0][2] = xk;\n    Q[1][0] = yi;\n    Q[1][1] = yj;\n    Q[1][2] = yk;\n    Q[2][0] = zi;\n    Q[2][1] = zj;\n    Q[2][2] = zk;\n\n    /* at this point, Q is the rotation matrix from the (i,j,k) to (x,y,z) axes */\n\n    detQ = this.nifti_mat33_determ(Q);\n    if (detQ === 0.0) { /* shouldn't happen unless user is a DUFIS */\n        return null;\n    }\n\n    /* Build and test all possible +1/-1 coordinate permutation matrices P;\n     then find the P such that the rotation matrix M=PQ is closest to the\n     identity, in the sense of M having the smallest total rotation angle. */\n\n    /* Despite the formidable looking 6 nested loops, there are\n     only 3*3*3*2*2*2 = 216 passes, which will run very quickly. */\n\n    vbest = -666.0;\n    ibest = pbest = qbest = rbest = 1;\n    jbest = 2;\n    kbest = 3;\n\n    for (i = 1; i <= 3; i += 1) {     /* i = column number to use for row #1 */\n        for (j = 1; j <= 3; j += 1) {    /* j = column number to use for row #2 */\n            if (i !== j) {\n                for (k = 1; k <= 3; k += 1) {  /* k = column number to use for row #3 */\n                    if (!(i === k || j === k)) {\n                        P[0][0] = P[0][1] = P[0][2] = P[1][0] = P[1][1] = P[1][2] = P[2][0] = P[2][1] = P[2][2] = 0.0;\n                        for (p = -1; p <= 1; p += 2) {    /* p,q,r are -1 or +1      */\n                            for (q = -1; q <= 1; q += 2) {   /* and go into rows #1,2,3 */\n                                for (r = -1; r <= 1; r += 2) {\n                                    P[0][i - 1] = p;\n                                    P[1][j - 1] = q;\n                                    P[2][k - 1] = r;\n                                    detP = this.nifti_mat33_determ(P);           /* sign of permutation */\n                                    if ((detP * detQ) > 0.0) {\n                                        M = this.nifti_mat33_mul(P, Q);\n\n                                        /* angle of M rotation = 2.0*acos(0.5*sqrt(1.0+trace(M)))       */\n                                        /* we want largest trace(M) == smallest angle == M nearest to I */\n\n                                        val = M[0][0] + M[1][1] + M[2][2]; /* trace */\n                                        if (val > vbest) {\n                                            vbest = val;\n                                            ibest = i;\n                                            jbest = j;\n                                            kbest = k;\n                                            pbest = p;\n                                            qbest = q;\n                                            rbest = r;\n                                        }\n                                    }  /* doesn't match sign of Q */\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /* At this point ibest is 1 or 2 or 3; pbest is -1 or +1; etc.\n\n     The matrix P that corresponds is the best permutation approximation\n     to Q-inverse; that is, P (approximately) takes (x,y,z) coordinates\n     to the (i,j,k) axes.\n\n     For example, the first row of P (which contains pbest in column ibest)\n     determines the way the i axis points relative to the anatomical\n     (x,y,z) axes.  If ibest is 2, then the i axis is along the y axis,\n     which is direction P2A (if pbest > 0) or A2P (if pbest < 0).\n\n     So, using ibest and pbest, we can assign the output code for\n     the i axis.  Mutatis mutandis for the j and k axes, of course. */\n\n    iChar = jChar = kChar = iSense = jSense = kSense = 0;\n\n    switch (ibest * pbest) {\n        case 1: /*i = NIFTI_L2R*/\n            iChar = 'X';\n            iSense = '+';\n            break;\n        case -1: /*i = NIFTI_R2L*/\n            iChar = 'X';\n            iSense = '-';\n            break;\n        case 2: /*i = NIFTI_P2A*/\n            iChar = 'Y';\n            iSense = '+';\n            break;\n        case -2: /*i = NIFTI_A2P*/\n            iChar = 'Y';\n            iSense = '-';\n            break;\n        case 3: /*i = NIFTI_I2S*/\n            iChar = 'Z';\n            iSense = '+';\n            break;\n        case -3: /*i = NIFTI_S2I*/\n            iChar = 'Z';\n            iSense = '-';\n            break;\n    }\n\n    switch (jbest * qbest) {\n        case 1: /*j = NIFTI_L2R*/\n            jChar = 'X';\n            jSense = '+';\n            break;\n        case -1: /*j = NIFTI_R2L*/\n            jChar = 'X';\n            jSense = '-';\n            break;\n        case 2: /*j = NIFTI_P2A*/\n            jChar = 'Y';\n            jSense = '+';\n            break;\n        case -2: /*j = NIFTI_A2P*/\n            jChar = 'Y';\n            jSense = '-';\n            break;\n        case 3: /*j = NIFTI_I2S*/\n            jChar = 'Z';\n            jSense = '+';\n            break;\n        case -3: /*j = NIFTI_S2I*/\n            jChar = 'Z';\n            jSense = '-';\n            break;\n    }\n\n    switch (kbest * rbest) {\n        case 1: /*k = NIFTI_L2R*/\n            kChar = 'X';\n            kSense = '+';\n            break;\n        case -1: /*k = NIFTI_R2L*/\n            kChar = 'X';\n            kSense = '-';\n            break;\n        case 2: /*k = NIFTI_P2A*/\n            kChar = 'Y';\n            kSense = '+';\n            break;\n        case -2: /*k = NIFTI_A2P*/\n            kChar = 'Y';\n            kSense = '-';\n            break;\n        case 3: /*k = NIFTI_I2S*/\n            kChar = 'Z';\n            kSense = '+';\n            break;\n        case -3: /*k = NIFTI_S2I*/\n            kChar = 'Z';\n            kSense = '-';\n            break;\n    }\n\n    return (iChar + jChar + kChar + iSense + jSense + kSense);\n};\n\n\n\nnifti.NIFTI1.prototype.nifti_mat33_mul = function (A, B) {\n    var C = [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n        i,\n        j;\n\n    for (i = 0; i < 3; i += 1) {\n        for (j = 0; j < 3; j += 1) {\n            C[i][j] =  A[i][0] * B[0][j]  + A[i][1] * B[1][j] + A[i][2] * B[2][j];\n        }\n    }\n\n    return C;\n};\n\n\n\nnifti.NIFTI1.prototype.nifti_mat33_determ = function (R) {\n    var r11, r12, r13, r21, r22, r23, r31, r32, r33;\n    /*  INPUT MATRIX:  */\n    r11 = R[0][0];\n    r12 = R[0][1];\n    r13 = R[0][2];\n    r21 = R[1][0];\n    r22 = R[1][1];\n    r23 = R[1][2];\n    r31 = R[2][0];\n    r32 = R[2][1];\n    r33 = R[2][2];\n\n    return (r11 * r22 * r33 - r11 * r32 * r23 - r21 * r12 * r33 + r21 * r32 * r13 + r31 * r12 * r23 - r31 * r22 * r13);\n};\n\n\n/**\n * Returns the byte index of the extension.\n * @returns {number}\n */\nnifti.NIFTI1.prototype.getExtensionLocation = function() {\n    return nifti.NIFTI1.MAGIC_COOKIE + 4;\n};\n\n\n/**\n * Returns the extension size.\n * @param {DataView} data\n * @returns {number}\n */\nnifti.NIFTI1.prototype.getExtensionSize = function(data) {\n    return nifti.Utils.getIntAt(data, this.getExtensionLocation(), this.littleEndian);\n};\n\n\n\n/**\n * Returns the extension code.\n * @param {DataView} data\n * @returns {number}\n */\nnifti.NIFTI1.prototype.getExtensionCode = function(data) {\n    return nifti.Utils.getIntAt(data, this.getExtensionLocation() + 4, this.littleEndian);\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = nifti.NIFTI1;\n}\n","\n/*jslint browser: true, node: true */\n/*global */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar nifti = nifti || {};\nnifti.Utils = nifti.Utils || ((typeof require !== 'undefined') ? require('./utilities.js') : null);\nnifti.NIFTI1 = nifti.NIFTI1 || ((typeof require !== 'undefined') ? require('./nifti1.js') : null);\n\n\n/*** Constructor ***/\n\n/**\n * The NIFTI2 constructor.\n * @constructor\n * @property {boolean} littleEndian\n * @property {number} dim_info\n * @property {number[]} dims - image dimensions\n * @property {number} intent_p1\n * @property {number} intent_p2\n * @property {number} intent_p3\n * @property {number} intent_code\n * @property {number} datatypeCode\n * @property {number} numBitsPerVoxel\n * @property {number} slice_start\n * @property {number} slice_end\n * @property {number} slice_code\n * @property {number[]} pixDims - voxel dimensions\n * @property {number} vox_offset\n * @property {number} scl_slope\n * @property {number} scl_inter\n * @property {number} xyzt_units\n * @property {number} cal_max\n * @property {number} cal_min\n * @property {number} slice_duration\n * @property {number} toffset\n * @property {string} description\n * @property {string} aux_file\n * @property {string} intent_name\n * @property {number} qform_code\n * @property {number} sform_code\n * @property {number} quatern_b\n * @property {number} quatern_c\n * @property {number} quatern_d\n * @property {number} quatern_x\n * @property {number} quatern_y\n * @property {number} quatern_z\n * @property {Array.<Array.<number>>} affine\n * @property {string} magic\n * @property {number[]} extensionFlag\n * @type {Function}\n */\nnifti.NIFTI2 = nifti.NIFTI2 || function () {\n    this.littleEndian = false;\n    this.dim_info = 0;\n    this.dims = [];\n    this.intent_p1 = 0;\n    this.intent_p2 = 0;\n    this.intent_p3 = 0;\n    this.intent_code = 0;\n    this.datatypeCode = 0;\n    this.numBitsPerVoxel = 0;\n    this.slice_start = 0;\n    this.slice_end = 0;\n    this.slice_code = 0;\n    this.pixDims = [];\n    this.vox_offset = 0;\n    this.scl_slope = 1;\n    this.scl_inter = 0;\n    this.xyzt_units = 0;\n    this.cal_max = 0;\n    this.cal_min = 0;\n    this.slice_duration = 0;\n    this.toffset = 0;\n    this.description = \"\";\n    this.aux_file = \"\";\n    this.intent_name = \"\";\n    this.qform_code = 0;\n    this.sform_code = 0;\n    this.quatern_b = 0;\n    this.quatern_c = 0;\n    this.quatern_d = 0;\n    this.qoffset_x = 0;\n    this.qoffset_y = 0;\n    this.qoffset_z = 0;\n    this.affine = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];\n    this.magic = 0;\n    this.extensionFlag = [0, 0, 0, 0];\n};\n\n\n\n/*** Static Pseudo-constants ***/\n\nnifti.NIFTI2.MAGIC_COOKIE = 540;\nnifti.NIFTI2.MAGIC_NUMBER_LOCATION = 4;\nnifti.NIFTI2.MAGIC_NUMBER = [0x6E, 0x2B, 0x32, 0, 0x0D, 0x0A, 0x1A, 0x0A];  // n+2\\0\n\n\n\n/*** Prototype Methods ***/\n\n/**\n * Reads the header data.\n * @param {ArrayBuffer} data\n */\nnifti.NIFTI2.prototype.readHeader = function (data) {\n    var rawData = new DataView(data),\n        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian),\n        ctr,\n        ctrOut,\n        ctrIn,\n        index,\n        array;\n\n    if (magicCookieVal !== nifti.NIFTI2.MAGIC_COOKIE) {  // try as little endian\n        this.littleEndian = true;\n        magicCookieVal = nifti.Utils.getIntAt(rawData, 0, this.littleEndian);\n    }\n\n    if (magicCookieVal !== nifti.NIFTI2.MAGIC_COOKIE) {\n        throw new Error(\"This does not appear to be a NIFTI file!\");\n    }\n\n    this.datatypeCode = nifti.Utils.getShortAt(rawData, 12, this.littleEndian);\n    this.numBitsPerVoxel = nifti.Utils.getShortAt(rawData, 14, this.littleEndian);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        index = 16 + (ctr * 8);\n        this.dims[ctr] = nifti.Utils.getLongAt(rawData, index, this.littleEndian);\n    }\n\n    this.intent_p1 = nifti.Utils.getDoubleAt(rawData, 80, this.littleEndian);\n    this.intent_p2 = nifti.Utils.getDoubleAt(rawData, 88, this.littleEndian);\n    this.intent_p3 = nifti.Utils.getDoubleAt(rawData, 96, this.littleEndian);\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        index = 104 + (ctr * 8);\n        this.pixDims[ctr] = nifti.Utils.getDoubleAt(rawData, index, this.littleEndian);\n    }\n\n    this.vox_offset = nifti.Utils.getLongAt(rawData, 168, this.littleEndian);\n\n    this.scl_slope = nifti.Utils.getDoubleAt(rawData, 176, this.littleEndian);\n    this.scl_inter = nifti.Utils.getDoubleAt(rawData, 184, this.littleEndian);\n\n    this.cal_max = nifti.Utils.getDoubleAt(rawData, 192, this.littleEndian);\n    this.cal_min = nifti.Utils.getDoubleAt(rawData, 200, this.littleEndian);\n\n    this.slice_duration = nifti.Utils.getDoubleAt(rawData, 208, this.littleEndian);\n\n    this.toffset = nifti.Utils.getDoubleAt(rawData, 216, this.littleEndian);\n\n    this.slice_start = nifti.Utils.getLongAt(rawData, 224, this.littleEndian);\n    this.slice_end = nifti.Utils.getLongAt(rawData, 232, this.littleEndian);\n\n    this.description = nifti.Utils.getStringAt(rawData, 240, 240 + 80);\n    this.aux_file = nifti.Utils.getStringAt(rawData, 320, 320 + 24);\n\n    this.qform_code = nifti.Utils.getIntAt(rawData, 344, this.littleEndian);\n    this.sform_code = nifti.Utils.getIntAt(rawData, 348, this.littleEndian);\n\n    this.quatern_b = nifti.Utils.getDoubleAt(rawData, 352, this.littleEndian);\n    this.quatern_c = nifti.Utils.getDoubleAt(rawData, 360, this.littleEndian);\n    this.quatern_d = nifti.Utils.getDoubleAt(rawData, 368, this.littleEndian);\n    this.qoffset_x = nifti.Utils.getDoubleAt(rawData, 376, this.littleEndian);\n    this.qoffset_y = nifti.Utils.getDoubleAt(rawData, 384, this.littleEndian);\n    this.qoffset_z = nifti.Utils.getDoubleAt(rawData, 392, this.littleEndian);\n\n    for (ctrOut = 0; ctrOut < 3; ctrOut += 1) {\n        for (ctrIn = 0; ctrIn < 4; ctrIn += 1) {\n            index = 400 + (((ctrOut * 4) + ctrIn) * 8);\n            this.affine[ctrOut][ctrIn] = nifti.Utils.getDoubleAt(rawData, index, this.littleEndian);\n        }\n    }\n\n    this.affine[3][0] = 0;\n    this.affine[3][1] = 0;\n    this.affine[3][2] = 0;\n    this.affine[3][3] = 1;\n\n    this.slice_code = nifti.Utils.getIntAt(rawData, 496, this.littleEndian);\n    this.xyzt_units = nifti.Utils.getIntAt(rawData, 500, this.littleEndian);\n    this.intent_code = nifti.Utils.getIntAt(rawData, 504, this.littleEndian);\n    this.intent_name = nifti.Utils.getStringAt(rawData, 508, 508 + 16);\n\n    this.dim_info = nifti.Utils.getByteAt(rawData, 524);\n\n    if (rawData.byteLength > nifti.NIFTI2.MAGIC_COOKIE) {\n        this.extensionFlag[0] = nifti.Utils.getByteAt(rawData, 540);\n        this.extensionFlag[1] = nifti.Utils.getByteAt(rawData, 540 + 1);\n        this.extensionFlag[2] = nifti.Utils.getByteAt(rawData, 540 + 2);\n        this.extensionFlag[3] = nifti.Utils.getByteAt(rawData, 540 + 3);\n\n        if (this.extensionFlag[0]) {\n            this.extensionSize = this.getExtensionSize(rawData);\n            this.extensionCode = this.getExtensionCode(rawData);\n        }\n    }\n};\n\n\n\n/**\n * Returns a formatted string of header fields.\n * @returns {string}\n */\nnifti.NIFTI2.prototype.toFormattedString = function () {\n    var fmt = nifti.Utils.formatNumber,\n        string = \"\";\n\n    string += (\"Datatype = \" +  + this.datatypeCode + \" (\" + this.getDatatypeCodeString(this.datatypeCode) + \")\\n\");\n    string += (\"Bits Per Voxel = \" + \" = \" + this.numBitsPerVoxel + \"\\n\");\n    string += (\"Image Dimensions\" + \" (1-8): \" +\n        this.dims[0] + \", \" +\n        this.dims[1] + \", \" +\n        this.dims[2] + \", \" +\n        this.dims[3] + \", \" +\n        this.dims[4] + \", \" +\n        this.dims[5] + \", \" +\n        this.dims[6] + \", \" +\n        this.dims[7] + \"\\n\");\n\n    string += (\"Intent Parameters (1-3): \" +\n        this.intent_p1 + \", \" +\n        this.intent_p2 + \", \" +\n        this.intent_p3) + \"\\n\";\n\n    string += (\"Voxel Dimensions (1-8): \" +\n        fmt(this.pixDims[0]) + \", \" +\n        fmt(this.pixDims[1]) + \", \" +\n        fmt(this.pixDims[2]) + \", \" +\n        fmt(this.pixDims[3]) + \", \" +\n        fmt(this.pixDims[4]) + \", \" +\n        fmt(this.pixDims[5]) + \", \" +\n        fmt(this.pixDims[6]) + \", \" +\n        fmt(this.pixDims[7]) + \"\\n\");\n\n    string += (\"Image Offset = \" + this.vox_offset + \"\\n\");\n    string += (\"Data Scale:  Slope = \" + fmt(this.scl_slope) + \"  Intercept = \" + fmt(this.scl_inter) + \"\\n\");\n    string += (\"Display Range:  Max = \" + fmt(this.cal_max) + \"  Min = \" + fmt(this.cal_min) + \"\\n\");\n    string += (\"Slice Duration = \" + this.slice_duration + \"\\n\");\n    string += (\"Time Axis Shift = \" + this.toffset + \"\\n\");\n    string += (\"Slice Start = \" + this.slice_start + \"\\n\");\n    string += (\"Slice End = \" + this.slice_end + \"\\n\");\n    string += (\"Description: \\\"\" + this.description + \"\\\"\\n\");\n    string += (\"Auxiliary File: \\\"\" + this.aux_file + \"\\\"\\n\");\n    string += (\"Q-Form Code = \" + this.qform_code + \" (\" + this.getTransformCodeString(this.qform_code) + \")\\n\");\n    string += (\"S-Form Code = \" + this.sform_code + \" (\" + this.getTransformCodeString(this.sform_code) + \")\\n\");\n    string += (\"Quaternion Parameters:  \" +\n    \"b = \" + fmt(this.quatern_b) + \"  \" +\n    \"c = \" + fmt(this.quatern_c) + \"  \" +\n    \"d = \" + fmt(this.quatern_d) + \"\\n\");\n\n    string += (\"Quaternion Offsets:  \" +\n    \"x = \" + this.qoffset_x + \"  \" +\n    \"y = \" + this.qoffset_y + \"  \" +\n    \"z = \" + this.qoffset_z + \"\\n\");\n\n    string += (\"S-Form Parameters X: \" +\n    fmt(this.affine[0][0]) + \", \" +\n    fmt(this.affine[0][1]) + \", \" +\n    fmt(this.affine[0][2]) + \", \" +\n    fmt(this.affine[0][3]) + \"\\n\");\n\n    string += (\"S-Form Parameters Y: \" +\n    fmt(this.affine[1][0]) + \", \" +\n    fmt(this.affine[1][1]) + \", \" +\n    fmt(this.affine[1][2]) + \", \" +\n    fmt(this.affine[1][3]) + \"\\n\");\n\n    string += (\"S-Form Parameters Z: \" +\n    fmt(this.affine[2][0]) + \", \" +\n    fmt(this.affine[2][1]) + \", \" +\n    fmt(this.affine[2][2]) + \", \" +\n    fmt(this.affine[2][3]) + \"\\n\");\n\n    string += (\"Slice Code = \" + this.slice_code + \"\\n\");\n    string += (\"Units Code = \" + this.xyzt_units + \" (\" + this.getUnitsCodeString(nifti.NIFTI1.SPATIAL_UNITS_MASK & this.xyzt_units) + \", \" + this.getUnitsCodeString(nifti.NIFTI1.TEMPORAL_UNITS_MASK & this.xyzt_units) + \")\\n\");\n    string += (\"Intent Code = \" + this.intent_code + \"\\n\");\n    string += (\"Intent Name: \\\"\" + this.intent_name + \"\\\"\\n\");\n\n    string += (\"Dim Info = \" + this.dim_info + \"\\n\");\n\n    return string;\n};\n\n\n\n/**\n * Returns the byte index of the extension.\n * @returns {number}\n */\nnifti.NIFTI2.prototype.getExtensionLocation = function() {\n    return nifti.NIFTI2.MAGIC_COOKIE + 4;\n};\n\n\n\n/**\n * Returns the extension size.\n * @param {DataView} data\n * @returns {number}\n */\nnifti.NIFTI2.prototype.getExtensionSize = nifti.NIFTI1.prototype.getExtensionSize;\n\n\n\n/**\n * Returns the extension code.\n * @param {DataView} data\n * @returns {number}\n */\nnifti.NIFTI2.prototype.getExtensionCode = nifti.NIFTI1.prototype.getExtensionCode;\n\n\n\n/**\n * Returns a human-readable string of datatype.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI2.prototype.getDatatypeCodeString = nifti.NIFTI1.prototype.getDatatypeCodeString;\n\n\n\n/**\n * Returns a human-readable string of transform type.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI2.prototype.getTransformCodeString = nifti.NIFTI1.prototype.getTransformCodeString;\n\n\n\n/**\n * Returns a human-readable string of spatial and temporal units.\n * @param {number} code\n * @returns {string}\n */\nnifti.NIFTI2.prototype.getUnitsCodeString = nifti.NIFTI1.prototype.getUnitsCodeString;\n\n\n\n/**\n * Returns the qform matrix.\n * @returns {Array.<Array.<number>>}\n */\nnifti.NIFTI2.prototype.getQformMat = nifti.NIFTI1.prototype.getQformMat;\n\n\n\n/**\n * Converts qform to an affine.  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n * @param {number} qb\n * @param {number} qc\n * @param {number} qd\n * @param {number} qx\n * @param {number} qy\n * @param {number} qz\n * @param {number} dx\n * @param {number} dy\n * @param {number} dz\n * @param {number} qfac\n * @returns {Array.<Array.<number>>}\n */\nnifti.NIFTI2.prototype.convertNiftiQFormToNiftiSForm = nifti.NIFTI1.prototype.convertNiftiQFormToNiftiSForm;\n\n\n\n/**\n * Converts sform to an orientation string (e.g., XYZ+--).  (See http://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1_io.c)\n * @param {Array.<Array.<number>>} R\n * @returns {string}\n */\nnifti.NIFTI2.prototype.convertNiftiSFormToNEMA = nifti.NIFTI1.prototype.convertNiftiSFormToNEMA;\n\n\n\nnifti.NIFTI2.prototype.nifti_mat33_mul = nifti.NIFTI1.prototype.nifti_mat33_mul;\n\n\n\nnifti.NIFTI2.prototype.nifti_mat33_determ = nifti.NIFTI1.prototype.nifti_mat33_determ;\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = nifti.NIFTI2;\n}\n","\n/*jslint browser: true, node: true */\n/*global require, module */\n\n\"use strict\";\n\n/*** Imports ***/\n\nvar nifti = nifti || {};\nnifti.Utils = nifti.Utils || {};\n\n\n\n/*** Static Pseudo-constants ***/\n\nnifti.Utils.crcTable = null;\nnifti.Utils.GUNZIP_MAGIC_COOKIE1 = 31;\nnifti.Utils.GUNZIP_MAGIC_COOKIE2 = 139;\n\n\n\n/*** Static methods ***/\n\nnifti.Utils.getStringAt = function (data, start, end) {\n    var str = \"\", ctr, ch;\n\n    for (ctr = start; ctr < end; ctr += 1) {\n        ch = data.getUint8(ctr);\n\n        if (ch !== 0) {\n            str += String.fromCharCode(ch);\n        }\n    }\n\n    return str;\n};\n\n\n\nnifti.Utils.getByteAt = function (data, start) {\n    return data.getInt8(start);\n};\n\n\n\nnifti.Utils.getShortAt = function (data, start, littleEndian) {\n    return data.getInt16(start, littleEndian);\n};\n\n\n\nnifti.Utils.getIntAt = function (data, start, littleEndian) {\n    return data.getInt32(start, littleEndian);\n};\n\n\n\nnifti.Utils.getFloatAt = function (data, start, littleEndian) {\n    return data.getFloat32(start, littleEndian);\n};\n\n\n\nnifti.Utils.getDoubleAt = function (data, start, littleEndian) {\n    return data.getFloat64(start, littleEndian);\n};\n\n\n\nnifti.Utils.getLongAt = function (data, start, littleEndian) {\n    var ctr, array = [], value = 0;\n\n    for (ctr = 0; ctr < 8; ctr += 1) {\n        array[ctr] = nifti.Utils.getByteAt(data, start + ctr, littleEndian);\n    }\n\n    for (ctr = array.length - 1; ctr >= 0; ctr--) {\n        value = (value * 256) + array[ctr];\n    }\n\n    return value;\n};\n\n\n\nnifti.Utils.toArrayBuffer = function (buffer) {\n    var ab, view, i;\n\n    ab = new ArrayBuffer(buffer.length);\n    view = new Uint8Array(ab);\n    for (i = 0; i < buffer.length; i += 1) {\n        view[i] = buffer[i];\n    }\n    return ab;\n};\n\n\n\nnifti.Utils.isString = function (obj) {\n    return (typeof obj === \"string\" || obj instanceof String);\n};\n\n\nnifti.Utils.formatNumber = function (num, shortFormat) {\n    var val = 0;\n\n    if (nifti.Utils.isString(num)) {\n        val = Number(num);\n    } else {\n        val = num;\n    }\n\n    if (shortFormat) {\n        val = val.toPrecision(5);\n    } else {\n        val = val.toPrecision(7);\n    }\n\n    return parseFloat(val);\n};\n\n\n\n// http://stackoverflow.com/questions/18638900/javascript-crc32\nnifti.Utils.makeCRCTable = function(){\n    var c;\n    var crcTable = [];\n    for(var n =0; n < 256; n++){\n        c = n;\n        for(var k =0; k < 8; k++){\n            c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n        }\n        crcTable[n] = c;\n    }\n    return crcTable;\n};\n\n\n\nnifti.Utils.crc32 = function(dataView) {\n    var crcTable = nifti.Utils.crcTable || (nifti.Utils.crcTable = nifti.Utils.makeCRCTable());\n    var crc = 0 ^ (-1);\n\n    for (var i = 0; i < dataView.byteLength; i++ ) {\n        crc = (crc >>> 8) ^ crcTable[(crc ^ dataView.getUint8(i)) & 0xFF];\n    }\n\n    return (crc ^ (-1)) >>> 0;\n};\n\n\n\n/*** Exports ***/\n\nvar moduleType = typeof module;\nif ((moduleType !== 'undefined') && module.exports) {\n    module.exports = nifti.Utils;\n}\n","\n/*! pako 2.0.3 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init;\nvar _tr_stored_block_1 = _tr_stored_block;\nvar _tr_flush_block_1  = _tr_flush_block;\nvar _tr_tally_1 = _tr_tally;\nvar _tr_align_1 = _tr_align;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init: _tr_init$1, _tr_stored_block: _tr_stored_block$1, _tr_flush_block: _tr_flush_block$1, _tr_tally: _tr_tally$1, _tr_align: _tr_align$1 } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED: Z_FIXED$1, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN: Z_UNKNOWN$1,\n  Z_DEFLATED\n} = constants;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES$1       = 30;\n/* number of distance codes */\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\nconst MAX_BITS$1  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH$1 = 3;\nconst MAX_MATCH$1 = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH$1 + MIN_MATCH$1 + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero$1 = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block$1(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH$1;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH$1 - (strend - scan);\n    scan = strend - MAX_MATCH$1;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH$1) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH$1 - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH$1) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH$1) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH$1 - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH$1) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally$1(s, s.strstart - s.match_start, s.match_length - MIN_MATCH$1);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH$1) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH$1 - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally$1(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH$1 - 1)) ? s.strstart : MIN_MATCH$1 - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH$1) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH$1 - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH$1 - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH$1 && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH$1 - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH$1 && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH$1;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally$1(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH$1);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH$1 - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH$1 - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally$1(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally$1(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH$1 - 1 ? s.strstart : MIN_MATCH$1 - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH$1) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH$1 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH$1 && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH$1;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH$1 - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH$1) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally$1(s, 1, s.match_length - MIN_MATCH$1);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally$1(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally$1(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero$1(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH$1 - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE$1 * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES$1 + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES$1 + 1) * 2);\n  zero$1(this.dyn_ltree);\n  zero$1(this.dyn_dtree);\n  zero$1(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES$1 + 1);  /* heap used to build the Huffman trees */\n  zero$1(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES$1 + 1); //uch depth[2*L_CODES+1];\n  zero$1(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN$1;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  _tr_init$1(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED$1) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH$1 - 1) / MIN_MATCH$1);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\nconst deflate = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align$1(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block$1(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero$1(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero$1(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH$1) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH$1 - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH$1 - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH$1 - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH$1 - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2 = deflate;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  let i, out;\n  const len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$1,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION$1,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY$1\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$1) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$1) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$1 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH$1) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$1) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$1;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$1) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1 = Deflate;\nvar deflate_2$1 = deflate$1;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar constants$1 = constants;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_2$1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 30;       /* got a data error -- remain here until reset */\nconst TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$2, Z_BLOCK: Z_BLOCK$1, Z_TREES,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2, Z_NEED_DICT, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS$1;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS$1);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS$1);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$2;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$2) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS$1,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS$1, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE$1) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$2;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD$1;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED$2) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD$1;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD$1;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE$1;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED$2) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD$1;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD$1;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD$1;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE$1;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE$1;\n        /* falls through */\n      case TYPE$1:\n        if (flush === Z_BLOCK$1 || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD$1;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD$1;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE$1;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD$1;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES$1, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD$1;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD$1;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD$1;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD$1) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD$1;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS$1, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD$1;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS$1, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD$1;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE$1) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE$1;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD$1;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD$1;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD$1;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD$1;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD$1;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$2;\n        break inf_leave;\n      case BAD$1:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD$1 &&\n                      (state.mode < CHECK || flush !== Z_FINISH$2))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE$1 ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$2) && ret === Z_OK$2) {\n    ret = Z_BUF_ERROR$1;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$2;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$2;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$2;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2 = inflate;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_FINISH: Z_FINISH$3,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_MEM_ERROR: Z_MEM_ERROR$1\n} = constants;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK$3) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK$3) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$3 : Z_NO_FLUSH$2;\n\n  // Convert data if needed\n  if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT$1 && dictionary) {\n      status = inflate_1.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK$3) {\n        status = inflate_1.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR$2) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT$1;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END$3 &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1.inflateReset(strm);\n      status = inflate_1.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR$2:\n      case Z_DATA_ERROR$2:\n      case Z_NEED_DICT$1:\n      case Z_MEM_ERROR$1:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END$3) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK$3 && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END$3) {\n      status = inflate_1.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$3) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1 = Inflate;\nvar inflate_2$1 = inflate$1;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip = inflate$1;\nvar constants$2 = constants;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1,\n\tinflate: inflate_2$1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip,\n\tconstants: constants$2\n};\n\nconst { Deflate: Deflate$1, deflate: deflate$2, deflateRaw: deflateRaw$1, gzip: gzip$1 } = deflate_1$1;\n\nconst { Inflate: Inflate$1, inflate: inflate$2, inflateRaw: inflateRaw$1, ungzip: ungzip$1 } = inflate_1$1;\n\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_1$2 = deflate$2;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar Inflate_1$1 = Inflate$1;\nvar inflate_1$2 = inflate$2;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip_1 = ungzip$1;\nvar constants_1 = constants;\n\nvar pako = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_1$2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tInflate: Inflate_1$1,\n\tinflate: inflate_1$2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport default pako;\nexport { Deflate_1$1 as Deflate, Inflate_1$1 as Inflate, constants_1 as constants, deflate_1$2 as deflate, deflateRaw_1$1 as deflateRaw, gzip_1$1 as gzip, inflate_1$2 as inflate, inflateRaw_1$1 as inflateRaw, ungzip_1 as ungzip };\n","// threejs.org/license\nconst REVISION = '126';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst CubeUVRefractionMapping = 307;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedShort565Type = 1019;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst RGBEFormat = RGBAFormat;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst GammaEncoding = 3007;\nconst RGBEEncoding = 3002;\nconst LogLuvEncoding = 3003;\nconst RGBM7Encoding = 3004;\nconst RGBM16Encoding = 3005;\nconst RGBDEncoding = 3006;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\nconst MathUtils = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\treturn uuid.toUpperCase();\n\n\t},\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\tdamp: function ( x, y, lambda, dt ) {\n\n\t\treturn MathUtils.lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n\t},\n\n\t// https://www.desmos.com/calculator/vcsjnyz7x4\n\n\tpingpong: function ( x, length = 1 ) {\n\n\t\treturn length - Math.abs( MathUtils.euclideanModulo( x, length * 2 ) - length );\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\t// Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\tseededRandom: function ( s ) {\n\n\t\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t\t// Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\n\t\treturn ( _seed - 1 ) / 2147483646;\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * MathUtils.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c2 = cos( b / 2 );\n\t\tconst s2 = sin( b / 2 );\n\n\t\tconst c13 = cos( ( a + c ) / 2 );\n\t\tconst s13 = sin( ( a + c ) / 2 );\n\n\t\tconst c1_3 = cos( ( a - c ) / 2 );\n\t\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\t\tconst c3_1 = cos( ( c - a ) / 2 );\n\t\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYX':\n\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t}\n\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nlet _canvas;\n\nconst ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\t\tthis.texture.image.depth = 1;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tsetTexture( texture ) {\n\n\t\ttexture.image = {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tdepth: this.depth\n\t\t};\n\n\t\tthis.texture = texture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tconst EPS = 0.000001;\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$1 );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$1 ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\n\nconst _box = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$1 = /*@__PURE__*/ new Box3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$1.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$2 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$2.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$2.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$2.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$2.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$2.dot( this.direction );\n\t\tconst d2 = _vector$2.dot( _vector$2 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$2 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order, update ) {\n\n\t\tconst clamp = MathUtils.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$1.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$2 = new Vector3();\nconst _q1 = new Quaternion();\nconst _m1$1 = new Matrix4();\nconst _target = new Vector3();\n\nconst _position = new Vector3();\nconst _scale = new Vector3();\nconst _quaternion$2 = new Quaternion();\n\nconst _xAxis = new Vector3( 1, 0, 0 );\nconst _yAxis = new Vector3( 0, 1, 0 );\nconst _zAxis = new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tconst position = new Vector3();\n\tconst rotation = new Euler();\n\tconst quaternion = new Quaternion();\n\tconst scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation._onChange( onRotationChange );\n\tquaternion._onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.animations = [];\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t},\n\n\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$2.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$2.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t},\n\n\ttranslateX: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t},\n\n\ttranslateY: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t},\n\n\ttranslateZ: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t},\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t},\n\n\tlookAt: function ( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t},\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclear: function () {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t},\n\n\tattach: function ( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldScale: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$1.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$1 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$1 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.vertexColors = false;\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\tcustomProgramCacheKey: function () {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nconst _vector$3 = new Vector3();\nconst _vector2$1 = new Vector2();\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$3.fromBufferAttribute( this, i );\n\t\t\t\t_vector$3.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$3.x = this.getX( i );\n\t\t\t_vector$3.y = this.getY( i );\n\t\t\t_vector$3.z = this.getZ( i );\n\n\t\t\t_vector$3.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\nfunction Float16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nFloat16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat16BufferAttribute.prototype.constructor = Float16BufferAttribute;\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nlet _id = 0;\n\nconst _m1$2 = new Matrix4();\nconst _obj = new Object3D();\nconst _offset = new Vector3();\nconst _box$2 = new Box3();\nconst _boxMorphTargets = new Box3();\nconst _vector$4 = new Vector3();\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\tthis.morphTargetsRelative = false;\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tsetAttribute: function ( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tdeleteAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\thasAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$4.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeTangents: function () {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( attributes.tangent === undefined ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = attributes.tangent.array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$4.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$4.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst attributeData = attribute.toJSON( data.data );\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tconst attributeData = attribute.toJSON( data.data );\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nconst _inverseMatrix = new Matrix4();\nconst _ray = new Ray();\nconst _sphere = new Sphere();\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _tempA = new Vector3();\nconst _tempB = new Vector3();\nconst _tempC = new Vector3();\n\nconst _morphA = new Vector3();\nconst _morphB = new Vector3();\nconst _morphC = new Vector3();\n\nconst _uvA = new Vector2();\nconst _uvB = new Vector2();\nconst _uvC = new Vector2();\n\nconst _intersectionPoint = new Vector3();\nconst _intersectionPointWorld = new Vector3();\n\nfunction Mesh( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry;\n\tthis.material = material;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n} );\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA.add( _morphA );\n\t\t_vB.add( _morphB );\n\t\t_vC.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh && material.skinning ) {\n\n\t\tobject.boneTransform( a, _vA );\n\t\tobject.boneTransform( b, _vB );\n\t\tobject.boneTransform( c, _vC );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tthis.glslVersion = null;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = Object.assign( {}, source.extensions );\n\n\tthis.glslVersion = source.glslVersion;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tconst data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.glslVersion = this.glslVersion;\n\tdata.uniforms = {};\n\n\tfor ( const name in this.uniforms ) {\n\n\t\tconst uniform = this.uniforms[ name ];\n\t\tconst value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tconst extensions = {};\n\n\tfor ( const key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\nfunction PerspectiveCamera( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov;\n\tthis.zoom = 1;\n\n\tthis.near = near;\n\tthis.far = far;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tconst vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\t// Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t//\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\tthis._needsFlipEnvMap = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tsuper( size, size, options );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.texture._needsFlipEnvMap = false;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = RGBAFormat; // see #18859\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nclass DataTexture extends Texture {\n\n\tconstructor( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor.xyz *= color.xyz;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmissionmap_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif\";\n\nvar transmissionmap_pars_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmissionmap_fragment: transmissionmap_fragment,\n\ttransmissionmap_pars_fragment: transmissionmap_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tif ( background.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t// TODO Deprecate\n\n\t\t\t\tbackground = background.texture;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( name === 'instanceColor' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceColor );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DataTexture2DArray extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nclass DataTexture3D extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// uint\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',\n\t\t'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals',\n\t\t'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha',\n\t\t'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',\n\t\t'sheen', 'transmissionMap'\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmissionMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {};\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tlet useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst currentScissor = new Vector4();\n\tconst currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__maxMipLevel = Math.log2( Math.max( width, height ) );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\tconst cubeImage = [];\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t} else {\n\n\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst image = cubeImage[ 0 ],\n\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\tlet mipmaps;\n\n\t\tif ( isCompressed ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t// We assume images for cube map have the same size.\n\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst glFormat = utils.convert( texture.format );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t} else {\n\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && texture.format === RGBFormat && ( texture.type === FloatType || texture.type === HalfFloatType ) ) {\n\n\t\t\ttexture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( isRenderTarget3D ) {\n\n\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\tglTextureType = isTexture3D ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\n\t\tsetTextureCube( texture, slot );\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBIntegerFormat ) return 36248;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nfunction ArrayCamera( array = [] ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array;\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nfunction WebXRController() {\n\n\tthis._targetRay = null;\n\tthis._grip = null;\n\tthis._hand = null;\n\n}\n\nObject.assign( WebXRController.prototype, {\n\n\tconstructor: WebXRController,\n\n\tgetHandSpace: function () {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t},\n\n\tgetTargetRaySpace: function () {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t},\n\n\tgetGripSpace: function () {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function ( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdate: function ( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction WebXRManager( renderer, gl ) {\n\n\tconst scope = this;\n\n\tlet session = null;\n\n\tlet framebufferScaleFactor = 1.0;\n\n\tlet referenceSpace = null;\n\tlet referenceSpaceType = 'local-floor';\n\n\tlet pose = null;\n\n\tconst controllers = [];\n\tconst inputSourcesMap = new Map();\n\n\t//\n\n\tconst cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tconst cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tconst cameras = [ cameraL, cameraR ];\n\n\tconst cameraVR = new ArrayCamera();\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\tlet _currentDepthNear = null;\n\tlet _currentDepthFar = null;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.isPresenting = false;\n\n\tthis.getController = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getTargetRaySpace();\n\n\t};\n\n\tthis.getControllerGrip = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getGripSpace();\n\n\t};\n\n\tthis.getHand = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getHandSpace();\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\tif ( controller ) {\n\n\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\tcontroller.disconnect( inputSource );\n\n\t\t} );\n\n\t\tinputSourcesMap.clear();\n\n\t\t_currentDepthNear = null;\n\t\t_currentDepthFar = null;\n\n\t\t//\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t\tscope.isPresenting = false;\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.getReferenceSpace = function () {\n\n\t\treturn referenceSpace;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = async function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t}\n\n\t\t\tconst layerInit = {\n\t\t\t\tantialias: attributes.antialias,\n\t\t\t\talpha: attributes.alpha,\n\t\t\t\tdepth: attributes.depth,\n\t\t\t\tstencil: attributes.stencil,\n\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\tanimation.setContext( session );\n\t\t\tanimation.start();\n\n\t\t\tscope.isPresenting = true;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t}\n\n\t};\n\n\tfunction onInputSourcesChange( event ) {\n\n\t\tconst inputSources = session.inputSources;\n\n\t\t// Assign inputSources to available controllers\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t}\n\n\t\t// Notify disconnected\n\n\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\tconst inputSource = event.removed[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Notify connected\n\n\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\tconst inputSource = event.added[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tconst cameraLPos = new Vector3();\n\tconst cameraRPos = new Vector3();\n\n\t/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tconst left = near * leftFov;\n\t\tconst right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tconst near2 = near + zOffset;\n\t\tconst far2 = far + zOffset;\n\t\tconst left2 = left - xOffset;\n\t\tconst right2 = right + ( ipd - xOffset );\n\t\tconst top2 = topFov * far / far2 * near2;\n\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\tsession.updateRenderState( {\n\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\tdepthFar: cameraVR.far\n\t\t\t} );\n\n\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t}\n\n\t\tconst parent = camera.parent;\n\t\tconst cameras = cameraVR.cameras;\n\n\t\tupdateCamera( cameraVR, parent );\n\n\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t}\n\n\t\t// update camera and its children\n\n\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\tconst children = camera.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\t// update projection matrix for proper view frustum culling\n\n\t\tif ( cameras.length === 2 ) {\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t} else {\n\n\t\t\t// assume single camera setup (AR)\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tconst views = pose.views;\n\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tconst view = views[ i ];\n\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst inputSources = session.inputSources;\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tconst controller = controllers[ i ];\n\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _framebuffer = null;\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentFramebuffer = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// shadow map\n\n\tconst shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getClearColor() now requires a Color as an argument' );\n\n\t\t\ttarget = new Color();\n\n\t\t}\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tconst programInfo = properties.get( material ).program;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights();\n\n\t\tconst compiled = new WeakMap();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tif ( compiled.has( material2 ) === false ) {\n\n\t\t\t\t\t\t\tinitMaterial( material2, scene, object );\n\t\t\t\t\t\t\tcompiled.set( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( compiled.has( material ) === false ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\t\tcompiled.set( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( xr.isPresenting ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tlet renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// reset caching for this frame\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights();\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLightsView( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction initMaterial( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet program = materialProperties.program;\n\t\tlet programChange = true;\n\n\t\t// always update environment and fog - changing these trigger an initMaterial call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = materialProperties.program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tinitMaterial( material, scene, object );\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tconst bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tlet size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( 36160, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = _framebuffer;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isDataTexture3D || texture.isDataTexture2DArray ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tlet restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\t\tconst glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst { width, height, data } = srcTexture.image;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isDataTexture3D ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataTexture2DArray ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\t_gl.pixelStorei( 3314, width );\n\t\t_gl.pixelStorei( 32878, height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\t_gl.texSubImage3D(\n\t\t\tglTarget,\n\t\t\tlevel,\n\t\t\tposition.x,\n\t\t\tposition.y,\n\t\t\tposition.z,\n\t\t\tsourceBox.max.x - sourceBox.min.x + 1,\n\t\t\tsourceBox.max.y - sourceBox.min.y + 1,\n\t\t\tsourceBox.max.z - sourceBox.min.z + 1,\n\t\t\tglFormat,\n\t\t\tglType,\n\t\t\tdata\n\t\t);\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nclass Fog {\n\n\tconstructor( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nFog.prototype.isFog = true;\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n\tthis.uuid = MathUtils.generateUUID();\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function ( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new InterleavedBuffer( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = MathUtils.generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n} );\n\nconst _vector$6 = new Vector3();\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.name = '';\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t},\n\n\tneedsUpdate: {\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.data.needsUpdate = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function ( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA$1.set( 0, 0 );\n\t\t_uvB$1.set( 1, 0 );\n\t\t_uvC$1.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSprite.prototype.isSprite = true;\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$4.distanceTo( _v2$2 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = new Vector3();\n\nconst _skinIndex = new Vector4();\nconst _skinWeight = new Vector4();\n\nconst _vector$7 = new Vector3();\nconst _matrix$1 = new Matrix4();\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tMesh.prototype.copy.call( this, source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tboneTransform: function ( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix$1.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$7.copy( _basePosition ).applyMatrix4( _matrix$1 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n} );\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = new Matrix4();\nconst _instanceWorldMatrix = new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = new Mesh();\n\nfunction InstancedMesh( geometry, material, count ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\tthis.instanceColor = null;\n\n\tthis.count = count;\n\n\tthis.frustumCulled = false;\n\n}\n\nInstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: InstancedMesh,\n\n\tisInstancedMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tMesh.prototype.copy.call( this, source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t},\n\n\tgetColorAt: function ( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t},\n\n\tgetMatrixAt: function ( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t},\n\n\tsetColorAt: function ( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new BufferAttribute( new Float32Array( this.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t},\n\n\tsetMatrixAt: function ( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nconst _start = new Vector3();\nconst _end = new Vector3();\nconst _inverseMatrix$1 = new Matrix4();\nconst _ray$1 = new Ray();\nconst _sphere$2 = new Sphere();\n\nfunction Line( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry;\n\tthis.material = material;\n\n\tthis.updateMorphTargets();\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t_sphere$2.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst indices = index.array;\n\n\t\t\t\tfor ( let i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = indices[ i ];\n\t\t\t\t\tconst b = indices[ i + 1 ];\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nconst _start$1 = new Vector3();\nconst _end$1 = new Vector3();\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nLineLoop.prototype.isLineLoop = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nconst _inverseMatrix$2 = new Matrix4();\nconst _ray$2 = new Ray();\nconst _sphere$3 = new Sphere();\nconst _position$1 = new Vector3();\n\nfunction Points( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry;\n\tthis.material = material;\n\n\tthis.updateMorphTargets();\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t_sphere$3.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst indices = index.array;\n\n\t\t\t\tfor ( let i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = indices[ i ];\n\n\t\t\t\t\t_position$1.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_position$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nVideoTexture.prototype.isVideoTexture = true;\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices, indices, radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nconst _v0$2 = new Vector3();\nconst _v1$5 = new Vector3();\nconst _normal$1 = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry, thresholdAngle ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\tconsole.error( 'THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst precisionPoints = 4;\n\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\tconst thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );\n\n\t\tconst indexAttr = geometry.getIndex();\n\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\tconst indexArr = [ 0, 0, 0 ];\n\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\tconst hashes = new Array( 3 );\n\n\t\tconst edgeData = {};\n\t\tconst vertices = [];\n\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\tif ( indexAttr ) {\n\n\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t} else {\n\n\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t}\n\n\t\t\tconst { a, b, c } = _triangle;\n\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t_triangle.getNormal( _normal$1 );\n\n\t\t\t// create hashes for the edge from the vertices\n\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t// skip degenerate triangles\n\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// iterate over every edge\n\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\tif ( _normal$1.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\tnormal: _normal$1.clone(),\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\tfor ( const key in edgeData ) {\n\n\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t_v0$2.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t_v1$5.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\tvertices.push( _v0$2.x, _v0$2.y, _v0$2.z );\n\t\t\t\tvertices.push( _v1$5.x, _v1$5.y, _v1$5.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nconst ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points, segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = MathUtils.clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tconst normals = this.attributes.normal.array;\n\t\t\tconst n1 = new Vector3();\n\t\t\tconst n2 = new Vector3();\n\t\t\tconst n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tconst base = segments * points.length * 3;\n\n\t\t\tfor ( let i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\n/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tconst indices = [];\n\tconst vertices = [];\n\tconst normals = [];\n\tconst uvs = [];\n\n\tconst EPS = 0.00001;\n\n\tconst normal = new Vector3();\n\n\tconst p0 = new Vector3(), p1 = new Vector3();\n\tconst pu = new Vector3(), pv = new Vector3();\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tconst sliceCount = slices + 1;\n\n\tfor ( let i = 0; i <= stacks; i ++ ) {\n\n\t\tconst v = i / stacks;\n\n\t\tfor ( let j = 0; j <= slices; j ++ ) {\n\n\t\t\tconst u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( let i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( let j = 0; j < slices; j ++ ) {\n\n\t\t\tconst a = i * sliceCount + j;\n\t\t\tconst b = i * sliceCount + j + 1;\n\t\t\tconst c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tconst d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes, curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t}\n\n}\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\n/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tsuper( shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\tconsole.error( 'THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\n\t\t// helper variables\n\n\t\tconst edge = [ 0, 0 ], edges = {};\n\n\t\tconst vertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst indices = geometry.index;\n\t\t\tlet groups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor ( let i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tconst edge1 = indices.getX( i + j );\n\t\t\t\t\t\tconst edge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tconst key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( const key in edges ) {\n\n\t\t\t\tconst e = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\n/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t}\n\n}\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 1.0;\n\tthis.metalness = 0.0;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.flatShading = false;\n\n\tthis.vertexTangents = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.flatShading = source.flatShading;\n\n\tthis.vertexTangents = source.vertexTangents;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.clearcoat = 0.0;\n\tthis.clearcoatMap = null;\n\tthis.clearcoatRoughness = 0.0;\n\tthis.clearcoatRoughnessMap = null;\n\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\tthis.clearcoatNormalMap = null;\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tObject.defineProperty( this, 'ior', {\n\t\tget: function () {\n\n\t\t\treturn ( 1 + 0.4 * this.reflectivity ) / ( 1 - 0.4 * this.reflectivity );\n\n\t\t},\n\t\tset: function ( ior ) {\n\n\t\t\tthis.reflectivity = MathUtils.clamp( 2.5 * ( ior - 1 ) / ( ior + 1 ), 0, 1 );\n\n\t\t}\n\t} );\n\n\tthis.sheen = null; // null will disable sheen bsdf\n\n\tthis.transmission = 0.0;\n\tthis.transmissionMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.clearcoat = source.clearcoat;\n\tthis.clearcoatMap = source.clearcoatMap;\n\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\tthis.reflectivity = source.reflectivity;\n\n\tif ( source.sheen ) {\n\n\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t} else {\n\n\t\tthis.sheen = null;\n\n\t}\n\n\tthis.transmission = source.transmission;\n\tthis.transmissionMap = source.transmissionMap;\n\n\treturn this;\n\n};\n\n/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n// DECLARE ALIAS AFTER assign prototype\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tconst scope = this;\n\n\tlet isLoading = false;\n\tlet itemsLoaded = 0;\n\tlet itemsTotal = 0;\n\tlet urlModifier = undefined;\n\tconst handlers = [];\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\n\t\treturn this;\n\n\t};\n\n\tthis.addHandler = function ( regex, loader ) {\n\n\t\thandlers.push( regex, loader );\n\n\t\treturn this;\n\n\t};\n\n\tthis.removeHandler = function ( regex ) {\n\n\t\tconst index = handlers.indexOf( regex );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\thandlers.splice( index, 2 );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.getHandler = function ( file ) {\n\n\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tconst regex = handlers[ i ];\n\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nfunction Loader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.crossOrigin = 'anonymous';\n\tthis.withCredentials = false;\n\tthis.path = '';\n\tthis.resourcePath = '';\n\tthis.requestHeader = {};\n\n}\n\nObject.assign( Loader.prototype, {\n\n\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\tloadAsync: function ( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t},\n\n\tparse: function ( /* data */ ) {},\n\n\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n} );\n\nconst loading = {};\n\nfunction FileLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FileLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tconst dataUriRegexResult = url.match( dataUriRegex );\n\t\tlet request;\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tconst mimeType = dataUriRegexResult[ 1 ];\n\t\t\tconst isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\tlet data = dataUriRegexResult[ 3 ];\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tlet response;\n\t\t\t\tconst responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tconst view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\trequest = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tconst response = this.response;\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( const header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: CompressedTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n} );\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: DataTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\nfunction TextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: TextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tconst isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t},\n\n\tgetTangentAt: function ( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( MathUtils.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( MathUtils.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineCurve.prototype.isLineCurve = true;\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve3';\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nSplineCurve.prototype.isSplineCurve = true;\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nHemisphereLight.prototype.isHemisphereLight = true;\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.copy( camera.position );\n\t\t_lookTarget$1.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget$1 );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld$1.x, - _lightPositionWorld$1.y, - _lightPositionWorld$1.z );\n\n\t\t_projScreenMatrix$1.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t}\n\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointLight.prototype.isPointLight = true;\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\nRectAreaLight.prototype.isRectAreaLight = true;\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLightProbe.prototype.isLightProbe = true;\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.vertexTangents !== undefined ) material.vertexTangents = json.vertexTangents;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nconst LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.instanceCount = Infinity;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ()\t{\n\n\t\tconst data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ] instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\t\tlet geometryShapes;\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\n\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\timages[ image.uuid ] = deserializedImage;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tlet texture;\n\t\t\t\tconst image = images[ data.image ];\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( image );\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture( image.data, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tLoader.call( this, manager );\n\n\tthis.options = { premultiplyAlpha: 'none' };\n\n}\n\nImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageBitmapLoader,\n\n\tisImageBitmapLoader: true,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n} );\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tconst toChange = [];\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nFont.prototype.isFont = true;\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\nconst _eyeRight = new Matrix4();\nconst _eyeLeft = new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: function ( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t},\n\n\tparseTrackName: function ( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t},\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n// DECLARE ALIAS AFTER assign prototype\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function ( data ) {\n\n\t\tconst ib = InterleavedBuffer.prototype.clone.call( this, data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t},\n\n\ttoJSON: function ( data ) {\n\n\t\tconst json = InterleavedBuffer.prototype.toJSON.call( this, data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n} );\n\nfunction GLBufferAttribute( buffer, type, itemSize, elementSize, count ) {\n\n\tthis.buffer = buffer;\n\tthis.type = type;\n\tthis.itemSize = itemSize;\n\tthis.elementSize = elementSize;\n\tthis.count = count;\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( GLBufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( GLBufferAttribute.prototype, {\n\n\tisGLBufferAttribute: true,\n\n\tsetBuffer: function ( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t},\n\n\tsetType: function ( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t},\n\n\tsetItemSize: function ( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t},\n\n\tsetCount: function ( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t},\n\n} );\n\nfunction Raycaster( origin, direction, near = 0, far = Infinity ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near;\n\tthis.far = far;\n\tthis.camera = null;\n\tthis.layers = new Layers();\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: { threshold: 1 },\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( camera && camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera && camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive = false, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive = false, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$8 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$8.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$8.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox2.prototype.isBox2 = true;\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = MathUtils.clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n\tthis.hasPositions = false;\n\tthis.hasNormals = false;\n\tthis.hasColors = false;\n\tthis.hasUvs = false;\n\n\tthis.positionArray = null;\n\tthis.normalArray = null;\n\tthis.colorArray = null;\n\tthis.uvArray = null;\n\n\tthis.count = 0;\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$9.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$9 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$a.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$a.x, _vector$a.y, _vector$a.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$a.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$a.x, _vector$a.y, _vector$a.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$b.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1$6.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3$1.subVectors( _v2$3, _v1$6 );\n\n\t\tthis.lightPlane.lookAt( _v2$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2$3 );\n\t\tthis.targetLine.scale.z = _v3$1.length();\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector$c.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector$c.x, _vector$c.y, _vector$c.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box$3.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box$3.isEmpty() ) return;\n\n\t\tconst min = _box$3.min;\n\t\tconst max = _box$3.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n}\n\nconst _floatView = new Float32Array( 1 );\nconst _int32View = new Int32Array( _floatView.buffer );\n\nconst DataUtils = {\n\n\t// Converts float32 to float16 (stored as uint16 value).\n\n\ttoHalfFloat: function ( val ) {\n\n\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst x = _int32View[ 0 ];\n\n\t\tlet bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\tlet m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\tconst e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */\n\t\tif ( e < 103 ) return bits;\n\n\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\tif ( e > 142 ) {\n\n\t\t\tbits |= 0x7c00;\n\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\t/* If exponent underflows but not too much, return a denormal */\n\t\tif ( e < 113 ) {\n\n\t\t\tm |= 0x0800;\n\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */\n\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */\n\t\tbits += m & 1;\n\t\treturn bits;\n\n\t}\n\n};\n\nconst LOD_MIN = 4;\nconst LOD_MAX = 8;\nconst SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\nconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst ENCODINGS = {\n\t[ LinearEncoding ]: 0,\n\t[ sRGBEncoding ]: 1,\n\t[ RGBEEncoding ]: 2,\n\t[ RGBM7Encoding ]: 3,\n\t[ RGBM16Encoding ]: 4,\n\t[ RGBDEncoding ]: 5,\n\t[ GammaEncoding ]: 6\n};\n\nconst backgroundMaterial = new MeshBasicMaterial( {\n\tside: BackSide,\n\tdepthWrite: false,\n\tdepthTest: false,\n} );\nconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n */\n\nfunction convertLinearToRGBE( color ) {\n\n\tconst maxComponent = Math.max( color.r, color.g, color.b );\n\tconst fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\tcolor.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\n\tconst alpha = ( fExp + 128.0 ) / 255.0;\n\treturn alpha;\n\n}\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular ) {\n\n\t\treturn this._fromTexture( equirectangular );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap ) {\n\n\t\treturn this._fromTexture( cubemap );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapShader === null ) {\n\n\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectShader === null ) {\n\n\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._blurMaterial.dispose();\n\n\t\tif ( this._cubemapShader !== null ) this._cubemapShader.dispose();\n\t\tif ( this._equirectShader !== null ) this._equirectShader.dispose();\n\n\t\tfor ( let i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t// private interface\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._pingPongRenderTarget.dispose();\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets( texture );\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets( texture ) { // warning: null texture is valid\n\n\t\tconst params = {\n\t\t\tmagFilter: NearestFilter,\n\t\t\tminFilter: NearestFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: UnsignedByteType,\n\t\t\tformat: RGBEFormat,\n\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( params );\n\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst outputEncoding = renderer.outputEncoding;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.outputEncoding = LinearEncoding;\n\t\trenderer.autoClear = false;\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background ).convertSRGBToLinear();\n\t\t\t\tscene.background = null;\n\n\t\t\t\tconst alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor ).convertSRGBToLinear();\n\n\t\t\tconst alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\t\t\tif ( col == 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.outputEncoding = outputEncoding;\n\t\trenderer.autoClear = originalAutoClear;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\tconst mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tif ( ! texture.isCubeTexture ) {\n\n\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t}\n\n\t\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = _sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i == 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\t\tconst outputSize = _sizeLods[ lodOut ];\n\t\tconst x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\tconst y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\nfunction _isLDR( texture ) {\n\n\tif ( texture === undefined || texture.type !== UnsignedByteType ) return false;\n\n\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n}\n\nfunction _createPlanes() {\n\n\tconst _lodPlanes = [];\n\tconst _sizeLods = [];\n\tconst _sigmas = [];\n\n\tlet lod = LOD_MAX;\n\n\tfor ( let i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\t_sizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t} else if ( i == 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\t_sigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 1 );\n\t\tconst min = - texelSize / 2;\n\t\tconst max = 1 + texelSize / 2;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t_lodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { _lodPlanes, _sizeLods, _sigmas };\n\n}\n\nfunction _createRenderTarget( params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( maxSamples ) {\n\n\tconst weights = new Float32Array( maxSamples );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: { 'n': maxSamples },\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectShader() {\n\n\tconst texelSize = new Vector2( 1, 1 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'texelSize': { value: texelSize },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCubemapShader() {\n\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction _getEncodings() {\n\n\treturn /* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`;\n\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials = [] ) {\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nPath.prototype.fromPoints = function ( points ) {\n\n\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\treturn this.setFromPoints( points );\n\n};\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nLoader.prototype.extractUrlBase = function ( url ) {\n\n\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\treturn LoaderUtils.extractUrlBase( url );\n\n};\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nBox2.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox2.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox2.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox2.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nBox3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox3.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox3.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox3.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\nBox3.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nSphere.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\n//\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\n//\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n//\n\nMathUtils.random16 = function () {\n\n\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\treturn Math.random();\n\n};\n\nMathUtils.nearestPowerOfTwo = function ( value ) {\n\n\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\treturn MathUtils.floorPowerOfTwo( value );\n\n};\n\nMathUtils.nextPowerOfTwo = function ( value ) {\n\n\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\treturn MathUtils.ceilPowerOfTwo( value );\n\n};\n\n//\n\nMatrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix3.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\treturn vector.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\treturn attribute.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nMatrix4.prototype.extractPosition = function ( m ) {\n\n\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\treturn this.copyPosition( m );\n\n};\n\nMatrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix4.prototype.getPosition = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n};\n\nMatrix4.prototype.setRotationFromQuaternion = function ( q ) {\n\n\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\treturn this.makeRotationFromQuaternion( q );\n\n};\n\nMatrix4.prototype.multiplyToArray = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n};\n\nMatrix4.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector4 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateAxis = function ( v ) {\n\n\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\tv.transformDirection( this );\n\n};\n\nMatrix4.prototype.crossVector = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.translate = function () {\n\n\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateX = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateY = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateZ = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateByAxis = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n};\n\nMatrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\treturn attribute.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n\n\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n};\n\nMatrix4.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\n//\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nQuaternion.prototype.inverse = function ( ) {\n\n\tconsole.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\treturn this.invert();\n\n};\n\n//\n\nRay.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nRay.prototype.isIntersectionPlane = function ( plane ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\treturn this.intersectsPlane( plane );\n\n};\n\nRay.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\n//\n\nTriangle.prototype.area = function () {\n\n\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\treturn this.getArea();\n\n};\n\nTriangle.prototype.barycoordFromPoint = function ( point, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn this.getBarycoord( point, target );\n\n};\n\nTriangle.prototype.midpoint = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\treturn this.getMidpoint( target );\n\n};\n\nTriangle.prototypenormal = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn this.getNormal( target );\n\n};\n\nTriangle.prototype.plane = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\treturn this.getPlane( target );\n\n};\n\nTriangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n};\n\nTriangle.normal = function ( a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn Triangle.getNormal( a, b, c, target );\n\n};\n\n//\n\nShape.prototype.extractAllPoints = function ( divisions ) {\n\n\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\treturn this.extractPoints( divisions );\n\n};\n\nShape.prototype.extrude = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\treturn new ExtrudeGeometry( this, options );\n\n};\n\nShape.prototype.makeGeometry = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\treturn new ShapeGeometry( this, options );\n\n};\n\n//\n\nVector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector2.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector2.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector3.prototype.setEulerFromRotationMatrix = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n};\n\nVector3.prototype.setEulerFromQuaternion = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n};\n\nVector3.prototype.getPositionFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\treturn this.setFromMatrixPosition( m );\n\n};\n\nVector3.prototype.getScaleFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\treturn this.setFromMatrixScale( m );\n\n};\n\nVector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n\n\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\treturn this.setFromMatrixColumn( matrix, index );\n\n};\n\nVector3.prototype.applyProjection = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\treturn this.applyMatrix4( m );\n\n};\n\nVector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector3.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector3.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector4.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nObject3D.prototype.getChildByName = function ( name ) {\n\n\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\treturn this.getObjectByName( name );\n\n};\n\nObject3D.prototype.renderDepth = function () {\n\n\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n};\n\nObject3D.prototype.translate = function ( distance, axis ) {\n\n\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\treturn this.translateOnAxis( axis, distance );\n\n};\n\nObject3D.prototype.getWorldRotation = function () {\n\n\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n};\n\nObject3D.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nMesh.prototype.setDrawMode = function () {\n\n\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n};\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t'Use .setFocalLength and .filmGauge for a photographic setup.' );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nBufferAttribute.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nBufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n},\n\nBufferAttribute.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nBufferGeometry.prototype.addIndex = function ( index ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\tthis.setIndex( index );\n\n};\n\nBufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t}\n\n\tif ( name === 'index' ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\tthis.setIndex( attribute );\n\n\t\treturn this;\n\n\t}\n\n\treturn this.setAttribute( name, attribute );\n\n};\n\nBufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n\n\tif ( indexOffset !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t}\n\n\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\tthis.addGroup( start, count );\n\n};\n\nBufferGeometry.prototype.clearDrawCalls = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\tthis.clearGroups();\n\n};\n\nBufferGeometry.prototype.computeOffsets = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n};\n\nBufferGeometry.prototype.removeAttribute = function ( name ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\treturn this.deleteAttribute( name );\n\n};\n\nBufferGeometry.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( InstancedBufferGeometry.prototype, {\n\n\tmaxInstancedCount: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\treturn this.instanceCount;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );\n\t\t\tthis.instanceCount = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( Raycaster.prototype, {\n\n\tlinePrecision: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\treturn this.params.Line.threshold;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );\n\t\t\tthis.params.Line.threshold = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( InterleavedBuffer.prototype, {\n\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( value );\n\n\t\t}\n\t}\n\n} );\n\nInterleavedBuffer.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nInterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nExtrudeGeometry.prototype.getArrays = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShapeList = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShape = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n\n};\n\n//\n\nScene.prototype.dispose = function () {\n\n\tconsole.error( 'THREE.Scene: .dispose() has been removed.' );\n\n};\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhysicalMaterial.prototype, {\n\n\ttransparency: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.' );\n\t\t\treturn this.transmission;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.' );\n\t\t\tthis.transmission = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nWebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\tthis.setRenderTarget( renderTarget );\n\tthis.clear( color, depth, stencil );\n\n};\n\nWebGLRenderer.prototype.animate = function ( callback ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\tthis.setAnimationLoop( callback );\n\n};\n\nWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\treturn this.getRenderTarget();\n\n};\n\nWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\treturn this.capabilities.getMaxAnisotropy();\n\n};\n\nWebGLRenderer.prototype.getPrecision = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\treturn this.capabilities.precision;\n\n};\n\nWebGLRenderer.prototype.resetGLState = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\treturn this.state.reset();\n\n};\n\nWebGLRenderer.prototype.supportsFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_float' );\n\n};\n\nWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_half_float' );\n\n};\n\nWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n};\n\nWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n};\n\nWebGLRenderer.prototype.supportsVertexTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\treturn this.capabilities.vertexTextures;\n\n};\n\nWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n};\n\nWebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\tthis.setScissorTest( boolean );\n\n};\n\nWebGLRenderer.prototype.initMaterial = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPrePlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPostPlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.updateShadowMap = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setFaceCulling = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.allocTextureUnit = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture2D = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTextureCube = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\treturn this.getActiveMipmapLevel();\n\n};\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t},\n\ttoneMappingWhitePoint: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\treturn 1.0;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t}\n\t},\n\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\treturn new WebGLCubeRenderTarget( width, options );\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Audio.prototype, {\n\n\tload: {\n\t\tvalue: function ( file ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\tconst scope = this;\n\t\t\tconst audioLoader = new AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\t\tscope.setBuffer( buffer );\n\n\t\t\t} );\n\t\t\treturn this;\n\n\t\t}\n\t},\n\tstartTime: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Audio: .startTime is now .play( delay ).' );\n\n\t\t}\n\t}\n\n} );\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\nCubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\treturn this.renderTarget.clear( renderer, color, depth, stencil );\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tconst loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tconst loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nconst SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t/* eslint-disable no-undef */\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\t/* eslint-enable no-undef */\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GammaEncoding, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry as ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBIntegerFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry as TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGLCubeRenderTarget, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, sRGBEncoding };\n","import { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nexport { Matrix4 };\n","const _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\nconst MathUtils = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\treturn uuid.toUpperCase();\n\n\t},\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\tdamp: function ( x, y, lambda, dt ) {\n\n\t\treturn MathUtils.lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n\t},\n\n\t// https://www.desmos.com/calculator/vcsjnyz7x4\n\n\tpingpong: function ( x, length = 1 ) {\n\n\t\treturn length - Math.abs( MathUtils.euclideanModulo( x, length * 2 ) - length );\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\t// Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\tseededRandom: function ( s ) {\n\n\t\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t\t// Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\n\t\treturn ( _seed - 1 ) / 2147483646;\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * MathUtils.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c2 = cos( b / 2 );\n\t\tconst s2 = sin( b / 2 );\n\n\t\tconst c13 = cos( ( a + c ) / 2 );\n\t\tconst s13 = sin( ( a + c ) / 2 );\n\n\t\tconst c1_3 = cos( ( a - c ) / 2 );\n\t\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\t\tconst c3_1 = cos( ( c - a ) / 2 );\n\t\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYX':\n\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t}\n\n};\n\n\nexport { MathUtils };\n","import { MathUtils } from './MathUtils.js';\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tconst EPS = 0.000001;\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nexport { Quaternion };\n","import { MathUtils } from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nexport { Vector3 };\n","export * from './cameras/cameras';\nexport * from './controls/controls';\nexport * from './core/core';\nexport * from './geometries/geometries';\nexport * from './helpers/helpers';\nexport * from './loaders/loaders';\nexport * from './models/models';\nexport * from './parsers/parsers';\nexport * from './presets/presets';\nexport * from './shaders/shaders';\n// export * from './widgets/widgets';\n\nimport { Raycaster } from 'three/src/core/Raycaster';\n","export enum COLORS {\n  blue = '#00B0FF',\n  yellow = '#FFEB3B',\n  red = '#F50057',\n  green = '#76FF03',\n  white = '#FFF',\n  lightRed = '#F77',\n}\n\n/**\n * Colors utility functions\n */\nexport default class Colors {\n  /**\n   * Convert LAB to XYZ\n   * http://www.easyrgb.com/index.php?X=MATH&H=08#text8\n   *\n   * @param {*} l\n   * @param {*} a\n   * @param {*} b\n   *\n   * @return {*}\n   */\n  public static cielab2XYZ(l: number, a: number, b: number) {\n    // https://www.mathworks.com/help/images/ref/whitepoint.html\n    // d65: 0.9504, 1, 1.0888\n    const refX = 95.047;\n    const refY = 100.0;\n    const refZ = 108.883;\n\n    let y = (l + 16) / 116;\n    let x = a / 500 + y;\n    let z = y - b / 200;\n\n    if (Math.pow(y, 3) > 0.008856) {\n      y = Math.pow(y, 3);\n    } else {\n      y = (y - 16 / 116) / 7.787;\n    }\n\n    if (Math.pow(x, 3) > 0.008856) {\n      x = Math.pow(x, 3);\n    } else {\n      x = (x - 16 / 116) / 7.787;\n    }\n\n    if (Math.pow(z, 3) > 0.008856) {\n      z = Math.pow(z, 3);\n    } else {\n      z = (z - 16 / 116) / 7.787;\n    }\n    return [refX * x, refY * y, refZ * z];\n  }\n\n  /**\n   * Convert XYZ to RGB space\n   *\n   * @param {*} x\n   * @param {*} y\n   * @param {*} z\n   *\n   * @return {*}\n   */\n  public static xyz2RGB(x: number, y: number, z: number) {\n    x /= 100;\n    y /= 100;\n    z /= 100;\n    let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    let b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n    if (r > 0.0031308) {\n      r = 1.055 * Math.pow(r, 1 / 2.4) - 0.055;\n    } else {\n      r = 12.92 * r;\n    }\n\n    if (g > 0.0031308) {\n      g = 1.055 * Math.pow(g, 1 / 2.4) - 0.055;\n    } else {\n      g = 12.92 * g;\n    }\n\n    if (b > 0.0031308) {\n      b = 1.055 * Math.pow(b, 1 / 2.4) - 0.055;\n    } else {\n      b = 12.92 * b;\n    }\n\n    r = r * 255;\n    g = g * 255;\n    b = b * 255;\n\n    return [r, g, b];\n  }\n\n  /**\n   * Convert LAB to RGB\n   *\n   * @param {*} l\n   * @param {*} a\n   * @param {*} b\n   *\n   * @return {*}\n   */\n  public static cielab2RGB(l: number = 50, a: number = 0, b: number = 0) {\n    if (!(l >= 0 && l <= 100)) {\n      return null;\n    }\n\n    const [x, y, z] = this.cielab2XYZ(l, a, b);\n    return this.xyz2RGB(x, y, z);\n  }\n}\n","'use strict';\n\n// MODULES //\n\nvar isString = require( 'validate.io-string-primitive' );\nvar isNonNegativeInteger = require( 'validate.io-nonnegative-integer' );\nvar ceil = require( 'math-ceil' );\nvar repeat = require( 'utils-repeat-string' );\n\n\n// CONSTANTS //\n\nvar MAX_SAFE_INTEGER = 9007199254740991; // 2**53 - 1\n\n\n// LEFT PAD //\n\n/**\n* FUNCTION: lpad( str, len[, pad] )\n*\tLeft pads a string such that the padded string has a length of at least `len`.\n*\n* @param {String} str - string to pad\n* @param {Number} len - minimum string length\n* @param {String} [pad=' '] - string used to pad\n* @returns {String} padded string\n*/\nfunction lpad( str, len, pad ) {\n\tvar n;\n\tvar p;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid input argument. First argument must be a string. Value: `' + str + '`.' );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Second argument must be a nonnegative integer. Value: `' + len + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tp = pad;\n\t\tif ( !isString( p ) ) {\n\t\t\tthrow new TypeError( 'invalid input argument. Third argument must be a string. Value: `' + p + '`.' );\n\t\t}\n\t\tif ( p.length === 0 ) {\n\t\t\tthrow new RangeError( 'invalid input argument. Pad string must not be an empty string.' );\n\t\t}\n\t} else {\n\t\tp = ' ';\n\t}\n\tif ( len > MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( 'invalid input argument. Output string length exceeds maximum allowed string length.' );\n\t}\n\tn = ( len - str.length ) / p.length;\n\tif ( n <= 0 ) {\n\t\treturn str;\n\t}\n\tn = ceil( n );\n\treturn repeat( p, n ) + str;\n} // end FUNCTION lpad()\n\n\n// EXPORTS //\n\nmodule.exports = lpad;\n","'use strict';\n\n// MODULES //\n\nvar isString = require( 'validate.io-string-primitive' );\nvar isNonNegativeInteger = require( 'validate.io-nonnegative-integer' );\n\n\n// NOTES //\n\n/**\n* The algorithmic trick used in the implementation is to treat string concatenation the same as binary addition (i.e., any natural number (nonnegative integer) can be expressed as a sum of powers of two).\n*\n* For example,\n*\n*  n = 10 => 1010 => 2^3 + 2^0 + 2^1 + 2^0\n*\n* We can produce a 10-repeat string by \"adding\" the results of a 8-repeat string and a 2-repeat string.\n*\n* The implementation is then as follows:\n*  : Let `s` be the string to be repeated and `o` be an output string.\n*  0) Initialize an output string `o`.\n*  1) Check the least significant bit to determine if the current `s` string should be \"added\" to the output \"total\".\n*     - if the bit is a one, add\n*     - otherwise, move on\n*  2) Double the string `s` by adding `s` to `s`.\n*  3) Right-shift the bits of `n`.\n*  4) Check if we have shifted off all bits.\n*     - if yes, done.\n*     - otherwise, move on\n*  5) Repeat 1-4.\n*\n* The result is that, as the string is repeated, we continually check to see if the doubled string is one which we want to add to our \"total\".\n*\n* The algorithm runs in O(log_2(n)) compared to O(n).\n*/\n\n\n// CONSTANTS //\n\nvar MAX_SAFE_INTEGER = 9007199254740991; // 2**53 - 1\n\n\n// REPEAT //\n\n/**\n* FUNCTION: repeat( str, n )\n*\tRepeats a string a specified number of times and returns the concatenated result.\n*\n* @param {String} str - string to repeat\n* @param {Number} n - number of times to repeat the string\n* @returns {String}\n*/\nfunction repeat( str, n ) {\n\tvar rpt;\n\tvar cnt;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid input argument. First argument must be a string. Value: `' + str + '`.' );\n\t}\n\tif ( !isNonNegativeInteger( n ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Second argument must be a nonnegative integer. Value: `' + n + '`.' );\n\t}\n\tif ( str.length === 0 || n === 0 ) {\n\t\treturn '';\n\t}\n\t// Check that output string will not exceed the maximum string length:\n\tif ( str.length * n > MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( 'invalid input argument. Output string length exceeds maximum allowed string length.' );\n\t}\n\trpt = '';\n\tcnt = n;\n\tfor( ; ; ) {\n\t\t// If the count is odd, append the current concatenated string:\n\t\tif ( (cnt&1) === 1 ) {\n\t\t\trpt += str;\n\t\t}\n\t\t// Right-shift the bits:\n\t\tcnt >>>= 1;\n\t\tif ( cnt === 0 ) {\n\t\t\tbreak;\n\t\t}\n\t\t// Double the string:\n\t\tstr += str;\n\t}\n\treturn rpt;\n} // end FUNCTION repeat()\n\n\n// EXPORTS //\n\nmodule.exports = repeat;\n","'use strict';\n\n// MODULES //\n\nvar isString = require( 'validate.io-string-primitive' );\nvar isNonNegativeInteger = require( 'validate.io-nonnegative-integer' );\nvar ceil = require( 'math-ceil' );\nvar repeat = require( 'utils-repeat-string' );\n\n\n// CONSTANTS //\n\nvar MAX_SAFE_INTEGER = 9007199254740991; // 2**53 - 1\n\n\n// RIGHT PAD //\n\n/**\n* FUNCTION: rpad( str, len[, pad] )\n*\tRight pads a string such that the padded string has a length of at least `len`.\n*\n* @param {String} str - string to pad\n* @param {Number} len - minimum string length\n* @param {String} [pad=' '] - string used to pad\n* @returns {String} padded string\n*/\nfunction rpad( str, len, pad ) {\n\tvar n;\n\tvar p;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid input argument. First argument must be a string. Value: `' + str + '`.' );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Second argument must be a nonnegative integer. Value: `' + len + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tp = pad;\n\t\tif ( !isString( p ) ) {\n\t\t\tthrow new TypeError( 'invalid input argument. Third argument must be a string. Value: `' + p + '`.' );\n\t\t}\n\t\tif ( p.length === 0 ) {\n\t\t\tthrow new RangeError( 'invalid input argument. Pad string must not be an empty string.' );\n\t\t}\n\t} else {\n\t\tp = ' ';\n\t}\n\tif ( len > MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( 'invalid input argument. Output string length exceeds maximum allowed string length.' );\n\t}\n\tn = ( len - str.length ) / p.length;\n\tif ( n <= 0 ) {\n\t\treturn str;\n\t}\n\tn = ceil( n );\n\treturn str + repeat( p, n );\n} // end FUNCTION rpad()\n\n\n// EXPORTS //\n\nmodule.exports = rpad;\n","/**\n*\n*\tVALIDATE: integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is an integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( 'validate.io-number' );\n\n\n// ISINTEGER //\n\n/**\n* FUNCTION: isInteger( value )\n*\tValidates if a value is an integer.\n*\n* @param {Number} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is an integer\n*/\nfunction isInteger( value ) {\n\treturn isNumber( value ) && value%1 === 0;\n} // end FUNCTION isInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n*\n*\tVALIDATE: nonnegative-integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a nonnegative integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( 'validate.io-integer' );\n\n\n// IS NONNEGATIVE INTEGER //\n\n/**\n* FUNCTION: isNonNegativeInteger( value )\n*\tValidates if a value is a nonnegative integer.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a nonnegative integer\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn isInteger( value ) && value >= 0;\n} // end FUNCTION isNonNegativeInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n*\n*\tVALIDATE: number\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a number.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isNumber( value )\n*\tValidates if a value is a number.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a number\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' || Object.prototype.toString.call( value ) === '[object Number]' ) && value.valueOf() === value.valueOf();\n} // end FUNCTION isNumber()\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {Boolean} boolean indicating if a value is a string primitive\n*/\nfunction isString( value ) {\n\treturn typeof value === 'string';\n} // end FUNCTION isString()\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(2533);\n"],"sourceRoot":""}